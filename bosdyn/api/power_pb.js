// source: bosdyn/api/power.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var bosdyn_api_header_pb = require('../../bosdyn/api/header_pb.js');
goog.object.extend(proto, bosdyn_api_header_pb);
var bosdyn_api_lease_pb = require('../../bosdyn/api/lease_pb.js');
goog.object.extend(proto, bosdyn_api_lease_pb);
var bosdyn_api_license_pb = require('../../bosdyn/api/license_pb.js');
goog.object.extend(proto, bosdyn_api_license_pb);
var bosdyn_api_robot_state_pb = require('../../bosdyn/api/robot_state_pb.js');
goog.object.extend(proto, bosdyn_api_robot_state_pb);
goog.exportSymbol('proto.bosdyn.api.PowerCommandFeedbackRequest', null, global);
goog.exportSymbol('proto.bosdyn.api.PowerCommandFeedbackResponse', null, global);
goog.exportSymbol('proto.bosdyn.api.PowerCommandRequest', null, global);
goog.exportSymbol('proto.bosdyn.api.PowerCommandRequest.Request', null, global);
goog.exportSymbol('proto.bosdyn.api.PowerCommandResponse', null, global);
goog.exportSymbol('proto.bosdyn.api.PowerCommandStatus', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.PowerCommandRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.PowerCommandRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.PowerCommandRequest.displayName = 'proto.bosdyn.api.PowerCommandRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.PowerCommandResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bosdyn.api.PowerCommandResponse.repeatedFields_, null);
};
goog.inherits(proto.bosdyn.api.PowerCommandResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.PowerCommandResponse.displayName = 'proto.bosdyn.api.PowerCommandResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.PowerCommandFeedbackRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.PowerCommandFeedbackRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.PowerCommandFeedbackRequest.displayName = 'proto.bosdyn.api.PowerCommandFeedbackRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.PowerCommandFeedbackResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bosdyn.api.PowerCommandFeedbackResponse.repeatedFields_, null);
};
goog.inherits(proto.bosdyn.api.PowerCommandFeedbackResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.PowerCommandFeedbackResponse.displayName = 'proto.bosdyn.api.PowerCommandFeedbackResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.PowerCommandRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.PowerCommandRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.PowerCommandRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.PowerCommandRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && bosdyn_api_header_pb.RequestHeader.toObject(includeInstance, f),
    lease: (f = msg.getLease()) && bosdyn_api_lease_pb.Lease.toObject(includeInstance, f),
    request: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.PowerCommandRequest}
 */
proto.bosdyn.api.PowerCommandRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.PowerCommandRequest;
  return proto.bosdyn.api.PowerCommandRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.PowerCommandRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.PowerCommandRequest}
 */
proto.bosdyn.api.PowerCommandRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new bosdyn_api_header_pb.RequestHeader;
      reader.readMessage(value,bosdyn_api_header_pb.RequestHeader.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 2:
      var value = new bosdyn_api_lease_pb.Lease;
      reader.readMessage(value,bosdyn_api_lease_pb.Lease.deserializeBinaryFromReader);
      msg.setLease(value);
      break;
    case 3:
      var value = /** @type {!proto.bosdyn.api.PowerCommandRequest.Request} */ (reader.readEnum());
      msg.setRequest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.PowerCommandRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.PowerCommandRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.PowerCommandRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.PowerCommandRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      bosdyn_api_header_pb.RequestHeader.serializeBinaryToWriter
    );
  }
  f = message.getLease();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      bosdyn_api_lease_pb.Lease.serializeBinaryToWriter
    );
  }
  f = message.getRequest();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.bosdyn.api.PowerCommandRequest.Request = {
  REQUEST_UNKNOWN: 0,
  REQUEST_OFF: 1,
  REQUEST_ON: 2,
  REQUEST_OFF_MOTORS: 1,
  REQUEST_ON_MOTORS: 2,
  REQUEST_OFF_ROBOT: 3,
  REQUEST_CYCLE_ROBOT: 4,
  REQUEST_OFF_PAYLOAD_PORTS: 5,
  REQUEST_ON_PAYLOAD_PORTS: 6,
  REQUEST_OFF_WIFI_RADIO: 7,
  REQUEST_ON_WIFI_RADIO: 8
};

/**
 * optional RequestHeader header = 1;
 * @return {?proto.bosdyn.api.RequestHeader}
 */
proto.bosdyn.api.PowerCommandRequest.prototype.getHeader = function() {
  return /** @type{?proto.bosdyn.api.RequestHeader} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_header_pb.RequestHeader, 1));
};


/**
 * @param {?proto.bosdyn.api.RequestHeader|undefined} value
 * @return {!proto.bosdyn.api.PowerCommandRequest} returns this
*/
proto.bosdyn.api.PowerCommandRequest.prototype.setHeader = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.PowerCommandRequest} returns this
 */
proto.bosdyn.api.PowerCommandRequest.prototype.clearHeader = function() {
  return this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.PowerCommandRequest.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Lease lease = 2;
 * @return {?proto.bosdyn.api.Lease}
 */
proto.bosdyn.api.PowerCommandRequest.prototype.getLease = function() {
  return /** @type{?proto.bosdyn.api.Lease} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_lease_pb.Lease, 2));
};


/**
 * @param {?proto.bosdyn.api.Lease|undefined} value
 * @return {!proto.bosdyn.api.PowerCommandRequest} returns this
*/
proto.bosdyn.api.PowerCommandRequest.prototype.setLease = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.PowerCommandRequest} returns this
 */
proto.bosdyn.api.PowerCommandRequest.prototype.clearLease = function() {
  return this.setLease(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.PowerCommandRequest.prototype.hasLease = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Request request = 3;
 * @return {!proto.bosdyn.api.PowerCommandRequest.Request}
 */
proto.bosdyn.api.PowerCommandRequest.prototype.getRequest = function() {
  return /** @type {!proto.bosdyn.api.PowerCommandRequest.Request} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.bosdyn.api.PowerCommandRequest.Request} value
 * @return {!proto.bosdyn.api.PowerCommandRequest} returns this
 */
proto.bosdyn.api.PowerCommandRequest.prototype.setRequest = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bosdyn.api.PowerCommandResponse.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.PowerCommandResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.PowerCommandResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.PowerCommandResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.PowerCommandResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && bosdyn_api_header_pb.ResponseHeader.toObject(includeInstance, f),
    leaseUseResult: (f = msg.getLeaseUseResult()) && bosdyn_api_lease_pb.LeaseUseResult.toObject(includeInstance, f),
    status: jspb.Message.getFieldWithDefault(msg, 3, 0),
    powerCommandId: jspb.Message.getFieldWithDefault(msg, 4, 0),
    licenseStatus: jspb.Message.getFieldWithDefault(msg, 5, 0),
    blockingFaultsList: jspb.Message.toObjectList(msg.getBlockingFaultsList(),
    bosdyn_api_robot_state_pb.SystemFault.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.PowerCommandResponse}
 */
proto.bosdyn.api.PowerCommandResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.PowerCommandResponse;
  return proto.bosdyn.api.PowerCommandResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.PowerCommandResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.PowerCommandResponse}
 */
proto.bosdyn.api.PowerCommandResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new bosdyn_api_header_pb.ResponseHeader;
      reader.readMessage(value,bosdyn_api_header_pb.ResponseHeader.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 2:
      var value = new bosdyn_api_lease_pb.LeaseUseResult;
      reader.readMessage(value,bosdyn_api_lease_pb.LeaseUseResult.deserializeBinaryFromReader);
      msg.setLeaseUseResult(value);
      break;
    case 3:
      var value = /** @type {!proto.bosdyn.api.PowerCommandStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPowerCommandId(value);
      break;
    case 5:
      var value = /** @type {!proto.bosdyn.api.LicenseInfo.Status} */ (reader.readEnum());
      msg.setLicenseStatus(value);
      break;
    case 6:
      var value = new bosdyn_api_robot_state_pb.SystemFault;
      reader.readMessage(value,bosdyn_api_robot_state_pb.SystemFault.deserializeBinaryFromReader);
      msg.addBlockingFaults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.PowerCommandResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.PowerCommandResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.PowerCommandResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.PowerCommandResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      bosdyn_api_header_pb.ResponseHeader.serializeBinaryToWriter
    );
  }
  f = message.getLeaseUseResult();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      bosdyn_api_lease_pb.LeaseUseResult.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getPowerCommandId();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getLicenseStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getBlockingFaultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      bosdyn_api_robot_state_pb.SystemFault.serializeBinaryToWriter
    );
  }
};


/**
 * optional ResponseHeader header = 1;
 * @return {?proto.bosdyn.api.ResponseHeader}
 */
proto.bosdyn.api.PowerCommandResponse.prototype.getHeader = function() {
  return /** @type{?proto.bosdyn.api.ResponseHeader} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_header_pb.ResponseHeader, 1));
};


/**
 * @param {?proto.bosdyn.api.ResponseHeader|undefined} value
 * @return {!proto.bosdyn.api.PowerCommandResponse} returns this
*/
proto.bosdyn.api.PowerCommandResponse.prototype.setHeader = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.PowerCommandResponse} returns this
 */
proto.bosdyn.api.PowerCommandResponse.prototype.clearHeader = function() {
  return this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.PowerCommandResponse.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional LeaseUseResult lease_use_result = 2;
 * @return {?proto.bosdyn.api.LeaseUseResult}
 */
proto.bosdyn.api.PowerCommandResponse.prototype.getLeaseUseResult = function() {
  return /** @type{?proto.bosdyn.api.LeaseUseResult} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_lease_pb.LeaseUseResult, 2));
};


/**
 * @param {?proto.bosdyn.api.LeaseUseResult|undefined} value
 * @return {!proto.bosdyn.api.PowerCommandResponse} returns this
*/
proto.bosdyn.api.PowerCommandResponse.prototype.setLeaseUseResult = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.PowerCommandResponse} returns this
 */
proto.bosdyn.api.PowerCommandResponse.prototype.clearLeaseUseResult = function() {
  return this.setLeaseUseResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.PowerCommandResponse.prototype.hasLeaseUseResult = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional PowerCommandStatus status = 3;
 * @return {!proto.bosdyn.api.PowerCommandStatus}
 */
proto.bosdyn.api.PowerCommandResponse.prototype.getStatus = function() {
  return /** @type {!proto.bosdyn.api.PowerCommandStatus} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.bosdyn.api.PowerCommandStatus} value
 * @return {!proto.bosdyn.api.PowerCommandResponse} returns this
 */
proto.bosdyn.api.PowerCommandResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional uint32 power_command_id = 4;
 * @return {number}
 */
proto.bosdyn.api.PowerCommandResponse.prototype.getPowerCommandId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.bosdyn.api.PowerCommandResponse} returns this
 */
proto.bosdyn.api.PowerCommandResponse.prototype.setPowerCommandId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional LicenseInfo.Status license_status = 5;
 * @return {!proto.bosdyn.api.LicenseInfo.Status}
 */
proto.bosdyn.api.PowerCommandResponse.prototype.getLicenseStatus = function() {
  return /** @type {!proto.bosdyn.api.LicenseInfo.Status} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.bosdyn.api.LicenseInfo.Status} value
 * @return {!proto.bosdyn.api.PowerCommandResponse} returns this
 */
proto.bosdyn.api.PowerCommandResponse.prototype.setLicenseStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * repeated SystemFault blocking_faults = 6;
 * @return {!Array<!proto.bosdyn.api.SystemFault>}
 */
proto.bosdyn.api.PowerCommandResponse.prototype.getBlockingFaultsList = function() {
  return /** @type{!Array<!proto.bosdyn.api.SystemFault>} */ (
    jspb.Message.getRepeatedWrapperField(this, bosdyn_api_robot_state_pb.SystemFault, 6));
};


/**
 * @param {!Array<!proto.bosdyn.api.SystemFault>} value
 * @return {!proto.bosdyn.api.PowerCommandResponse} returns this
*/
proto.bosdyn.api.PowerCommandResponse.prototype.setBlockingFaultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.bosdyn.api.SystemFault=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bosdyn.api.SystemFault}
 */
proto.bosdyn.api.PowerCommandResponse.prototype.addBlockingFaults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.bosdyn.api.SystemFault, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bosdyn.api.PowerCommandResponse} returns this
 */
proto.bosdyn.api.PowerCommandResponse.prototype.clearBlockingFaultsList = function() {
  return this.setBlockingFaultsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.PowerCommandFeedbackRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.PowerCommandFeedbackRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.PowerCommandFeedbackRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.PowerCommandFeedbackRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && bosdyn_api_header_pb.RequestHeader.toObject(includeInstance, f),
    powerCommandId: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.PowerCommandFeedbackRequest}
 */
proto.bosdyn.api.PowerCommandFeedbackRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.PowerCommandFeedbackRequest;
  return proto.bosdyn.api.PowerCommandFeedbackRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.PowerCommandFeedbackRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.PowerCommandFeedbackRequest}
 */
proto.bosdyn.api.PowerCommandFeedbackRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new bosdyn_api_header_pb.RequestHeader;
      reader.readMessage(value,bosdyn_api_header_pb.RequestHeader.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPowerCommandId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.PowerCommandFeedbackRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.PowerCommandFeedbackRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.PowerCommandFeedbackRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.PowerCommandFeedbackRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      bosdyn_api_header_pb.RequestHeader.serializeBinaryToWriter
    );
  }
  f = message.getPowerCommandId();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional RequestHeader header = 1;
 * @return {?proto.bosdyn.api.RequestHeader}
 */
proto.bosdyn.api.PowerCommandFeedbackRequest.prototype.getHeader = function() {
  return /** @type{?proto.bosdyn.api.RequestHeader} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_header_pb.RequestHeader, 1));
};


/**
 * @param {?proto.bosdyn.api.RequestHeader|undefined} value
 * @return {!proto.bosdyn.api.PowerCommandFeedbackRequest} returns this
*/
proto.bosdyn.api.PowerCommandFeedbackRequest.prototype.setHeader = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.PowerCommandFeedbackRequest} returns this
 */
proto.bosdyn.api.PowerCommandFeedbackRequest.prototype.clearHeader = function() {
  return this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.PowerCommandFeedbackRequest.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 power_command_id = 2;
 * @return {number}
 */
proto.bosdyn.api.PowerCommandFeedbackRequest.prototype.getPowerCommandId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.bosdyn.api.PowerCommandFeedbackRequest} returns this
 */
proto.bosdyn.api.PowerCommandFeedbackRequest.prototype.setPowerCommandId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bosdyn.api.PowerCommandFeedbackResponse.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.PowerCommandFeedbackResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.PowerCommandFeedbackResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.PowerCommandFeedbackResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.PowerCommandFeedbackResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && bosdyn_api_header_pb.ResponseHeader.toObject(includeInstance, f),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0),
    blockingFaultsList: jspb.Message.toObjectList(msg.getBlockingFaultsList(),
    bosdyn_api_robot_state_pb.SystemFault.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.PowerCommandFeedbackResponse}
 */
proto.bosdyn.api.PowerCommandFeedbackResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.PowerCommandFeedbackResponse;
  return proto.bosdyn.api.PowerCommandFeedbackResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.PowerCommandFeedbackResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.PowerCommandFeedbackResponse}
 */
proto.bosdyn.api.PowerCommandFeedbackResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new bosdyn_api_header_pb.ResponseHeader;
      reader.readMessage(value,bosdyn_api_header_pb.ResponseHeader.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 2:
      var value = /** @type {!proto.bosdyn.api.PowerCommandStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 3:
      var value = new bosdyn_api_robot_state_pb.SystemFault;
      reader.readMessage(value,bosdyn_api_robot_state_pb.SystemFault.deserializeBinaryFromReader);
      msg.addBlockingFaults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.PowerCommandFeedbackResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.PowerCommandFeedbackResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.PowerCommandFeedbackResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.PowerCommandFeedbackResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      bosdyn_api_header_pb.ResponseHeader.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getBlockingFaultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      bosdyn_api_robot_state_pb.SystemFault.serializeBinaryToWriter
    );
  }
};


/**
 * optional ResponseHeader header = 1;
 * @return {?proto.bosdyn.api.ResponseHeader}
 */
proto.bosdyn.api.PowerCommandFeedbackResponse.prototype.getHeader = function() {
  return /** @type{?proto.bosdyn.api.ResponseHeader} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_header_pb.ResponseHeader, 1));
};


/**
 * @param {?proto.bosdyn.api.ResponseHeader|undefined} value
 * @return {!proto.bosdyn.api.PowerCommandFeedbackResponse} returns this
*/
proto.bosdyn.api.PowerCommandFeedbackResponse.prototype.setHeader = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.PowerCommandFeedbackResponse} returns this
 */
proto.bosdyn.api.PowerCommandFeedbackResponse.prototype.clearHeader = function() {
  return this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.PowerCommandFeedbackResponse.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional PowerCommandStatus status = 2;
 * @return {!proto.bosdyn.api.PowerCommandStatus}
 */
proto.bosdyn.api.PowerCommandFeedbackResponse.prototype.getStatus = function() {
  return /** @type {!proto.bosdyn.api.PowerCommandStatus} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.bosdyn.api.PowerCommandStatus} value
 * @return {!proto.bosdyn.api.PowerCommandFeedbackResponse} returns this
 */
proto.bosdyn.api.PowerCommandFeedbackResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * repeated SystemFault blocking_faults = 3;
 * @return {!Array<!proto.bosdyn.api.SystemFault>}
 */
proto.bosdyn.api.PowerCommandFeedbackResponse.prototype.getBlockingFaultsList = function() {
  return /** @type{!Array<!proto.bosdyn.api.SystemFault>} */ (
    jspb.Message.getRepeatedWrapperField(this, bosdyn_api_robot_state_pb.SystemFault, 3));
};


/**
 * @param {!Array<!proto.bosdyn.api.SystemFault>} value
 * @return {!proto.bosdyn.api.PowerCommandFeedbackResponse} returns this
*/
proto.bosdyn.api.PowerCommandFeedbackResponse.prototype.setBlockingFaultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.bosdyn.api.SystemFault=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bosdyn.api.SystemFault}
 */
proto.bosdyn.api.PowerCommandFeedbackResponse.prototype.addBlockingFaults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.bosdyn.api.SystemFault, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bosdyn.api.PowerCommandFeedbackResponse} returns this
 */
proto.bosdyn.api.PowerCommandFeedbackResponse.prototype.clearBlockingFaultsList = function() {
  return this.setBlockingFaultsList([]);
};


/**
 * @enum {number}
 */
proto.bosdyn.api.PowerCommandStatus = {
  STATUS_UNKNOWN: 0,
  STATUS_IN_PROGRESS: 1,
  STATUS_SUCCESS: 2,
  STATUS_SHORE_POWER_CONNECTED: 3,
  STATUS_BATTERY_MISSING: 4,
  STATUS_COMMAND_IN_PROGRESS: 5,
  STATUS_ESTOPPED: 6,
  STATUS_FAULTED: 7,
  STATUS_INTERNAL_ERROR: 8,
  STATUS_LICENSE_ERROR: 9,
  INCOMPATIBLE_HARDWARE_ERROR: 10,
  STATUS_OVERRIDDEN: 11
};

goog.object.extend(exports, proto.bosdyn.api);
