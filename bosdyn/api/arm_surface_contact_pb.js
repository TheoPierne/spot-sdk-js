// source: bosdyn/api/arm_surface_contact.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var bosdyn_api_geometry_pb = require('../../bosdyn/api/geometry_pb.js');
goog.object.extend(proto, bosdyn_api_geometry_pb);
var bosdyn_api_gripper_command_pb = require('../../bosdyn/api/gripper_command_pb.js');
goog.object.extend(proto, bosdyn_api_gripper_command_pb);
var bosdyn_api_trajectory_pb = require('../../bosdyn/api/trajectory_pb.js');
goog.object.extend(proto, bosdyn_api_trajectory_pb);
var bosdyn_api_arm_command_pb = require('../../bosdyn/api/arm_command_pb.js');
goog.object.extend(proto, bosdyn_api_arm_command_pb);
var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
goog.object.extend(proto, google_protobuf_wrappers_pb);
goog.exportSymbol('proto.bosdyn.api.ArmSurfaceContact', null, global);
goog.exportSymbol('proto.bosdyn.api.ArmSurfaceContact.Feedback', null, global);
goog.exportSymbol('proto.bosdyn.api.ArmSurfaceContact.Request', null, global);
goog.exportSymbol('proto.bosdyn.api.ArmSurfaceContact.Request.AdmittanceSetting', null, global);
goog.exportSymbol('proto.bosdyn.api.ArmSurfaceContact.Request.AxisMode', null, global);
goog.exportSymbol('proto.bosdyn.api.ArmSurfaceContact.Request.JointConfigurationCase', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.ArmSurfaceContact = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.ArmSurfaceContact, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.ArmSurfaceContact.displayName = 'proto.bosdyn.api.ArmSurfaceContact';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.ArmSurfaceContact.Request = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.bosdyn.api.ArmSurfaceContact.Request.oneofGroups_);
};
goog.inherits(proto.bosdyn.api.ArmSurfaceContact.Request, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.ArmSurfaceContact.Request.displayName = 'proto.bosdyn.api.ArmSurfaceContact.Request';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.ArmSurfaceContact.Feedback = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.ArmSurfaceContact.Feedback, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.ArmSurfaceContact.Feedback.displayName = 'proto.bosdyn.api.ArmSurfaceContact.Feedback';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.ArmSurfaceContact.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.ArmSurfaceContact.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.ArmSurfaceContact} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.ArmSurfaceContact.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.ArmSurfaceContact}
 */
proto.bosdyn.api.ArmSurfaceContact.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.ArmSurfaceContact;
  return proto.bosdyn.api.ArmSurfaceContact.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.ArmSurfaceContact} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.ArmSurfaceContact}
 */
proto.bosdyn.api.ArmSurfaceContact.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.ArmSurfaceContact.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.ArmSurfaceContact.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.ArmSurfaceContact} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.ArmSurfaceContact.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.bosdyn.api.ArmSurfaceContact.Request.oneofGroups_ = [[15,16]];

/**
 * @enum {number}
 */
proto.bosdyn.api.ArmSurfaceContact.Request.JointConfigurationCase = {
  JOINT_CONFIGURATION_NOT_SET: 0,
  FORCE_REMAIN_NEAR_CURRENT_JOINT_CONFIGURATION: 15,
  PREFERRED_JOINT_CONFIGURATION: 16
};

/**
 * @return {proto.bosdyn.api.ArmSurfaceContact.Request.JointConfigurationCase}
 */
proto.bosdyn.api.ArmSurfaceContact.Request.prototype.getJointConfigurationCase = function() {
  return /** @type {proto.bosdyn.api.ArmSurfaceContact.Request.JointConfigurationCase} */(jspb.Message.computeOneofCase(this, proto.bosdyn.api.ArmSurfaceContact.Request.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.ArmSurfaceContact.Request.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.ArmSurfaceContact.Request.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.ArmSurfaceContact.Request} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.ArmSurfaceContact.Request.toObject = function(includeInstance, msg) {
  var f, obj = {
    rootFrameName: jspb.Message.getFieldWithDefault(msg, 25, ""),
    wristTformTool: (f = msg.getWristTformTool()) && bosdyn_api_geometry_pb.SE3Pose.toObject(includeInstance, f),
    rootTformTask: (f = msg.getRootTformTask()) && bosdyn_api_geometry_pb.SE3Pose.toObject(includeInstance, f),
    poseTrajectoryInTask: (f = msg.getPoseTrajectoryInTask()) && bosdyn_api_trajectory_pb.SE3Trajectory.toObject(includeInstance, f),
    maximumAcceleration: (f = msg.getMaximumAcceleration()) && google_protobuf_wrappers_pb.DoubleValue.toObject(includeInstance, f),
    maxLinearVelocity: (f = msg.getMaxLinearVelocity()) && google_protobuf_wrappers_pb.DoubleValue.toObject(includeInstance, f),
    maxAngularVelocity: (f = msg.getMaxAngularVelocity()) && google_protobuf_wrappers_pb.DoubleValue.toObject(includeInstance, f),
    maxPosTrackingError: (f = msg.getMaxPosTrackingError()) && google_protobuf_wrappers_pb.DoubleValue.toObject(includeInstance, f),
    maxRotTrackingError: (f = msg.getMaxRotTrackingError()) && google_protobuf_wrappers_pb.DoubleValue.toObject(includeInstance, f),
    forceRemainNearCurrentJointConfiguration: jspb.Message.getBooleanFieldWithDefault(msg, 15, false),
    preferredJointConfiguration: (f = msg.getPreferredJointConfiguration()) && bosdyn_api_arm_command_pb.ArmJointPosition.toObject(includeInstance, f),
    xAxis: jspb.Message.getFieldWithDefault(msg, 8, 0),
    yAxis: jspb.Message.getFieldWithDefault(msg, 9, 0),
    zAxis: jspb.Message.getFieldWithDefault(msg, 10, 0),
    pressForcePercentage: (f = msg.getPressForcePercentage()) && bosdyn_api_geometry_pb.Vec3.toObject(includeInstance, f),
    xyAdmittance: jspb.Message.getFieldWithDefault(msg, 21, 0),
    zAdmittance: jspb.Message.getFieldWithDefault(msg, 22, 0),
    xyToZCrossTermAdmittance: jspb.Message.getFieldWithDefault(msg, 17, 0),
    biasForceEwrtBody: (f = msg.getBiasForceEwrtBody()) && bosdyn_api_geometry_pb.Vec3.toObject(includeInstance, f),
    gripperCommand: (f = msg.getGripperCommand()) && bosdyn_api_gripper_command_pb.ClawGripperCommand.Request.toObject(includeInstance, f),
    isRobotFollowingHand: jspb.Message.getBooleanFieldWithDefault(msg, 24, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.ArmSurfaceContact.Request}
 */
proto.bosdyn.api.ArmSurfaceContact.Request.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.ArmSurfaceContact.Request;
  return proto.bosdyn.api.ArmSurfaceContact.Request.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.ArmSurfaceContact.Request} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.ArmSurfaceContact.Request}
 */
proto.bosdyn.api.ArmSurfaceContact.Request.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 25:
      var value = /** @type {string} */ (reader.readString());
      msg.setRootFrameName(value);
      break;
    case 6:
      var value = new bosdyn_api_geometry_pb.SE3Pose;
      reader.readMessage(value,bosdyn_api_geometry_pb.SE3Pose.deserializeBinaryFromReader);
      msg.setWristTformTool(value);
      break;
    case 26:
      var value = new bosdyn_api_geometry_pb.SE3Pose;
      reader.readMessage(value,bosdyn_api_geometry_pb.SE3Pose.deserializeBinaryFromReader);
      msg.setRootTformTask(value);
      break;
    case 2:
      var value = new bosdyn_api_trajectory_pb.SE3Trajectory;
      reader.readMessage(value,bosdyn_api_trajectory_pb.SE3Trajectory.deserializeBinaryFromReader);
      msg.setPoseTrajectoryInTask(value);
      break;
    case 3:
      var value = new google_protobuf_wrappers_pb.DoubleValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.DoubleValue.deserializeBinaryFromReader);
      msg.setMaximumAcceleration(value);
      break;
    case 4:
      var value = new google_protobuf_wrappers_pb.DoubleValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.DoubleValue.deserializeBinaryFromReader);
      msg.setMaxLinearVelocity(value);
      break;
    case 5:
      var value = new google_protobuf_wrappers_pb.DoubleValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.DoubleValue.deserializeBinaryFromReader);
      msg.setMaxAngularVelocity(value);
      break;
    case 18:
      var value = new google_protobuf_wrappers_pb.DoubleValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.DoubleValue.deserializeBinaryFromReader);
      msg.setMaxPosTrackingError(value);
      break;
    case 19:
      var value = new google_protobuf_wrappers_pb.DoubleValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.DoubleValue.deserializeBinaryFromReader);
      msg.setMaxRotTrackingError(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setForceRemainNearCurrentJointConfiguration(value);
      break;
    case 16:
      var value = new bosdyn_api_arm_command_pb.ArmJointPosition;
      reader.readMessage(value,bosdyn_api_arm_command_pb.ArmJointPosition.deserializeBinaryFromReader);
      msg.setPreferredJointConfiguration(value);
      break;
    case 8:
      var value = /** @type {!proto.bosdyn.api.ArmSurfaceContact.Request.AxisMode} */ (reader.readEnum());
      msg.setXAxis(value);
      break;
    case 9:
      var value = /** @type {!proto.bosdyn.api.ArmSurfaceContact.Request.AxisMode} */ (reader.readEnum());
      msg.setYAxis(value);
      break;
    case 10:
      var value = /** @type {!proto.bosdyn.api.ArmSurfaceContact.Request.AxisMode} */ (reader.readEnum());
      msg.setZAxis(value);
      break;
    case 12:
      var value = new bosdyn_api_geometry_pb.Vec3;
      reader.readMessage(value,bosdyn_api_geometry_pb.Vec3.deserializeBinaryFromReader);
      msg.setPressForcePercentage(value);
      break;
    case 21:
      var value = /** @type {!proto.bosdyn.api.ArmSurfaceContact.Request.AdmittanceSetting} */ (reader.readEnum());
      msg.setXyAdmittance(value);
      break;
    case 22:
      var value = /** @type {!proto.bosdyn.api.ArmSurfaceContact.Request.AdmittanceSetting} */ (reader.readEnum());
      msg.setZAdmittance(value);
      break;
    case 17:
      var value = /** @type {!proto.bosdyn.api.ArmSurfaceContact.Request.AdmittanceSetting} */ (reader.readEnum());
      msg.setXyToZCrossTermAdmittance(value);
      break;
    case 20:
      var value = new bosdyn_api_geometry_pb.Vec3;
      reader.readMessage(value,bosdyn_api_geometry_pb.Vec3.deserializeBinaryFromReader);
      msg.setBiasForceEwrtBody(value);
      break;
    case 23:
      var value = new bosdyn_api_gripper_command_pb.ClawGripperCommand.Request;
      reader.readMessage(value,bosdyn_api_gripper_command_pb.ClawGripperCommand.Request.deserializeBinaryFromReader);
      msg.setGripperCommand(value);
      break;
    case 24:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsRobotFollowingHand(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.ArmSurfaceContact.Request.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.ArmSurfaceContact.Request.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.ArmSurfaceContact.Request} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.ArmSurfaceContact.Request.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRootFrameName();
  if (f.length > 0) {
    writer.writeString(
      25,
      f
    );
  }
  f = message.getWristTformTool();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      bosdyn_api_geometry_pb.SE3Pose.serializeBinaryToWriter
    );
  }
  f = message.getRootTformTask();
  if (f != null) {
    writer.writeMessage(
      26,
      f,
      bosdyn_api_geometry_pb.SE3Pose.serializeBinaryToWriter
    );
  }
  f = message.getPoseTrajectoryInTask();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      bosdyn_api_trajectory_pb.SE3Trajectory.serializeBinaryToWriter
    );
  }
  f = message.getMaximumAcceleration();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_wrappers_pb.DoubleValue.serializeBinaryToWriter
    );
  }
  f = message.getMaxLinearVelocity();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_wrappers_pb.DoubleValue.serializeBinaryToWriter
    );
  }
  f = message.getMaxAngularVelocity();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_wrappers_pb.DoubleValue.serializeBinaryToWriter
    );
  }
  f = message.getMaxPosTrackingError();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      google_protobuf_wrappers_pb.DoubleValue.serializeBinaryToWriter
    );
  }
  f = message.getMaxRotTrackingError();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      google_protobuf_wrappers_pb.DoubleValue.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeBool(
      15,
      f
    );
  }
  f = message.getPreferredJointConfiguration();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      bosdyn_api_arm_command_pb.ArmJointPosition.serializeBinaryToWriter
    );
  }
  f = message.getXAxis();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
  f = message.getYAxis();
  if (f !== 0.0) {
    writer.writeEnum(
      9,
      f
    );
  }
  f = message.getZAxis();
  if (f !== 0.0) {
    writer.writeEnum(
      10,
      f
    );
  }
  f = message.getPressForcePercentage();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      bosdyn_api_geometry_pb.Vec3.serializeBinaryToWriter
    );
  }
  f = message.getXyAdmittance();
  if (f !== 0.0) {
    writer.writeEnum(
      21,
      f
    );
  }
  f = message.getZAdmittance();
  if (f !== 0.0) {
    writer.writeEnum(
      22,
      f
    );
  }
  f = message.getXyToZCrossTermAdmittance();
  if (f !== 0.0) {
    writer.writeEnum(
      17,
      f
    );
  }
  f = message.getBiasForceEwrtBody();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      bosdyn_api_geometry_pb.Vec3.serializeBinaryToWriter
    );
  }
  f = message.getGripperCommand();
  if (f != null) {
    writer.writeMessage(
      23,
      f,
      bosdyn_api_gripper_command_pb.ClawGripperCommand.Request.serializeBinaryToWriter
    );
  }
  f = message.getIsRobotFollowingHand();
  if (f) {
    writer.writeBool(
      24,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.bosdyn.api.ArmSurfaceContact.Request.AxisMode = {
  AXIS_MODE_POSITION: 0,
  AXIS_MODE_FORCE: 1
};

/**
 * @enum {number}
 */
proto.bosdyn.api.ArmSurfaceContact.Request.AdmittanceSetting = {
  ADMITTANCE_SETTING_UNKNOWN: 0,
  ADMITTANCE_SETTING_OFF: 1,
  ADMITTANCE_SETTING_NORMAL: 2,
  ADMITTANCE_SETTING_LOOSE: 3,
  ADMITTANCE_SETTING_STIFF: 4,
  ADMITTANCE_SETTING_VERY_STIFF: 5
};

/**
 * optional string root_frame_name = 25;
 * @return {string}
 */
proto.bosdyn.api.ArmSurfaceContact.Request.prototype.getRootFrameName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 25, ""));
};


/**
 * @param {string} value
 * @return {!proto.bosdyn.api.ArmSurfaceContact.Request} returns this
 */
proto.bosdyn.api.ArmSurfaceContact.Request.prototype.setRootFrameName = function(value) {
  return jspb.Message.setProto3StringField(this, 25, value);
};


/**
 * optional SE3Pose wrist_tform_tool = 6;
 * @return {?proto.bosdyn.api.SE3Pose}
 */
proto.bosdyn.api.ArmSurfaceContact.Request.prototype.getWristTformTool = function() {
  return /** @type{?proto.bosdyn.api.SE3Pose} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_geometry_pb.SE3Pose, 6));
};


/**
 * @param {?proto.bosdyn.api.SE3Pose|undefined} value
 * @return {!proto.bosdyn.api.ArmSurfaceContact.Request} returns this
*/
proto.bosdyn.api.ArmSurfaceContact.Request.prototype.setWristTformTool = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.ArmSurfaceContact.Request} returns this
 */
proto.bosdyn.api.ArmSurfaceContact.Request.prototype.clearWristTformTool = function() {
  return this.setWristTformTool(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.ArmSurfaceContact.Request.prototype.hasWristTformTool = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional SE3Pose root_tform_task = 26;
 * @return {?proto.bosdyn.api.SE3Pose}
 */
proto.bosdyn.api.ArmSurfaceContact.Request.prototype.getRootTformTask = function() {
  return /** @type{?proto.bosdyn.api.SE3Pose} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_geometry_pb.SE3Pose, 26));
};


/**
 * @param {?proto.bosdyn.api.SE3Pose|undefined} value
 * @return {!proto.bosdyn.api.ArmSurfaceContact.Request} returns this
*/
proto.bosdyn.api.ArmSurfaceContact.Request.prototype.setRootTformTask = function(value) {
  return jspb.Message.setWrapperField(this, 26, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.ArmSurfaceContact.Request} returns this
 */
proto.bosdyn.api.ArmSurfaceContact.Request.prototype.clearRootTformTask = function() {
  return this.setRootTformTask(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.ArmSurfaceContact.Request.prototype.hasRootTformTask = function() {
  return jspb.Message.getField(this, 26) != null;
};


/**
 * optional SE3Trajectory pose_trajectory_in_task = 2;
 * @return {?proto.bosdyn.api.SE3Trajectory}
 */
proto.bosdyn.api.ArmSurfaceContact.Request.prototype.getPoseTrajectoryInTask = function() {
  return /** @type{?proto.bosdyn.api.SE3Trajectory} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_trajectory_pb.SE3Trajectory, 2));
};


/**
 * @param {?proto.bosdyn.api.SE3Trajectory|undefined} value
 * @return {!proto.bosdyn.api.ArmSurfaceContact.Request} returns this
*/
proto.bosdyn.api.ArmSurfaceContact.Request.prototype.setPoseTrajectoryInTask = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.ArmSurfaceContact.Request} returns this
 */
proto.bosdyn.api.ArmSurfaceContact.Request.prototype.clearPoseTrajectoryInTask = function() {
  return this.setPoseTrajectoryInTask(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.ArmSurfaceContact.Request.prototype.hasPoseTrajectoryInTask = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.DoubleValue maximum_acceleration = 3;
 * @return {?proto.google.protobuf.DoubleValue}
 */
proto.bosdyn.api.ArmSurfaceContact.Request.prototype.getMaximumAcceleration = function() {
  return /** @type{?proto.google.protobuf.DoubleValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.DoubleValue, 3));
};


/**
 * @param {?proto.google.protobuf.DoubleValue|undefined} value
 * @return {!proto.bosdyn.api.ArmSurfaceContact.Request} returns this
*/
proto.bosdyn.api.ArmSurfaceContact.Request.prototype.setMaximumAcceleration = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.ArmSurfaceContact.Request} returns this
 */
proto.bosdyn.api.ArmSurfaceContact.Request.prototype.clearMaximumAcceleration = function() {
  return this.setMaximumAcceleration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.ArmSurfaceContact.Request.prototype.hasMaximumAcceleration = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional google.protobuf.DoubleValue max_linear_velocity = 4;
 * @return {?proto.google.protobuf.DoubleValue}
 */
proto.bosdyn.api.ArmSurfaceContact.Request.prototype.getMaxLinearVelocity = function() {
  return /** @type{?proto.google.protobuf.DoubleValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.DoubleValue, 4));
};


/**
 * @param {?proto.google.protobuf.DoubleValue|undefined} value
 * @return {!proto.bosdyn.api.ArmSurfaceContact.Request} returns this
*/
proto.bosdyn.api.ArmSurfaceContact.Request.prototype.setMaxLinearVelocity = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.ArmSurfaceContact.Request} returns this
 */
proto.bosdyn.api.ArmSurfaceContact.Request.prototype.clearMaxLinearVelocity = function() {
  return this.setMaxLinearVelocity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.ArmSurfaceContact.Request.prototype.hasMaxLinearVelocity = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional google.protobuf.DoubleValue max_angular_velocity = 5;
 * @return {?proto.google.protobuf.DoubleValue}
 */
proto.bosdyn.api.ArmSurfaceContact.Request.prototype.getMaxAngularVelocity = function() {
  return /** @type{?proto.google.protobuf.DoubleValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.DoubleValue, 5));
};


/**
 * @param {?proto.google.protobuf.DoubleValue|undefined} value
 * @return {!proto.bosdyn.api.ArmSurfaceContact.Request} returns this
*/
proto.bosdyn.api.ArmSurfaceContact.Request.prototype.setMaxAngularVelocity = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.ArmSurfaceContact.Request} returns this
 */
proto.bosdyn.api.ArmSurfaceContact.Request.prototype.clearMaxAngularVelocity = function() {
  return this.setMaxAngularVelocity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.ArmSurfaceContact.Request.prototype.hasMaxAngularVelocity = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional google.protobuf.DoubleValue max_pos_tracking_error = 18;
 * @return {?proto.google.protobuf.DoubleValue}
 */
proto.bosdyn.api.ArmSurfaceContact.Request.prototype.getMaxPosTrackingError = function() {
  return /** @type{?proto.google.protobuf.DoubleValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.DoubleValue, 18));
};


/**
 * @param {?proto.google.protobuf.DoubleValue|undefined} value
 * @return {!proto.bosdyn.api.ArmSurfaceContact.Request} returns this
*/
proto.bosdyn.api.ArmSurfaceContact.Request.prototype.setMaxPosTrackingError = function(value) {
  return jspb.Message.setWrapperField(this, 18, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.ArmSurfaceContact.Request} returns this
 */
proto.bosdyn.api.ArmSurfaceContact.Request.prototype.clearMaxPosTrackingError = function() {
  return this.setMaxPosTrackingError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.ArmSurfaceContact.Request.prototype.hasMaxPosTrackingError = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional google.protobuf.DoubleValue max_rot_tracking_error = 19;
 * @return {?proto.google.protobuf.DoubleValue}
 */
proto.bosdyn.api.ArmSurfaceContact.Request.prototype.getMaxRotTrackingError = function() {
  return /** @type{?proto.google.protobuf.DoubleValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.DoubleValue, 19));
};


/**
 * @param {?proto.google.protobuf.DoubleValue|undefined} value
 * @return {!proto.bosdyn.api.ArmSurfaceContact.Request} returns this
*/
proto.bosdyn.api.ArmSurfaceContact.Request.prototype.setMaxRotTrackingError = function(value) {
  return jspb.Message.setWrapperField(this, 19, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.ArmSurfaceContact.Request} returns this
 */
proto.bosdyn.api.ArmSurfaceContact.Request.prototype.clearMaxRotTrackingError = function() {
  return this.setMaxRotTrackingError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.ArmSurfaceContact.Request.prototype.hasMaxRotTrackingError = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional bool force_remain_near_current_joint_configuration = 15;
 * @return {boolean}
 */
proto.bosdyn.api.ArmSurfaceContact.Request.prototype.getForceRemainNearCurrentJointConfiguration = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));
};


/**
 * @param {boolean} value
 * @return {!proto.bosdyn.api.ArmSurfaceContact.Request} returns this
 */
proto.bosdyn.api.ArmSurfaceContact.Request.prototype.setForceRemainNearCurrentJointConfiguration = function(value) {
  return jspb.Message.setOneofField(this, 15, proto.bosdyn.api.ArmSurfaceContact.Request.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.bosdyn.api.ArmSurfaceContact.Request} returns this
 */
proto.bosdyn.api.ArmSurfaceContact.Request.prototype.clearForceRemainNearCurrentJointConfiguration = function() {
  return jspb.Message.setOneofField(this, 15, proto.bosdyn.api.ArmSurfaceContact.Request.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.ArmSurfaceContact.Request.prototype.hasForceRemainNearCurrentJointConfiguration = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional ArmJointPosition preferred_joint_configuration = 16;
 * @return {?proto.bosdyn.api.ArmJointPosition}
 */
proto.bosdyn.api.ArmSurfaceContact.Request.prototype.getPreferredJointConfiguration = function() {
  return /** @type{?proto.bosdyn.api.ArmJointPosition} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_arm_command_pb.ArmJointPosition, 16));
};


/**
 * @param {?proto.bosdyn.api.ArmJointPosition|undefined} value
 * @return {!proto.bosdyn.api.ArmSurfaceContact.Request} returns this
*/
proto.bosdyn.api.ArmSurfaceContact.Request.prototype.setPreferredJointConfiguration = function(value) {
  return jspb.Message.setOneofWrapperField(this, 16, proto.bosdyn.api.ArmSurfaceContact.Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.ArmSurfaceContact.Request} returns this
 */
proto.bosdyn.api.ArmSurfaceContact.Request.prototype.clearPreferredJointConfiguration = function() {
  return this.setPreferredJointConfiguration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.ArmSurfaceContact.Request.prototype.hasPreferredJointConfiguration = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional AxisMode x_axis = 8;
 * @return {!proto.bosdyn.api.ArmSurfaceContact.Request.AxisMode}
 */
proto.bosdyn.api.ArmSurfaceContact.Request.prototype.getXAxis = function() {
  return /** @type {!proto.bosdyn.api.ArmSurfaceContact.Request.AxisMode} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {!proto.bosdyn.api.ArmSurfaceContact.Request.AxisMode} value
 * @return {!proto.bosdyn.api.ArmSurfaceContact.Request} returns this
 */
proto.bosdyn.api.ArmSurfaceContact.Request.prototype.setXAxis = function(value) {
  return jspb.Message.setProto3EnumField(this, 8, value);
};


/**
 * optional AxisMode y_axis = 9;
 * @return {!proto.bosdyn.api.ArmSurfaceContact.Request.AxisMode}
 */
proto.bosdyn.api.ArmSurfaceContact.Request.prototype.getYAxis = function() {
  return /** @type {!proto.bosdyn.api.ArmSurfaceContact.Request.AxisMode} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {!proto.bosdyn.api.ArmSurfaceContact.Request.AxisMode} value
 * @return {!proto.bosdyn.api.ArmSurfaceContact.Request} returns this
 */
proto.bosdyn.api.ArmSurfaceContact.Request.prototype.setYAxis = function(value) {
  return jspb.Message.setProto3EnumField(this, 9, value);
};


/**
 * optional AxisMode z_axis = 10;
 * @return {!proto.bosdyn.api.ArmSurfaceContact.Request.AxisMode}
 */
proto.bosdyn.api.ArmSurfaceContact.Request.prototype.getZAxis = function() {
  return /** @type {!proto.bosdyn.api.ArmSurfaceContact.Request.AxisMode} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {!proto.bosdyn.api.ArmSurfaceContact.Request.AxisMode} value
 * @return {!proto.bosdyn.api.ArmSurfaceContact.Request} returns this
 */
proto.bosdyn.api.ArmSurfaceContact.Request.prototype.setZAxis = function(value) {
  return jspb.Message.setProto3EnumField(this, 10, value);
};


/**
 * optional Vec3 press_force_percentage = 12;
 * @return {?proto.bosdyn.api.Vec3}
 */
proto.bosdyn.api.ArmSurfaceContact.Request.prototype.getPressForcePercentage = function() {
  return /** @type{?proto.bosdyn.api.Vec3} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_geometry_pb.Vec3, 12));
};


/**
 * @param {?proto.bosdyn.api.Vec3|undefined} value
 * @return {!proto.bosdyn.api.ArmSurfaceContact.Request} returns this
*/
proto.bosdyn.api.ArmSurfaceContact.Request.prototype.setPressForcePercentage = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.ArmSurfaceContact.Request} returns this
 */
proto.bosdyn.api.ArmSurfaceContact.Request.prototype.clearPressForcePercentage = function() {
  return this.setPressForcePercentage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.ArmSurfaceContact.Request.prototype.hasPressForcePercentage = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional AdmittanceSetting xy_admittance = 21;
 * @return {!proto.bosdyn.api.ArmSurfaceContact.Request.AdmittanceSetting}
 */
proto.bosdyn.api.ArmSurfaceContact.Request.prototype.getXyAdmittance = function() {
  return /** @type {!proto.bosdyn.api.ArmSurfaceContact.Request.AdmittanceSetting} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/**
 * @param {!proto.bosdyn.api.ArmSurfaceContact.Request.AdmittanceSetting} value
 * @return {!proto.bosdyn.api.ArmSurfaceContact.Request} returns this
 */
proto.bosdyn.api.ArmSurfaceContact.Request.prototype.setXyAdmittance = function(value) {
  return jspb.Message.setProto3EnumField(this, 21, value);
};


/**
 * optional AdmittanceSetting z_admittance = 22;
 * @return {!proto.bosdyn.api.ArmSurfaceContact.Request.AdmittanceSetting}
 */
proto.bosdyn.api.ArmSurfaceContact.Request.prototype.getZAdmittance = function() {
  return /** @type {!proto.bosdyn.api.ArmSurfaceContact.Request.AdmittanceSetting} */ (jspb.Message.getFieldWithDefault(this, 22, 0));
};


/**
 * @param {!proto.bosdyn.api.ArmSurfaceContact.Request.AdmittanceSetting} value
 * @return {!proto.bosdyn.api.ArmSurfaceContact.Request} returns this
 */
proto.bosdyn.api.ArmSurfaceContact.Request.prototype.setZAdmittance = function(value) {
  return jspb.Message.setProto3EnumField(this, 22, value);
};


/**
 * optional AdmittanceSetting xy_to_z_cross_term_admittance = 17;
 * @return {!proto.bosdyn.api.ArmSurfaceContact.Request.AdmittanceSetting}
 */
proto.bosdyn.api.ArmSurfaceContact.Request.prototype.getXyToZCrossTermAdmittance = function() {
  return /** @type {!proto.bosdyn.api.ArmSurfaceContact.Request.AdmittanceSetting} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {!proto.bosdyn.api.ArmSurfaceContact.Request.AdmittanceSetting} value
 * @return {!proto.bosdyn.api.ArmSurfaceContact.Request} returns this
 */
proto.bosdyn.api.ArmSurfaceContact.Request.prototype.setXyToZCrossTermAdmittance = function(value) {
  return jspb.Message.setProto3EnumField(this, 17, value);
};


/**
 * optional Vec3 bias_force_ewrt_body = 20;
 * @return {?proto.bosdyn.api.Vec3}
 */
proto.bosdyn.api.ArmSurfaceContact.Request.prototype.getBiasForceEwrtBody = function() {
  return /** @type{?proto.bosdyn.api.Vec3} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_geometry_pb.Vec3, 20));
};


/**
 * @param {?proto.bosdyn.api.Vec3|undefined} value
 * @return {!proto.bosdyn.api.ArmSurfaceContact.Request} returns this
*/
proto.bosdyn.api.ArmSurfaceContact.Request.prototype.setBiasForceEwrtBody = function(value) {
  return jspb.Message.setWrapperField(this, 20, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.ArmSurfaceContact.Request} returns this
 */
proto.bosdyn.api.ArmSurfaceContact.Request.prototype.clearBiasForceEwrtBody = function() {
  return this.setBiasForceEwrtBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.ArmSurfaceContact.Request.prototype.hasBiasForceEwrtBody = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional ClawGripperCommand.Request gripper_command = 23;
 * @return {?proto.bosdyn.api.ClawGripperCommand.Request}
 */
proto.bosdyn.api.ArmSurfaceContact.Request.prototype.getGripperCommand = function() {
  return /** @type{?proto.bosdyn.api.ClawGripperCommand.Request} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_gripper_command_pb.ClawGripperCommand.Request, 23));
};


/**
 * @param {?proto.bosdyn.api.ClawGripperCommand.Request|undefined} value
 * @return {!proto.bosdyn.api.ArmSurfaceContact.Request} returns this
*/
proto.bosdyn.api.ArmSurfaceContact.Request.prototype.setGripperCommand = function(value) {
  return jspb.Message.setWrapperField(this, 23, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.ArmSurfaceContact.Request} returns this
 */
proto.bosdyn.api.ArmSurfaceContact.Request.prototype.clearGripperCommand = function() {
  return this.setGripperCommand(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.ArmSurfaceContact.Request.prototype.hasGripperCommand = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional bool is_robot_following_hand = 24;
 * @return {boolean}
 */
proto.bosdyn.api.ArmSurfaceContact.Request.prototype.getIsRobotFollowingHand = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 24, false));
};


/**
 * @param {boolean} value
 * @return {!proto.bosdyn.api.ArmSurfaceContact.Request} returns this
 */
proto.bosdyn.api.ArmSurfaceContact.Request.prototype.setIsRobotFollowingHand = function(value) {
  return jspb.Message.setProto3BooleanField(this, 24, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.ArmSurfaceContact.Feedback.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.ArmSurfaceContact.Feedback.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.ArmSurfaceContact.Feedback} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.ArmSurfaceContact.Feedback.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.ArmSurfaceContact.Feedback}
 */
proto.bosdyn.api.ArmSurfaceContact.Feedback.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.ArmSurfaceContact.Feedback;
  return proto.bosdyn.api.ArmSurfaceContact.Feedback.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.ArmSurfaceContact.Feedback} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.ArmSurfaceContact.Feedback}
 */
proto.bosdyn.api.ArmSurfaceContact.Feedback.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.ArmSurfaceContact.Feedback.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.ArmSurfaceContact.Feedback.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.ArmSurfaceContact.Feedback} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.ArmSurfaceContact.Feedback.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


goog.object.extend(exports, proto.bosdyn.api);
