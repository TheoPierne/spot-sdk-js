// source: bosdyn/api/image.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var bosdyn_api_header_pb = require('../../bosdyn/api/header_pb.js');
goog.object.extend(proto, bosdyn_api_header_pb);
var bosdyn_api_geometry_pb = require('../../bosdyn/api/geometry_pb.js');
goog.object.extend(proto, bosdyn_api_geometry_pb);
var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js');
goog.object.extend(proto, google_protobuf_duration_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.bosdyn.api.CaptureParameters', null, global);
goog.exportSymbol('proto.bosdyn.api.GetImageRequest', null, global);
goog.exportSymbol('proto.bosdyn.api.GetImageResponse', null, global);
goog.exportSymbol('proto.bosdyn.api.Image', null, global);
goog.exportSymbol('proto.bosdyn.api.Image.Format', null, global);
goog.exportSymbol('proto.bosdyn.api.Image.PixelFormat', null, global);
goog.exportSymbol('proto.bosdyn.api.ImageCapture', null, global);
goog.exportSymbol('proto.bosdyn.api.ImageRequest', null, global);
goog.exportSymbol('proto.bosdyn.api.ImageResponse', null, global);
goog.exportSymbol('proto.bosdyn.api.ImageResponse.Status', null, global);
goog.exportSymbol('proto.bosdyn.api.ImageSource', null, global);
goog.exportSymbol('proto.bosdyn.api.ImageSource.CameraModelsCase', null, global);
goog.exportSymbol('proto.bosdyn.api.ImageSource.ImageType', null, global);
goog.exportSymbol('proto.bosdyn.api.ImageSource.PinholeModel', null, global);
goog.exportSymbol('proto.bosdyn.api.ImageSource.PinholeModel.CameraIntrinsics', null, global);
goog.exportSymbol('proto.bosdyn.api.ListImageSourcesRequest', null, global);
goog.exportSymbol('proto.bosdyn.api.ListImageSourcesResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.Image = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.Image, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.Image.displayName = 'proto.bosdyn.api.Image';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.CaptureParameters = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.CaptureParameters, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.CaptureParameters.displayName = 'proto.bosdyn.api.CaptureParameters';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.ImageCapture = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.ImageCapture, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.ImageCapture.displayName = 'proto.bosdyn.api.ImageCapture';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.ImageSource = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bosdyn.api.ImageSource.repeatedFields_, proto.bosdyn.api.ImageSource.oneofGroups_);
};
goog.inherits(proto.bosdyn.api.ImageSource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.ImageSource.displayName = 'proto.bosdyn.api.ImageSource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.ImageSource.PinholeModel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.ImageSource.PinholeModel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.ImageSource.PinholeModel.displayName = 'proto.bosdyn.api.ImageSource.PinholeModel';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.ImageSource.PinholeModel.CameraIntrinsics = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.ImageSource.PinholeModel.CameraIntrinsics, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.ImageSource.PinholeModel.CameraIntrinsics.displayName = 'proto.bosdyn.api.ImageSource.PinholeModel.CameraIntrinsics';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.ListImageSourcesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.ListImageSourcesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.ListImageSourcesRequest.displayName = 'proto.bosdyn.api.ListImageSourcesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.ListImageSourcesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bosdyn.api.ListImageSourcesResponse.repeatedFields_, null);
};
goog.inherits(proto.bosdyn.api.ListImageSourcesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.ListImageSourcesResponse.displayName = 'proto.bosdyn.api.ListImageSourcesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.ImageRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.ImageRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.ImageRequest.displayName = 'proto.bosdyn.api.ImageRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.GetImageRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bosdyn.api.GetImageRequest.repeatedFields_, null);
};
goog.inherits(proto.bosdyn.api.GetImageRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.GetImageRequest.displayName = 'proto.bosdyn.api.GetImageRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.ImageResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.ImageResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.ImageResponse.displayName = 'proto.bosdyn.api.ImageResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.GetImageResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bosdyn.api.GetImageResponse.repeatedFields_, null);
};
goog.inherits(proto.bosdyn.api.GetImageResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.GetImageResponse.displayName = 'proto.bosdyn.api.GetImageResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.Image.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.Image.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.Image} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.Image.toObject = function(includeInstance, msg) {
  var f, obj = {
    cols: jspb.Message.getFieldWithDefault(msg, 2, 0),
    rows: jspb.Message.getFieldWithDefault(msg, 3, 0),
    data: msg.getData_asB64(),
    format: jspb.Message.getFieldWithDefault(msg, 5, 0),
    pixelFormat: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.Image}
 */
proto.bosdyn.api.Image.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.Image;
  return proto.bosdyn.api.Image.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.Image} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.Image}
 */
proto.bosdyn.api.Image.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCols(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRows(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    case 5:
      var value = /** @type {!proto.bosdyn.api.Image.Format} */ (reader.readEnum());
      msg.setFormat(value);
      break;
    case 6:
      var value = /** @type {!proto.bosdyn.api.Image.PixelFormat} */ (reader.readEnum());
      msg.setPixelFormat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.Image.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.Image.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.Image} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.Image.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCols();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getRows();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = message.getFormat();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getPixelFormat();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.bosdyn.api.Image.Format = {
  FORMAT_UNKNOWN: 0,
  FORMAT_JPEG: 1,
  FORMAT_RAW: 2,
  FORMAT_RLE: 3
};

/**
 * @enum {number}
 */
proto.bosdyn.api.Image.PixelFormat = {
  PIXEL_FORMAT_UNKNOWN: 0,
  PIXEL_FORMAT_GREYSCALE_U8: 1,
  PIXEL_FORMAT_RGB_U8: 3,
  PIXEL_FORMAT_RGBA_U8: 4,
  PIXEL_FORMAT_DEPTH_U16: 5,
  PIXEL_FORMAT_GREYSCALE_U16: 6
};

/**
 * optional int32 cols = 2;
 * @return {number}
 */
proto.bosdyn.api.Image.prototype.getCols = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.bosdyn.api.Image} returns this
 */
proto.bosdyn.api.Image.prototype.setCols = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 rows = 3;
 * @return {number}
 */
proto.bosdyn.api.Image.prototype.getRows = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.bosdyn.api.Image} returns this
 */
proto.bosdyn.api.Image.prototype.setRows = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bytes data = 4;
 * @return {!(string|Uint8Array)}
 */
proto.bosdyn.api.Image.prototype.getData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes data = 4;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.bosdyn.api.Image.prototype.getData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getData()));
};


/**
 * optional bytes data = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.bosdyn.api.Image.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.bosdyn.api.Image} returns this
 */
proto.bosdyn.api.Image.prototype.setData = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};


/**
 * optional Format format = 5;
 * @return {!proto.bosdyn.api.Image.Format}
 */
proto.bosdyn.api.Image.prototype.getFormat = function() {
  return /** @type {!proto.bosdyn.api.Image.Format} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.bosdyn.api.Image.Format} value
 * @return {!proto.bosdyn.api.Image} returns this
 */
proto.bosdyn.api.Image.prototype.setFormat = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional PixelFormat pixel_format = 6;
 * @return {!proto.bosdyn.api.Image.PixelFormat}
 */
proto.bosdyn.api.Image.prototype.getPixelFormat = function() {
  return /** @type {!proto.bosdyn.api.Image.PixelFormat} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.bosdyn.api.Image.PixelFormat} value
 * @return {!proto.bosdyn.api.Image} returns this
 */
proto.bosdyn.api.Image.prototype.setPixelFormat = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.CaptureParameters.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.CaptureParameters.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.CaptureParameters} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.CaptureParameters.toObject = function(includeInstance, msg) {
  var f, obj = {
    exposureDuration: (f = msg.getExposureDuration()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f),
    gain: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.CaptureParameters}
 */
proto.bosdyn.api.CaptureParameters.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.CaptureParameters;
  return proto.bosdyn.api.CaptureParameters.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.CaptureParameters} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.CaptureParameters}
 */
proto.bosdyn.api.CaptureParameters.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setExposureDuration(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setGain(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.CaptureParameters.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.CaptureParameters.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.CaptureParameters} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.CaptureParameters.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExposureDuration();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
  f = message.getGain();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
};


/**
 * optional google.protobuf.Duration exposure_duration = 1;
 * @return {?proto.google.protobuf.Duration}
 */
proto.bosdyn.api.CaptureParameters.prototype.getExposureDuration = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 1));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.bosdyn.api.CaptureParameters} returns this
*/
proto.bosdyn.api.CaptureParameters.prototype.setExposureDuration = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.CaptureParameters} returns this
 */
proto.bosdyn.api.CaptureParameters.prototype.clearExposureDuration = function() {
  return this.setExposureDuration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.CaptureParameters.prototype.hasExposureDuration = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double gain = 2;
 * @return {number}
 */
proto.bosdyn.api.CaptureParameters.prototype.getGain = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.bosdyn.api.CaptureParameters} returns this
 */
proto.bosdyn.api.CaptureParameters.prototype.setGain = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.ImageCapture.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.ImageCapture.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.ImageCapture} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.ImageCapture.toObject = function(includeInstance, msg) {
  var f, obj = {
    acquisitionTime: (f = msg.getAcquisitionTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    transformsSnapshot: (f = msg.getTransformsSnapshot()) && bosdyn_api_geometry_pb.FrameTreeSnapshot.toObject(includeInstance, f),
    frameNameImageSensor: jspb.Message.getFieldWithDefault(msg, 5, ""),
    image: (f = msg.getImage()) && proto.bosdyn.api.Image.toObject(includeInstance, f),
    captureParams: (f = msg.getCaptureParams()) && proto.bosdyn.api.CaptureParameters.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.ImageCapture}
 */
proto.bosdyn.api.ImageCapture.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.ImageCapture;
  return proto.bosdyn.api.ImageCapture.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.ImageCapture} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.ImageCapture}
 */
proto.bosdyn.api.ImageCapture.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 30:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setAcquisitionTime(value);
      break;
    case 31:
      var value = new bosdyn_api_geometry_pb.FrameTreeSnapshot;
      reader.readMessage(value,bosdyn_api_geometry_pb.FrameTreeSnapshot.deserializeBinaryFromReader);
      msg.setTransformsSnapshot(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setFrameNameImageSensor(value);
      break;
    case 3:
      var value = new proto.bosdyn.api.Image;
      reader.readMessage(value,proto.bosdyn.api.Image.deserializeBinaryFromReader);
      msg.setImage(value);
      break;
    case 4:
      var value = new proto.bosdyn.api.CaptureParameters;
      reader.readMessage(value,proto.bosdyn.api.CaptureParameters.deserializeBinaryFromReader);
      msg.setCaptureParams(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.ImageCapture.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.ImageCapture.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.ImageCapture} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.ImageCapture.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAcquisitionTime();
  if (f != null) {
    writer.writeMessage(
      30,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getTransformsSnapshot();
  if (f != null) {
    writer.writeMessage(
      31,
      f,
      bosdyn_api_geometry_pb.FrameTreeSnapshot.serializeBinaryToWriter
    );
  }
  f = message.getFrameNameImageSensor();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getImage();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.bosdyn.api.Image.serializeBinaryToWriter
    );
  }
  f = message.getCaptureParams();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.bosdyn.api.CaptureParameters.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Timestamp acquisition_time = 30;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.bosdyn.api.ImageCapture.prototype.getAcquisitionTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 30));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.bosdyn.api.ImageCapture} returns this
*/
proto.bosdyn.api.ImageCapture.prototype.setAcquisitionTime = function(value) {
  return jspb.Message.setWrapperField(this, 30, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.ImageCapture} returns this
 */
proto.bosdyn.api.ImageCapture.prototype.clearAcquisitionTime = function() {
  return this.setAcquisitionTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.ImageCapture.prototype.hasAcquisitionTime = function() {
  return jspb.Message.getField(this, 30) != null;
};


/**
 * optional FrameTreeSnapshot transforms_snapshot = 31;
 * @return {?proto.bosdyn.api.FrameTreeSnapshot}
 */
proto.bosdyn.api.ImageCapture.prototype.getTransformsSnapshot = function() {
  return /** @type{?proto.bosdyn.api.FrameTreeSnapshot} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_geometry_pb.FrameTreeSnapshot, 31));
};


/**
 * @param {?proto.bosdyn.api.FrameTreeSnapshot|undefined} value
 * @return {!proto.bosdyn.api.ImageCapture} returns this
*/
proto.bosdyn.api.ImageCapture.prototype.setTransformsSnapshot = function(value) {
  return jspb.Message.setWrapperField(this, 31, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.ImageCapture} returns this
 */
proto.bosdyn.api.ImageCapture.prototype.clearTransformsSnapshot = function() {
  return this.setTransformsSnapshot(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.ImageCapture.prototype.hasTransformsSnapshot = function() {
  return jspb.Message.getField(this, 31) != null;
};


/**
 * optional string frame_name_image_sensor = 5;
 * @return {string}
 */
proto.bosdyn.api.ImageCapture.prototype.getFrameNameImageSensor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.bosdyn.api.ImageCapture} returns this
 */
proto.bosdyn.api.ImageCapture.prototype.setFrameNameImageSensor = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional Image image = 3;
 * @return {?proto.bosdyn.api.Image}
 */
proto.bosdyn.api.ImageCapture.prototype.getImage = function() {
  return /** @type{?proto.bosdyn.api.Image} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.Image, 3));
};


/**
 * @param {?proto.bosdyn.api.Image|undefined} value
 * @return {!proto.bosdyn.api.ImageCapture} returns this
*/
proto.bosdyn.api.ImageCapture.prototype.setImage = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.ImageCapture} returns this
 */
proto.bosdyn.api.ImageCapture.prototype.clearImage = function() {
  return this.setImage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.ImageCapture.prototype.hasImage = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional CaptureParameters capture_params = 4;
 * @return {?proto.bosdyn.api.CaptureParameters}
 */
proto.bosdyn.api.ImageCapture.prototype.getCaptureParams = function() {
  return /** @type{?proto.bosdyn.api.CaptureParameters} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.CaptureParameters, 4));
};


/**
 * @param {?proto.bosdyn.api.CaptureParameters|undefined} value
 * @return {!proto.bosdyn.api.ImageCapture} returns this
*/
proto.bosdyn.api.ImageCapture.prototype.setCaptureParams = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.ImageCapture} returns this
 */
proto.bosdyn.api.ImageCapture.prototype.clearCaptureParams = function() {
  return this.setCaptureParams(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.ImageCapture.prototype.hasCaptureParams = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bosdyn.api.ImageSource.repeatedFields_ = [10,11];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.bosdyn.api.ImageSource.oneofGroups_ = [[8]];

/**
 * @enum {number}
 */
proto.bosdyn.api.ImageSource.CameraModelsCase = {
  CAMERA_MODELS_NOT_SET: 0,
  PINHOLE: 8
};

/**
 * @return {proto.bosdyn.api.ImageSource.CameraModelsCase}
 */
proto.bosdyn.api.ImageSource.prototype.getCameraModelsCase = function() {
  return /** @type {proto.bosdyn.api.ImageSource.CameraModelsCase} */(jspb.Message.computeOneofCase(this, proto.bosdyn.api.ImageSource.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.ImageSource.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.ImageSource.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.ImageSource} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.ImageSource.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    cols: jspb.Message.getFieldWithDefault(msg, 4, 0),
    rows: jspb.Message.getFieldWithDefault(msg, 5, 0),
    depthScale: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    pinhole: (f = msg.getPinhole()) && proto.bosdyn.api.ImageSource.PinholeModel.toObject(includeInstance, f),
    imageType: jspb.Message.getFieldWithDefault(msg, 9, 0),
    pixelFormatsList: (f = jspb.Message.getRepeatedField(msg, 10)) == null ? undefined : f,
    imageFormatsList: (f = jspb.Message.getRepeatedField(msg, 11)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.ImageSource}
 */
proto.bosdyn.api.ImageSource.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.ImageSource;
  return proto.bosdyn.api.ImageSource.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.ImageSource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.ImageSource}
 */
proto.bosdyn.api.ImageSource.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCols(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRows(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDepthScale(value);
      break;
    case 8:
      var value = new proto.bosdyn.api.ImageSource.PinholeModel;
      reader.readMessage(value,proto.bosdyn.api.ImageSource.PinholeModel.deserializeBinaryFromReader);
      msg.setPinhole(value);
      break;
    case 9:
      var value = /** @type {!proto.bosdyn.api.ImageSource.ImageType} */ (reader.readEnum());
      msg.setImageType(value);
      break;
    case 10:
      var values = /** @type {!Array<!proto.bosdyn.api.Image.PixelFormat>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addPixelFormats(values[i]);
      }
      break;
    case 11:
      var values = /** @type {!Array<!proto.bosdyn.api.Image.Format>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addImageFormats(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.ImageSource.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.ImageSource.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.ImageSource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.ImageSource.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCols();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getRows();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getDepthScale();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getPinhole();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.bosdyn.api.ImageSource.PinholeModel.serializeBinaryToWriter
    );
  }
  f = message.getImageType();
  if (f !== 0.0) {
    writer.writeEnum(
      9,
      f
    );
  }
  f = message.getPixelFormatsList();
  if (f.length > 0) {
    writer.writePackedEnum(
      10,
      f
    );
  }
  f = message.getImageFormatsList();
  if (f.length > 0) {
    writer.writePackedEnum(
      11,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.bosdyn.api.ImageSource.ImageType = {
  IMAGE_TYPE_UNKNOWN: 0,
  IMAGE_TYPE_VISUAL: 1,
  IMAGE_TYPE_DEPTH: 2
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.ImageSource.PinholeModel.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.ImageSource.PinholeModel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.ImageSource.PinholeModel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.ImageSource.PinholeModel.toObject = function(includeInstance, msg) {
  var f, obj = {
    intrinsics: (f = msg.getIntrinsics()) && proto.bosdyn.api.ImageSource.PinholeModel.CameraIntrinsics.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.ImageSource.PinholeModel}
 */
proto.bosdyn.api.ImageSource.PinholeModel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.ImageSource.PinholeModel;
  return proto.bosdyn.api.ImageSource.PinholeModel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.ImageSource.PinholeModel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.ImageSource.PinholeModel}
 */
proto.bosdyn.api.ImageSource.PinholeModel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.bosdyn.api.ImageSource.PinholeModel.CameraIntrinsics;
      reader.readMessage(value,proto.bosdyn.api.ImageSource.PinholeModel.CameraIntrinsics.deserializeBinaryFromReader);
      msg.setIntrinsics(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.ImageSource.PinholeModel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.ImageSource.PinholeModel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.ImageSource.PinholeModel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.ImageSource.PinholeModel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIntrinsics();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.bosdyn.api.ImageSource.PinholeModel.CameraIntrinsics.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.ImageSource.PinholeModel.CameraIntrinsics.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.ImageSource.PinholeModel.CameraIntrinsics.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.ImageSource.PinholeModel.CameraIntrinsics} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.ImageSource.PinholeModel.CameraIntrinsics.toObject = function(includeInstance, msg) {
  var f, obj = {
    focalLength: (f = msg.getFocalLength()) && bosdyn_api_geometry_pb.Vec2.toObject(includeInstance, f),
    principalPoint: (f = msg.getPrincipalPoint()) && bosdyn_api_geometry_pb.Vec2.toObject(includeInstance, f),
    skew: (f = msg.getSkew()) && bosdyn_api_geometry_pb.Vec2.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.ImageSource.PinholeModel.CameraIntrinsics}
 */
proto.bosdyn.api.ImageSource.PinholeModel.CameraIntrinsics.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.ImageSource.PinholeModel.CameraIntrinsics;
  return proto.bosdyn.api.ImageSource.PinholeModel.CameraIntrinsics.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.ImageSource.PinholeModel.CameraIntrinsics} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.ImageSource.PinholeModel.CameraIntrinsics}
 */
proto.bosdyn.api.ImageSource.PinholeModel.CameraIntrinsics.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new bosdyn_api_geometry_pb.Vec2;
      reader.readMessage(value,bosdyn_api_geometry_pb.Vec2.deserializeBinaryFromReader);
      msg.setFocalLength(value);
      break;
    case 2:
      var value = new bosdyn_api_geometry_pb.Vec2;
      reader.readMessage(value,bosdyn_api_geometry_pb.Vec2.deserializeBinaryFromReader);
      msg.setPrincipalPoint(value);
      break;
    case 3:
      var value = new bosdyn_api_geometry_pb.Vec2;
      reader.readMessage(value,bosdyn_api_geometry_pb.Vec2.deserializeBinaryFromReader);
      msg.setSkew(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.ImageSource.PinholeModel.CameraIntrinsics.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.ImageSource.PinholeModel.CameraIntrinsics.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.ImageSource.PinholeModel.CameraIntrinsics} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.ImageSource.PinholeModel.CameraIntrinsics.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFocalLength();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      bosdyn_api_geometry_pb.Vec2.serializeBinaryToWriter
    );
  }
  f = message.getPrincipalPoint();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      bosdyn_api_geometry_pb.Vec2.serializeBinaryToWriter
    );
  }
  f = message.getSkew();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      bosdyn_api_geometry_pb.Vec2.serializeBinaryToWriter
    );
  }
};


/**
 * optional Vec2 focal_length = 1;
 * @return {?proto.bosdyn.api.Vec2}
 */
proto.bosdyn.api.ImageSource.PinholeModel.CameraIntrinsics.prototype.getFocalLength = function() {
  return /** @type{?proto.bosdyn.api.Vec2} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_geometry_pb.Vec2, 1));
};


/**
 * @param {?proto.bosdyn.api.Vec2|undefined} value
 * @return {!proto.bosdyn.api.ImageSource.PinholeModel.CameraIntrinsics} returns this
*/
proto.bosdyn.api.ImageSource.PinholeModel.CameraIntrinsics.prototype.setFocalLength = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.ImageSource.PinholeModel.CameraIntrinsics} returns this
 */
proto.bosdyn.api.ImageSource.PinholeModel.CameraIntrinsics.prototype.clearFocalLength = function() {
  return this.setFocalLength(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.ImageSource.PinholeModel.CameraIntrinsics.prototype.hasFocalLength = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Vec2 principal_point = 2;
 * @return {?proto.bosdyn.api.Vec2}
 */
proto.bosdyn.api.ImageSource.PinholeModel.CameraIntrinsics.prototype.getPrincipalPoint = function() {
  return /** @type{?proto.bosdyn.api.Vec2} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_geometry_pb.Vec2, 2));
};


/**
 * @param {?proto.bosdyn.api.Vec2|undefined} value
 * @return {!proto.bosdyn.api.ImageSource.PinholeModel.CameraIntrinsics} returns this
*/
proto.bosdyn.api.ImageSource.PinholeModel.CameraIntrinsics.prototype.setPrincipalPoint = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.ImageSource.PinholeModel.CameraIntrinsics} returns this
 */
proto.bosdyn.api.ImageSource.PinholeModel.CameraIntrinsics.prototype.clearPrincipalPoint = function() {
  return this.setPrincipalPoint(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.ImageSource.PinholeModel.CameraIntrinsics.prototype.hasPrincipalPoint = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Vec2 skew = 3;
 * @return {?proto.bosdyn.api.Vec2}
 */
proto.bosdyn.api.ImageSource.PinholeModel.CameraIntrinsics.prototype.getSkew = function() {
  return /** @type{?proto.bosdyn.api.Vec2} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_geometry_pb.Vec2, 3));
};


/**
 * @param {?proto.bosdyn.api.Vec2|undefined} value
 * @return {!proto.bosdyn.api.ImageSource.PinholeModel.CameraIntrinsics} returns this
*/
proto.bosdyn.api.ImageSource.PinholeModel.CameraIntrinsics.prototype.setSkew = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.ImageSource.PinholeModel.CameraIntrinsics} returns this
 */
proto.bosdyn.api.ImageSource.PinholeModel.CameraIntrinsics.prototype.clearSkew = function() {
  return this.setSkew(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.ImageSource.PinholeModel.CameraIntrinsics.prototype.hasSkew = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional CameraIntrinsics intrinsics = 1;
 * @return {?proto.bosdyn.api.ImageSource.PinholeModel.CameraIntrinsics}
 */
proto.bosdyn.api.ImageSource.PinholeModel.prototype.getIntrinsics = function() {
  return /** @type{?proto.bosdyn.api.ImageSource.PinholeModel.CameraIntrinsics} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.ImageSource.PinholeModel.CameraIntrinsics, 1));
};


/**
 * @param {?proto.bosdyn.api.ImageSource.PinholeModel.CameraIntrinsics|undefined} value
 * @return {!proto.bosdyn.api.ImageSource.PinholeModel} returns this
*/
proto.bosdyn.api.ImageSource.PinholeModel.prototype.setIntrinsics = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.ImageSource.PinholeModel} returns this
 */
proto.bosdyn.api.ImageSource.PinholeModel.prototype.clearIntrinsics = function() {
  return this.setIntrinsics(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.ImageSource.PinholeModel.prototype.hasIntrinsics = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.bosdyn.api.ImageSource.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.bosdyn.api.ImageSource} returns this
 */
proto.bosdyn.api.ImageSource.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 cols = 4;
 * @return {number}
 */
proto.bosdyn.api.ImageSource.prototype.getCols = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.bosdyn.api.ImageSource} returns this
 */
proto.bosdyn.api.ImageSource.prototype.setCols = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 rows = 5;
 * @return {number}
 */
proto.bosdyn.api.ImageSource.prototype.getRows = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.bosdyn.api.ImageSource} returns this
 */
proto.bosdyn.api.ImageSource.prototype.setRows = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional double depth_scale = 6;
 * @return {number}
 */
proto.bosdyn.api.ImageSource.prototype.getDepthScale = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.bosdyn.api.ImageSource} returns this
 */
proto.bosdyn.api.ImageSource.prototype.setDepthScale = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional PinholeModel pinhole = 8;
 * @return {?proto.bosdyn.api.ImageSource.PinholeModel}
 */
proto.bosdyn.api.ImageSource.prototype.getPinhole = function() {
  return /** @type{?proto.bosdyn.api.ImageSource.PinholeModel} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.ImageSource.PinholeModel, 8));
};


/**
 * @param {?proto.bosdyn.api.ImageSource.PinholeModel|undefined} value
 * @return {!proto.bosdyn.api.ImageSource} returns this
*/
proto.bosdyn.api.ImageSource.prototype.setPinhole = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.bosdyn.api.ImageSource.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.ImageSource} returns this
 */
proto.bosdyn.api.ImageSource.prototype.clearPinhole = function() {
  return this.setPinhole(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.ImageSource.prototype.hasPinhole = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional ImageType image_type = 9;
 * @return {!proto.bosdyn.api.ImageSource.ImageType}
 */
proto.bosdyn.api.ImageSource.prototype.getImageType = function() {
  return /** @type {!proto.bosdyn.api.ImageSource.ImageType} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {!proto.bosdyn.api.ImageSource.ImageType} value
 * @return {!proto.bosdyn.api.ImageSource} returns this
 */
proto.bosdyn.api.ImageSource.prototype.setImageType = function(value) {
  return jspb.Message.setProto3EnumField(this, 9, value);
};


/**
 * repeated Image.PixelFormat pixel_formats = 10;
 * @return {!Array<!proto.bosdyn.api.Image.PixelFormat>}
 */
proto.bosdyn.api.ImageSource.prototype.getPixelFormatsList = function() {
  return /** @type {!Array<!proto.bosdyn.api.Image.PixelFormat>} */ (jspb.Message.getRepeatedField(this, 10));
};


/**
 * @param {!Array<!proto.bosdyn.api.Image.PixelFormat>} value
 * @return {!proto.bosdyn.api.ImageSource} returns this
 */
proto.bosdyn.api.ImageSource.prototype.setPixelFormatsList = function(value) {
  return jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {!proto.bosdyn.api.Image.PixelFormat} value
 * @param {number=} opt_index
 * @return {!proto.bosdyn.api.ImageSource} returns this
 */
proto.bosdyn.api.ImageSource.prototype.addPixelFormats = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bosdyn.api.ImageSource} returns this
 */
proto.bosdyn.api.ImageSource.prototype.clearPixelFormatsList = function() {
  return this.setPixelFormatsList([]);
};


/**
 * repeated Image.Format image_formats = 11;
 * @return {!Array<!proto.bosdyn.api.Image.Format>}
 */
proto.bosdyn.api.ImageSource.prototype.getImageFormatsList = function() {
  return /** @type {!Array<!proto.bosdyn.api.Image.Format>} */ (jspb.Message.getRepeatedField(this, 11));
};


/**
 * @param {!Array<!proto.bosdyn.api.Image.Format>} value
 * @return {!proto.bosdyn.api.ImageSource} returns this
 */
proto.bosdyn.api.ImageSource.prototype.setImageFormatsList = function(value) {
  return jspb.Message.setField(this, 11, value || []);
};


/**
 * @param {!proto.bosdyn.api.Image.Format} value
 * @param {number=} opt_index
 * @return {!proto.bosdyn.api.ImageSource} returns this
 */
proto.bosdyn.api.ImageSource.prototype.addImageFormats = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 11, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bosdyn.api.ImageSource} returns this
 */
proto.bosdyn.api.ImageSource.prototype.clearImageFormatsList = function() {
  return this.setImageFormatsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.ListImageSourcesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.ListImageSourcesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.ListImageSourcesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.ListImageSourcesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && bosdyn_api_header_pb.RequestHeader.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.ListImageSourcesRequest}
 */
proto.bosdyn.api.ListImageSourcesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.ListImageSourcesRequest;
  return proto.bosdyn.api.ListImageSourcesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.ListImageSourcesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.ListImageSourcesRequest}
 */
proto.bosdyn.api.ListImageSourcesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new bosdyn_api_header_pb.RequestHeader;
      reader.readMessage(value,bosdyn_api_header_pb.RequestHeader.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.ListImageSourcesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.ListImageSourcesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.ListImageSourcesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.ListImageSourcesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      bosdyn_api_header_pb.RequestHeader.serializeBinaryToWriter
    );
  }
};


/**
 * optional RequestHeader header = 1;
 * @return {?proto.bosdyn.api.RequestHeader}
 */
proto.bosdyn.api.ListImageSourcesRequest.prototype.getHeader = function() {
  return /** @type{?proto.bosdyn.api.RequestHeader} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_header_pb.RequestHeader, 1));
};


/**
 * @param {?proto.bosdyn.api.RequestHeader|undefined} value
 * @return {!proto.bosdyn.api.ListImageSourcesRequest} returns this
*/
proto.bosdyn.api.ListImageSourcesRequest.prototype.setHeader = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.ListImageSourcesRequest} returns this
 */
proto.bosdyn.api.ListImageSourcesRequest.prototype.clearHeader = function() {
  return this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.ListImageSourcesRequest.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bosdyn.api.ListImageSourcesResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.ListImageSourcesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.ListImageSourcesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.ListImageSourcesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.ListImageSourcesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && bosdyn_api_header_pb.ResponseHeader.toObject(includeInstance, f),
    imageSourcesList: jspb.Message.toObjectList(msg.getImageSourcesList(),
    proto.bosdyn.api.ImageSource.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.ListImageSourcesResponse}
 */
proto.bosdyn.api.ListImageSourcesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.ListImageSourcesResponse;
  return proto.bosdyn.api.ListImageSourcesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.ListImageSourcesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.ListImageSourcesResponse}
 */
proto.bosdyn.api.ListImageSourcesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new bosdyn_api_header_pb.ResponseHeader;
      reader.readMessage(value,bosdyn_api_header_pb.ResponseHeader.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 2:
      var value = new proto.bosdyn.api.ImageSource;
      reader.readMessage(value,proto.bosdyn.api.ImageSource.deserializeBinaryFromReader);
      msg.addImageSources(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.ListImageSourcesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.ListImageSourcesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.ListImageSourcesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.ListImageSourcesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      bosdyn_api_header_pb.ResponseHeader.serializeBinaryToWriter
    );
  }
  f = message.getImageSourcesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.bosdyn.api.ImageSource.serializeBinaryToWriter
    );
  }
};


/**
 * optional ResponseHeader header = 1;
 * @return {?proto.bosdyn.api.ResponseHeader}
 */
proto.bosdyn.api.ListImageSourcesResponse.prototype.getHeader = function() {
  return /** @type{?proto.bosdyn.api.ResponseHeader} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_header_pb.ResponseHeader, 1));
};


/**
 * @param {?proto.bosdyn.api.ResponseHeader|undefined} value
 * @return {!proto.bosdyn.api.ListImageSourcesResponse} returns this
*/
proto.bosdyn.api.ListImageSourcesResponse.prototype.setHeader = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.ListImageSourcesResponse} returns this
 */
proto.bosdyn.api.ListImageSourcesResponse.prototype.clearHeader = function() {
  return this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.ListImageSourcesResponse.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated ImageSource image_sources = 2;
 * @return {!Array<!proto.bosdyn.api.ImageSource>}
 */
proto.bosdyn.api.ListImageSourcesResponse.prototype.getImageSourcesList = function() {
  return /** @type{!Array<!proto.bosdyn.api.ImageSource>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.bosdyn.api.ImageSource, 2));
};


/**
 * @param {!Array<!proto.bosdyn.api.ImageSource>} value
 * @return {!proto.bosdyn.api.ListImageSourcesResponse} returns this
*/
proto.bosdyn.api.ListImageSourcesResponse.prototype.setImageSourcesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.bosdyn.api.ImageSource=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bosdyn.api.ImageSource}
 */
proto.bosdyn.api.ListImageSourcesResponse.prototype.addImageSources = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.bosdyn.api.ImageSource, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bosdyn.api.ListImageSourcesResponse} returns this
 */
proto.bosdyn.api.ListImageSourcesResponse.prototype.clearImageSourcesList = function() {
  return this.setImageSourcesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.ImageRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.ImageRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.ImageRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.ImageRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    imageSourceName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    qualityPercent: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    imageFormat: jspb.Message.getFieldWithDefault(msg, 3, 0),
    resizeRatio: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    pixelFormat: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.ImageRequest}
 */
proto.bosdyn.api.ImageRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.ImageRequest;
  return proto.bosdyn.api.ImageRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.ImageRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.ImageRequest}
 */
proto.bosdyn.api.ImageRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setImageSourceName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setQualityPercent(value);
      break;
    case 3:
      var value = /** @type {!proto.bosdyn.api.Image.Format} */ (reader.readEnum());
      msg.setImageFormat(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setResizeRatio(value);
      break;
    case 5:
      var value = /** @type {!proto.bosdyn.api.Image.PixelFormat} */ (reader.readEnum());
      msg.setPixelFormat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.ImageRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.ImageRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.ImageRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.ImageRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getImageSourceName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getQualityPercent();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getImageFormat();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getResizeRatio();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getPixelFormat();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
};


/**
 * optional string image_source_name = 1;
 * @return {string}
 */
proto.bosdyn.api.ImageRequest.prototype.getImageSourceName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bosdyn.api.ImageRequest} returns this
 */
proto.bosdyn.api.ImageRequest.prototype.setImageSourceName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional double quality_percent = 2;
 * @return {number}
 */
proto.bosdyn.api.ImageRequest.prototype.getQualityPercent = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.bosdyn.api.ImageRequest} returns this
 */
proto.bosdyn.api.ImageRequest.prototype.setQualityPercent = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional Image.Format image_format = 3;
 * @return {!proto.bosdyn.api.Image.Format}
 */
proto.bosdyn.api.ImageRequest.prototype.getImageFormat = function() {
  return /** @type {!proto.bosdyn.api.Image.Format} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.bosdyn.api.Image.Format} value
 * @return {!proto.bosdyn.api.ImageRequest} returns this
 */
proto.bosdyn.api.ImageRequest.prototype.setImageFormat = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional double resize_ratio = 4;
 * @return {number}
 */
proto.bosdyn.api.ImageRequest.prototype.getResizeRatio = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.bosdyn.api.ImageRequest} returns this
 */
proto.bosdyn.api.ImageRequest.prototype.setResizeRatio = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional Image.PixelFormat pixel_format = 5;
 * @return {!proto.bosdyn.api.Image.PixelFormat}
 */
proto.bosdyn.api.ImageRequest.prototype.getPixelFormat = function() {
  return /** @type {!proto.bosdyn.api.Image.PixelFormat} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.bosdyn.api.Image.PixelFormat} value
 * @return {!proto.bosdyn.api.ImageRequest} returns this
 */
proto.bosdyn.api.ImageRequest.prototype.setPixelFormat = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bosdyn.api.GetImageRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.GetImageRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.GetImageRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.GetImageRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.GetImageRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && bosdyn_api_header_pb.RequestHeader.toObject(includeInstance, f),
    imageRequestsList: jspb.Message.toObjectList(msg.getImageRequestsList(),
    proto.bosdyn.api.ImageRequest.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.GetImageRequest}
 */
proto.bosdyn.api.GetImageRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.GetImageRequest;
  return proto.bosdyn.api.GetImageRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.GetImageRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.GetImageRequest}
 */
proto.bosdyn.api.GetImageRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new bosdyn_api_header_pb.RequestHeader;
      reader.readMessage(value,bosdyn_api_header_pb.RequestHeader.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 2:
      var value = new proto.bosdyn.api.ImageRequest;
      reader.readMessage(value,proto.bosdyn.api.ImageRequest.deserializeBinaryFromReader);
      msg.addImageRequests(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.GetImageRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.GetImageRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.GetImageRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.GetImageRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      bosdyn_api_header_pb.RequestHeader.serializeBinaryToWriter
    );
  }
  f = message.getImageRequestsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.bosdyn.api.ImageRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional RequestHeader header = 1;
 * @return {?proto.bosdyn.api.RequestHeader}
 */
proto.bosdyn.api.GetImageRequest.prototype.getHeader = function() {
  return /** @type{?proto.bosdyn.api.RequestHeader} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_header_pb.RequestHeader, 1));
};


/**
 * @param {?proto.bosdyn.api.RequestHeader|undefined} value
 * @return {!proto.bosdyn.api.GetImageRequest} returns this
*/
proto.bosdyn.api.GetImageRequest.prototype.setHeader = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.GetImageRequest} returns this
 */
proto.bosdyn.api.GetImageRequest.prototype.clearHeader = function() {
  return this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.GetImageRequest.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated ImageRequest image_requests = 2;
 * @return {!Array<!proto.bosdyn.api.ImageRequest>}
 */
proto.bosdyn.api.GetImageRequest.prototype.getImageRequestsList = function() {
  return /** @type{!Array<!proto.bosdyn.api.ImageRequest>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.bosdyn.api.ImageRequest, 2));
};


/**
 * @param {!Array<!proto.bosdyn.api.ImageRequest>} value
 * @return {!proto.bosdyn.api.GetImageRequest} returns this
*/
proto.bosdyn.api.GetImageRequest.prototype.setImageRequestsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.bosdyn.api.ImageRequest=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bosdyn.api.ImageRequest}
 */
proto.bosdyn.api.GetImageRequest.prototype.addImageRequests = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.bosdyn.api.ImageRequest, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bosdyn.api.GetImageRequest} returns this
 */
proto.bosdyn.api.GetImageRequest.prototype.clearImageRequestsList = function() {
  return this.setImageRequestsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.ImageResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.ImageResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.ImageResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.ImageResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    shot: (f = msg.getShot()) && proto.bosdyn.api.ImageCapture.toObject(includeInstance, f),
    source: (f = msg.getSource()) && proto.bosdyn.api.ImageSource.toObject(includeInstance, f),
    status: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.ImageResponse}
 */
proto.bosdyn.api.ImageResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.ImageResponse;
  return proto.bosdyn.api.ImageResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.ImageResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.ImageResponse}
 */
proto.bosdyn.api.ImageResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.bosdyn.api.ImageCapture;
      reader.readMessage(value,proto.bosdyn.api.ImageCapture.deserializeBinaryFromReader);
      msg.setShot(value);
      break;
    case 2:
      var value = new proto.bosdyn.api.ImageSource;
      reader.readMessage(value,proto.bosdyn.api.ImageSource.deserializeBinaryFromReader);
      msg.setSource(value);
      break;
    case 4:
      var value = /** @type {!proto.bosdyn.api.ImageResponse.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.ImageResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.ImageResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.ImageResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.ImageResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getShot();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.bosdyn.api.ImageCapture.serializeBinaryToWriter
    );
  }
  f = message.getSource();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.bosdyn.api.ImageSource.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.bosdyn.api.ImageResponse.Status = {
  STATUS_UNKNOWN: 0,
  STATUS_OK: 1,
  STATUS_UNKNOWN_CAMERA: 2,
  STATUS_SOURCE_DATA_ERROR: 3,
  STATUS_IMAGE_DATA_ERROR: 4,
  STATUS_UNSUPPORTED_IMAGE_FORMAT_REQUESTED: 5,
  STATUS_UNSUPPORTED_PIXEL_FORMAT_REQUESTED: 6,
  STATUS_UNSUPPORTED_RESIZE_RATIO_REQUESTED: 7
};

/**
 * optional ImageCapture shot = 1;
 * @return {?proto.bosdyn.api.ImageCapture}
 */
proto.bosdyn.api.ImageResponse.prototype.getShot = function() {
  return /** @type{?proto.bosdyn.api.ImageCapture} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.ImageCapture, 1));
};


/**
 * @param {?proto.bosdyn.api.ImageCapture|undefined} value
 * @return {!proto.bosdyn.api.ImageResponse} returns this
*/
proto.bosdyn.api.ImageResponse.prototype.setShot = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.ImageResponse} returns this
 */
proto.bosdyn.api.ImageResponse.prototype.clearShot = function() {
  return this.setShot(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.ImageResponse.prototype.hasShot = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ImageSource source = 2;
 * @return {?proto.bosdyn.api.ImageSource}
 */
proto.bosdyn.api.ImageResponse.prototype.getSource = function() {
  return /** @type{?proto.bosdyn.api.ImageSource} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.ImageSource, 2));
};


/**
 * @param {?proto.bosdyn.api.ImageSource|undefined} value
 * @return {!proto.bosdyn.api.ImageResponse} returns this
*/
proto.bosdyn.api.ImageResponse.prototype.setSource = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.ImageResponse} returns this
 */
proto.bosdyn.api.ImageResponse.prototype.clearSource = function() {
  return this.setSource(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.ImageResponse.prototype.hasSource = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Status status = 4;
 * @return {!proto.bosdyn.api.ImageResponse.Status}
 */
proto.bosdyn.api.ImageResponse.prototype.getStatus = function() {
  return /** @type {!proto.bosdyn.api.ImageResponse.Status} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.bosdyn.api.ImageResponse.Status} value
 * @return {!proto.bosdyn.api.ImageResponse} returns this
 */
proto.bosdyn.api.ImageResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bosdyn.api.GetImageResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.GetImageResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.GetImageResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.GetImageResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.GetImageResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && bosdyn_api_header_pb.ResponseHeader.toObject(includeInstance, f),
    imageResponsesList: jspb.Message.toObjectList(msg.getImageResponsesList(),
    proto.bosdyn.api.ImageResponse.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.GetImageResponse}
 */
proto.bosdyn.api.GetImageResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.GetImageResponse;
  return proto.bosdyn.api.GetImageResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.GetImageResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.GetImageResponse}
 */
proto.bosdyn.api.GetImageResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new bosdyn_api_header_pb.ResponseHeader;
      reader.readMessage(value,bosdyn_api_header_pb.ResponseHeader.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 2:
      var value = new proto.bosdyn.api.ImageResponse;
      reader.readMessage(value,proto.bosdyn.api.ImageResponse.deserializeBinaryFromReader);
      msg.addImageResponses(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.GetImageResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.GetImageResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.GetImageResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.GetImageResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      bosdyn_api_header_pb.ResponseHeader.serializeBinaryToWriter
    );
  }
  f = message.getImageResponsesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.bosdyn.api.ImageResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional ResponseHeader header = 1;
 * @return {?proto.bosdyn.api.ResponseHeader}
 */
proto.bosdyn.api.GetImageResponse.prototype.getHeader = function() {
  return /** @type{?proto.bosdyn.api.ResponseHeader} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_header_pb.ResponseHeader, 1));
};


/**
 * @param {?proto.bosdyn.api.ResponseHeader|undefined} value
 * @return {!proto.bosdyn.api.GetImageResponse} returns this
*/
proto.bosdyn.api.GetImageResponse.prototype.setHeader = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.GetImageResponse} returns this
 */
proto.bosdyn.api.GetImageResponse.prototype.clearHeader = function() {
  return this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.GetImageResponse.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated ImageResponse image_responses = 2;
 * @return {!Array<!proto.bosdyn.api.ImageResponse>}
 */
proto.bosdyn.api.GetImageResponse.prototype.getImageResponsesList = function() {
  return /** @type{!Array<!proto.bosdyn.api.ImageResponse>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.bosdyn.api.ImageResponse, 2));
};


/**
 * @param {!Array<!proto.bosdyn.api.ImageResponse>} value
 * @return {!proto.bosdyn.api.GetImageResponse} returns this
*/
proto.bosdyn.api.GetImageResponse.prototype.setImageResponsesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.bosdyn.api.ImageResponse=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bosdyn.api.ImageResponse}
 */
proto.bosdyn.api.GetImageResponse.prototype.addImageResponses = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.bosdyn.api.ImageResponse, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bosdyn.api.GetImageResponse} returns this
 */
proto.bosdyn.api.GetImageResponse.prototype.clearImageResponsesList = function() {
  return this.setImageResponsesList([]);
};


goog.object.extend(exports, proto.bosdyn.api);
