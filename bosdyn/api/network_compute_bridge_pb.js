// source: bosdyn/api/network_compute_bridge.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var bosdyn_api_alerts_pb = require('../../bosdyn/api/alerts_pb.js');
goog.object.extend(proto, bosdyn_api_alerts_pb);
var bosdyn_api_header_pb = require('../../bosdyn/api/header_pb.js');
goog.object.extend(proto, bosdyn_api_header_pb);
var bosdyn_api_image_pb = require('../../bosdyn/api/image_pb.js');
goog.object.extend(proto, bosdyn_api_image_pb);
var bosdyn_api_service_customization_pb = require('../../bosdyn/api/service_customization_pb.js');
goog.object.extend(proto, bosdyn_api_service_customization_pb);
var bosdyn_api_world_object_pb = require('../../bosdyn/api/world_object_pb.js');
goog.object.extend(proto, bosdyn_api_world_object_pb);
var google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js');
goog.object.extend(proto, google_protobuf_any_pb);
var google_protobuf_struct_pb = require('google-protobuf/google/protobuf/struct_pb.js');
goog.object.extend(proto, google_protobuf_struct_pb);
goog.exportSymbol('proto.bosdyn.api.AvailableModels', null, global);
goog.exportSymbol('proto.bosdyn.api.ComputeParameters', null, global);
goog.exportSymbol('proto.bosdyn.api.ImageSourceAndService', null, global);
goog.exportSymbol('proto.bosdyn.api.ImageSourceAndService.RequestDataCase', null, global);
goog.exportSymbol('proto.bosdyn.api.ListAvailableModelsRequest', null, global);
goog.exportSymbol('proto.bosdyn.api.ListAvailableModelsResponse', null, global);
goog.exportSymbol('proto.bosdyn.api.ListAvailableModelsStatus', null, global);
goog.exportSymbol('proto.bosdyn.api.ModelData', null, global);
goog.exportSymbol('proto.bosdyn.api.ModelLabels', null, global);
goog.exportSymbol('proto.bosdyn.api.NetworkComputeInputData', null, global);
goog.exportSymbol('proto.bosdyn.api.NetworkComputeInputData.InputCase', null, global);
goog.exportSymbol('proto.bosdyn.api.NetworkComputeInputData.RotateImage', null, global);
goog.exportSymbol('proto.bosdyn.api.NetworkComputeInputDataBridge', null, global);
goog.exportSymbol('proto.bosdyn.api.NetworkComputeInputDataWorker', null, global);
goog.exportSymbol('proto.bosdyn.api.NetworkComputeRequest', null, global);
goog.exportSymbol('proto.bosdyn.api.NetworkComputeRequest.InputCase', null, global);
goog.exportSymbol('proto.bosdyn.api.NetworkComputeResponse', null, global);
goog.exportSymbol('proto.bosdyn.api.NetworkComputeServerConfiguration', null, global);
goog.exportSymbol('proto.bosdyn.api.NetworkComputeStatus', null, global);
goog.exportSymbol('proto.bosdyn.api.OutputData', null, global);
goog.exportSymbol('proto.bosdyn.api.OutputImage', null, global);
goog.exportSymbol('proto.bosdyn.api.OutputImageSpec', null, global);
goog.exportSymbol('proto.bosdyn.api.WorkerComputeRequest', null, global);
goog.exportSymbol('proto.bosdyn.api.WorkerComputeResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.ListAvailableModelsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.ListAvailableModelsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.ListAvailableModelsRequest.displayName = 'proto.bosdyn.api.ListAvailableModelsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.ListAvailableModelsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bosdyn.api.ListAvailableModelsResponse.repeatedFields_, null);
};
goog.inherits(proto.bosdyn.api.ListAvailableModelsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.ListAvailableModelsResponse.displayName = 'proto.bosdyn.api.ListAvailableModelsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.AvailableModels = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bosdyn.api.AvailableModels.repeatedFields_, null);
};
goog.inherits(proto.bosdyn.api.AvailableModels, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.AvailableModels.displayName = 'proto.bosdyn.api.AvailableModels';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.ModelData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bosdyn.api.ModelData.repeatedFields_, null);
};
goog.inherits(proto.bosdyn.api.ModelData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.ModelData.displayName = 'proto.bosdyn.api.ModelData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.ModelLabels = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bosdyn.api.ModelLabels.repeatedFields_, null);
};
goog.inherits(proto.bosdyn.api.ModelLabels, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.ModelLabels.displayName = 'proto.bosdyn.api.ModelLabels';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.NetworkComputeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.bosdyn.api.NetworkComputeRequest.oneofGroups_);
};
goog.inherits(proto.bosdyn.api.NetworkComputeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.NetworkComputeRequest.displayName = 'proto.bosdyn.api.NetworkComputeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.ImageSourceAndService = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.bosdyn.api.ImageSourceAndService.oneofGroups_);
};
goog.inherits(proto.bosdyn.api.ImageSourceAndService, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.ImageSourceAndService.displayName = 'proto.bosdyn.api.ImageSourceAndService';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.OutputData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bosdyn.api.OutputData.repeatedFields_, null);
};
goog.inherits(proto.bosdyn.api.OutputData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.OutputData.displayName = 'proto.bosdyn.api.OutputData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.ComputeParameters = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bosdyn.api.ComputeParameters.repeatedFields_, null);
};
goog.inherits(proto.bosdyn.api.ComputeParameters, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.ComputeParameters.displayName = 'proto.bosdyn.api.ComputeParameters';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.NetworkComputeInputDataBridge = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bosdyn.api.NetworkComputeInputDataBridge.repeatedFields_, null);
};
goog.inherits(proto.bosdyn.api.NetworkComputeInputDataBridge, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.NetworkComputeInputDataBridge.displayName = 'proto.bosdyn.api.NetworkComputeInputDataBridge';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.NetworkComputeInputDataWorker = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bosdyn.api.NetworkComputeInputDataWorker.repeatedFields_, null);
};
goog.inherits(proto.bosdyn.api.NetworkComputeInputDataWorker, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.NetworkComputeInputDataWorker.displayName = 'proto.bosdyn.api.NetworkComputeInputDataWorker';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.NetworkComputeInputData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.bosdyn.api.NetworkComputeInputData.oneofGroups_);
};
goog.inherits(proto.bosdyn.api.NetworkComputeInputData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.NetworkComputeInputData.displayName = 'proto.bosdyn.api.NetworkComputeInputData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.NetworkComputeServerConfiguration = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.NetworkComputeServerConfiguration, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.NetworkComputeServerConfiguration.displayName = 'proto.bosdyn.api.NetworkComputeServerConfiguration';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.OutputImage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bosdyn.api.OutputImage.repeatedFields_, null);
};
goog.inherits(proto.bosdyn.api.OutputImage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.OutputImage.displayName = 'proto.bosdyn.api.OutputImage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.OutputImageSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.OutputImageSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.OutputImageSpec.displayName = 'proto.bosdyn.api.OutputImageSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.NetworkComputeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bosdyn.api.NetworkComputeResponse.repeatedFields_, null);
};
goog.inherits(proto.bosdyn.api.NetworkComputeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.NetworkComputeResponse.displayName = 'proto.bosdyn.api.NetworkComputeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.WorkerComputeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.WorkerComputeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.WorkerComputeRequest.displayName = 'proto.bosdyn.api.WorkerComputeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.WorkerComputeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.WorkerComputeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.WorkerComputeResponse.displayName = 'proto.bosdyn.api.WorkerComputeResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.ListAvailableModelsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.ListAvailableModelsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.ListAvailableModelsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.ListAvailableModelsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && bosdyn_api_header_pb.RequestHeader.toObject(includeInstance, f),
    serverConfig: (f = msg.getServerConfig()) && proto.bosdyn.api.NetworkComputeServerConfiguration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.ListAvailableModelsRequest}
 */
proto.bosdyn.api.ListAvailableModelsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.ListAvailableModelsRequest;
  return proto.bosdyn.api.ListAvailableModelsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.ListAvailableModelsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.ListAvailableModelsRequest}
 */
proto.bosdyn.api.ListAvailableModelsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new bosdyn_api_header_pb.RequestHeader;
      reader.readMessage(value,bosdyn_api_header_pb.RequestHeader.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 2:
      var value = new proto.bosdyn.api.NetworkComputeServerConfiguration;
      reader.readMessage(value,proto.bosdyn.api.NetworkComputeServerConfiguration.deserializeBinaryFromReader);
      msg.setServerConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.ListAvailableModelsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.ListAvailableModelsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.ListAvailableModelsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.ListAvailableModelsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      bosdyn_api_header_pb.RequestHeader.serializeBinaryToWriter
    );
  }
  f = message.getServerConfig();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.bosdyn.api.NetworkComputeServerConfiguration.serializeBinaryToWriter
    );
  }
};


/**
 * optional RequestHeader header = 1;
 * @return {?proto.bosdyn.api.RequestHeader}
 */
proto.bosdyn.api.ListAvailableModelsRequest.prototype.getHeader = function() {
  return /** @type{?proto.bosdyn.api.RequestHeader} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_header_pb.RequestHeader, 1));
};


/**
 * @param {?proto.bosdyn.api.RequestHeader|undefined} value
 * @return {!proto.bosdyn.api.ListAvailableModelsRequest} returns this
*/
proto.bosdyn.api.ListAvailableModelsRequest.prototype.setHeader = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.ListAvailableModelsRequest} returns this
 */
proto.bosdyn.api.ListAvailableModelsRequest.prototype.clearHeader = function() {
  return this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.ListAvailableModelsRequest.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional NetworkComputeServerConfiguration server_config = 2;
 * @return {?proto.bosdyn.api.NetworkComputeServerConfiguration}
 */
proto.bosdyn.api.ListAvailableModelsRequest.prototype.getServerConfig = function() {
  return /** @type{?proto.bosdyn.api.NetworkComputeServerConfiguration} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.NetworkComputeServerConfiguration, 2));
};


/**
 * @param {?proto.bosdyn.api.NetworkComputeServerConfiguration|undefined} value
 * @return {!proto.bosdyn.api.ListAvailableModelsRequest} returns this
*/
proto.bosdyn.api.ListAvailableModelsRequest.prototype.setServerConfig = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.ListAvailableModelsRequest} returns this
 */
proto.bosdyn.api.ListAvailableModelsRequest.prototype.clearServerConfig = function() {
  return this.setServerConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.ListAvailableModelsRequest.prototype.hasServerConfig = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bosdyn.api.ListAvailableModelsResponse.repeatedFields_ = [2,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.ListAvailableModelsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.ListAvailableModelsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.ListAvailableModelsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.ListAvailableModelsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && bosdyn_api_header_pb.ResponseHeader.toObject(includeInstance, f),
    availableModelsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    labelsList: jspb.Message.toObjectList(msg.getLabelsList(),
    proto.bosdyn.api.ModelLabels.toObject, includeInstance),
    models: (f = msg.getModels()) && proto.bosdyn.api.AvailableModels.toObject(includeInstance, f),
    status: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.ListAvailableModelsResponse}
 */
proto.bosdyn.api.ListAvailableModelsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.ListAvailableModelsResponse;
  return proto.bosdyn.api.ListAvailableModelsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.ListAvailableModelsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.ListAvailableModelsResponse}
 */
proto.bosdyn.api.ListAvailableModelsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new bosdyn_api_header_pb.ResponseHeader;
      reader.readMessage(value,bosdyn_api_header_pb.ResponseHeader.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addAvailableModels(value);
      break;
    case 6:
      var value = new proto.bosdyn.api.ModelLabels;
      reader.readMessage(value,proto.bosdyn.api.ModelLabels.deserializeBinaryFromReader);
      msg.addLabels(value);
      break;
    case 3:
      var value = new proto.bosdyn.api.AvailableModels;
      reader.readMessage(value,proto.bosdyn.api.AvailableModels.deserializeBinaryFromReader);
      msg.setModels(value);
      break;
    case 5:
      var value = /** @type {!proto.bosdyn.api.ListAvailableModelsStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.ListAvailableModelsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.ListAvailableModelsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.ListAvailableModelsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.ListAvailableModelsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      bosdyn_api_header_pb.ResponseHeader.serializeBinaryToWriter
    );
  }
  f = message.getAvailableModelsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getLabelsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.bosdyn.api.ModelLabels.serializeBinaryToWriter
    );
  }
  f = message.getModels();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.bosdyn.api.AvailableModels.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
};


/**
 * optional ResponseHeader header = 1;
 * @return {?proto.bosdyn.api.ResponseHeader}
 */
proto.bosdyn.api.ListAvailableModelsResponse.prototype.getHeader = function() {
  return /** @type{?proto.bosdyn.api.ResponseHeader} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_header_pb.ResponseHeader, 1));
};


/**
 * @param {?proto.bosdyn.api.ResponseHeader|undefined} value
 * @return {!proto.bosdyn.api.ListAvailableModelsResponse} returns this
*/
proto.bosdyn.api.ListAvailableModelsResponse.prototype.setHeader = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.ListAvailableModelsResponse} returns this
 */
proto.bosdyn.api.ListAvailableModelsResponse.prototype.clearHeader = function() {
  return this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.ListAvailableModelsResponse.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated string available_models = 2;
 * @return {!Array<string>}
 */
proto.bosdyn.api.ListAvailableModelsResponse.prototype.getAvailableModelsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.bosdyn.api.ListAvailableModelsResponse} returns this
 */
proto.bosdyn.api.ListAvailableModelsResponse.prototype.setAvailableModelsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.bosdyn.api.ListAvailableModelsResponse} returns this
 */
proto.bosdyn.api.ListAvailableModelsResponse.prototype.addAvailableModels = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bosdyn.api.ListAvailableModelsResponse} returns this
 */
proto.bosdyn.api.ListAvailableModelsResponse.prototype.clearAvailableModelsList = function() {
  return this.setAvailableModelsList([]);
};


/**
 * repeated ModelLabels labels = 6;
 * @return {!Array<!proto.bosdyn.api.ModelLabels>}
 */
proto.bosdyn.api.ListAvailableModelsResponse.prototype.getLabelsList = function() {
  return /** @type{!Array<!proto.bosdyn.api.ModelLabels>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.bosdyn.api.ModelLabels, 6));
};


/**
 * @param {!Array<!proto.bosdyn.api.ModelLabels>} value
 * @return {!proto.bosdyn.api.ListAvailableModelsResponse} returns this
*/
proto.bosdyn.api.ListAvailableModelsResponse.prototype.setLabelsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.bosdyn.api.ModelLabels=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bosdyn.api.ModelLabels}
 */
proto.bosdyn.api.ListAvailableModelsResponse.prototype.addLabels = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.bosdyn.api.ModelLabels, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bosdyn.api.ListAvailableModelsResponse} returns this
 */
proto.bosdyn.api.ListAvailableModelsResponse.prototype.clearLabelsList = function() {
  return this.setLabelsList([]);
};


/**
 * optional AvailableModels models = 3;
 * @return {?proto.bosdyn.api.AvailableModels}
 */
proto.bosdyn.api.ListAvailableModelsResponse.prototype.getModels = function() {
  return /** @type{?proto.bosdyn.api.AvailableModels} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.AvailableModels, 3));
};


/**
 * @param {?proto.bosdyn.api.AvailableModels|undefined} value
 * @return {!proto.bosdyn.api.ListAvailableModelsResponse} returns this
*/
proto.bosdyn.api.ListAvailableModelsResponse.prototype.setModels = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.ListAvailableModelsResponse} returns this
 */
proto.bosdyn.api.ListAvailableModelsResponse.prototype.clearModels = function() {
  return this.setModels(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.ListAvailableModelsResponse.prototype.hasModels = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ListAvailableModelsStatus status = 5;
 * @return {!proto.bosdyn.api.ListAvailableModelsStatus}
 */
proto.bosdyn.api.ListAvailableModelsResponse.prototype.getStatus = function() {
  return /** @type {!proto.bosdyn.api.ListAvailableModelsStatus} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.bosdyn.api.ListAvailableModelsStatus} value
 * @return {!proto.bosdyn.api.ListAvailableModelsResponse} returns this
 */
proto.bosdyn.api.ListAvailableModelsResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bosdyn.api.AvailableModels.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.AvailableModels.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.AvailableModels.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.AvailableModels} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.AvailableModels.toObject = function(includeInstance, msg) {
  var f, obj = {
    dataList: jspb.Message.toObjectList(msg.getDataList(),
    proto.bosdyn.api.ModelData.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.AvailableModels}
 */
proto.bosdyn.api.AvailableModels.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.AvailableModels;
  return proto.bosdyn.api.AvailableModels.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.AvailableModels} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.AvailableModels}
 */
proto.bosdyn.api.AvailableModels.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.bosdyn.api.ModelData;
      reader.readMessage(value,proto.bosdyn.api.ModelData.deserializeBinaryFromReader);
      msg.addData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.AvailableModels.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.AvailableModels.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.AvailableModels} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.AvailableModels.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.bosdyn.api.ModelData.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ModelData data = 1;
 * @return {!Array<!proto.bosdyn.api.ModelData>}
 */
proto.bosdyn.api.AvailableModels.prototype.getDataList = function() {
  return /** @type{!Array<!proto.bosdyn.api.ModelData>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.bosdyn.api.ModelData, 1));
};


/**
 * @param {!Array<!proto.bosdyn.api.ModelData>} value
 * @return {!proto.bosdyn.api.AvailableModels} returns this
*/
proto.bosdyn.api.AvailableModels.prototype.setDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.bosdyn.api.ModelData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bosdyn.api.ModelData}
 */
proto.bosdyn.api.AvailableModels.prototype.addData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.bosdyn.api.ModelData, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bosdyn.api.AvailableModels} returns this
 */
proto.bosdyn.api.AvailableModels.prototype.clearDataList = function() {
  return this.setDataList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bosdyn.api.ModelData.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.ModelData.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.ModelData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.ModelData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.ModelData.toObject = function(includeInstance, msg) {
  var f, obj = {
    modelName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    availableLabelsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    outputImageSpecList: jspb.Message.toObjectList(msg.getOutputImageSpecList(),
    proto.bosdyn.api.OutputImageSpec.toObject, includeInstance),
    customParams: (f = msg.getCustomParams()) && bosdyn_api_service_customization_pb.DictParam.Spec.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.ModelData}
 */
proto.bosdyn.api.ModelData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.ModelData;
  return proto.bosdyn.api.ModelData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.ModelData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.ModelData}
 */
proto.bosdyn.api.ModelData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setModelName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addAvailableLabels(value);
      break;
    case 3:
      var value = new proto.bosdyn.api.OutputImageSpec;
      reader.readMessage(value,proto.bosdyn.api.OutputImageSpec.deserializeBinaryFromReader);
      msg.addOutputImageSpec(value);
      break;
    case 7:
      var value = new bosdyn_api_service_customization_pb.DictParam.Spec;
      reader.readMessage(value,bosdyn_api_service_customization_pb.DictParam.Spec.deserializeBinaryFromReader);
      msg.setCustomParams(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.ModelData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.ModelData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.ModelData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.ModelData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getModelName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAvailableLabelsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getOutputImageSpecList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.bosdyn.api.OutputImageSpec.serializeBinaryToWriter
    );
  }
  f = message.getCustomParams();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      bosdyn_api_service_customization_pb.DictParam.Spec.serializeBinaryToWriter
    );
  }
};


/**
 * optional string model_name = 1;
 * @return {string}
 */
proto.bosdyn.api.ModelData.prototype.getModelName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bosdyn.api.ModelData} returns this
 */
proto.bosdyn.api.ModelData.prototype.setModelName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string available_labels = 2;
 * @return {!Array<string>}
 */
proto.bosdyn.api.ModelData.prototype.getAvailableLabelsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.bosdyn.api.ModelData} returns this
 */
proto.bosdyn.api.ModelData.prototype.setAvailableLabelsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.bosdyn.api.ModelData} returns this
 */
proto.bosdyn.api.ModelData.prototype.addAvailableLabels = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bosdyn.api.ModelData} returns this
 */
proto.bosdyn.api.ModelData.prototype.clearAvailableLabelsList = function() {
  return this.setAvailableLabelsList([]);
};


/**
 * repeated OutputImageSpec output_image_spec = 3;
 * @return {!Array<!proto.bosdyn.api.OutputImageSpec>}
 */
proto.bosdyn.api.ModelData.prototype.getOutputImageSpecList = function() {
  return /** @type{!Array<!proto.bosdyn.api.OutputImageSpec>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.bosdyn.api.OutputImageSpec, 3));
};


/**
 * @param {!Array<!proto.bosdyn.api.OutputImageSpec>} value
 * @return {!proto.bosdyn.api.ModelData} returns this
*/
proto.bosdyn.api.ModelData.prototype.setOutputImageSpecList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.bosdyn.api.OutputImageSpec=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bosdyn.api.OutputImageSpec}
 */
proto.bosdyn.api.ModelData.prototype.addOutputImageSpec = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.bosdyn.api.OutputImageSpec, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bosdyn.api.ModelData} returns this
 */
proto.bosdyn.api.ModelData.prototype.clearOutputImageSpecList = function() {
  return this.setOutputImageSpecList([]);
};


/**
 * optional DictParam.Spec custom_params = 7;
 * @return {?proto.bosdyn.api.DictParam.Spec}
 */
proto.bosdyn.api.ModelData.prototype.getCustomParams = function() {
  return /** @type{?proto.bosdyn.api.DictParam.Spec} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_service_customization_pb.DictParam.Spec, 7));
};


/**
 * @param {?proto.bosdyn.api.DictParam.Spec|undefined} value
 * @return {!proto.bosdyn.api.ModelData} returns this
*/
proto.bosdyn.api.ModelData.prototype.setCustomParams = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.ModelData} returns this
 */
proto.bosdyn.api.ModelData.prototype.clearCustomParams = function() {
  return this.setCustomParams(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.ModelData.prototype.hasCustomParams = function() {
  return jspb.Message.getField(this, 7) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bosdyn.api.ModelLabels.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.ModelLabels.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.ModelLabels.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.ModelLabels} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.ModelLabels.toObject = function(includeInstance, msg) {
  var f, obj = {
    modelName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    availableLabelsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.ModelLabels}
 */
proto.bosdyn.api.ModelLabels.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.ModelLabels;
  return proto.bosdyn.api.ModelLabels.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.ModelLabels} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.ModelLabels}
 */
proto.bosdyn.api.ModelLabels.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setModelName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addAvailableLabels(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.ModelLabels.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.ModelLabels.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.ModelLabels} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.ModelLabels.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getModelName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAvailableLabelsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * optional string model_name = 1;
 * @return {string}
 */
proto.bosdyn.api.ModelLabels.prototype.getModelName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bosdyn.api.ModelLabels} returns this
 */
proto.bosdyn.api.ModelLabels.prototype.setModelName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string available_labels = 2;
 * @return {!Array<string>}
 */
proto.bosdyn.api.ModelLabels.prototype.getAvailableLabelsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.bosdyn.api.ModelLabels} returns this
 */
proto.bosdyn.api.ModelLabels.prototype.setAvailableLabelsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.bosdyn.api.ModelLabels} returns this
 */
proto.bosdyn.api.ModelLabels.prototype.addAvailableLabels = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bosdyn.api.ModelLabels} returns this
 */
proto.bosdyn.api.ModelLabels.prototype.clearAvailableLabelsList = function() {
  return this.setAvailableLabelsList([]);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.bosdyn.api.NetworkComputeRequest.oneofGroups_ = [[2,4]];

/**
 * @enum {number}
 */
proto.bosdyn.api.NetworkComputeRequest.InputCase = {
  INPUT_NOT_SET: 0,
  INPUT_DATA: 2,
  INPUT_DATA_BRIDGE: 4
};

/**
 * @return {proto.bosdyn.api.NetworkComputeRequest.InputCase}
 */
proto.bosdyn.api.NetworkComputeRequest.prototype.getInputCase = function() {
  return /** @type {proto.bosdyn.api.NetworkComputeRequest.InputCase} */(jspb.Message.computeOneofCase(this, proto.bosdyn.api.NetworkComputeRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.NetworkComputeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.NetworkComputeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.NetworkComputeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.NetworkComputeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && bosdyn_api_header_pb.RequestHeader.toObject(includeInstance, f),
    inputData: (f = msg.getInputData()) && proto.bosdyn.api.NetworkComputeInputData.toObject(includeInstance, f),
    inputDataBridge: (f = msg.getInputDataBridge()) && proto.bosdyn.api.NetworkComputeInputDataBridge.toObject(includeInstance, f),
    serverConfig: (f = msg.getServerConfig()) && proto.bosdyn.api.NetworkComputeServerConfiguration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.NetworkComputeRequest}
 */
proto.bosdyn.api.NetworkComputeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.NetworkComputeRequest;
  return proto.bosdyn.api.NetworkComputeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.NetworkComputeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.NetworkComputeRequest}
 */
proto.bosdyn.api.NetworkComputeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new bosdyn_api_header_pb.RequestHeader;
      reader.readMessage(value,bosdyn_api_header_pb.RequestHeader.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 2:
      var value = new proto.bosdyn.api.NetworkComputeInputData;
      reader.readMessage(value,proto.bosdyn.api.NetworkComputeInputData.deserializeBinaryFromReader);
      msg.setInputData(value);
      break;
    case 4:
      var value = new proto.bosdyn.api.NetworkComputeInputDataBridge;
      reader.readMessage(value,proto.bosdyn.api.NetworkComputeInputDataBridge.deserializeBinaryFromReader);
      msg.setInputDataBridge(value);
      break;
    case 3:
      var value = new proto.bosdyn.api.NetworkComputeServerConfiguration;
      reader.readMessage(value,proto.bosdyn.api.NetworkComputeServerConfiguration.deserializeBinaryFromReader);
      msg.setServerConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.NetworkComputeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.NetworkComputeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.NetworkComputeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.NetworkComputeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      bosdyn_api_header_pb.RequestHeader.serializeBinaryToWriter
    );
  }
  f = message.getInputData();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.bosdyn.api.NetworkComputeInputData.serializeBinaryToWriter
    );
  }
  f = message.getInputDataBridge();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.bosdyn.api.NetworkComputeInputDataBridge.serializeBinaryToWriter
    );
  }
  f = message.getServerConfig();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.bosdyn.api.NetworkComputeServerConfiguration.serializeBinaryToWriter
    );
  }
};


/**
 * optional RequestHeader header = 1;
 * @return {?proto.bosdyn.api.RequestHeader}
 */
proto.bosdyn.api.NetworkComputeRequest.prototype.getHeader = function() {
  return /** @type{?proto.bosdyn.api.RequestHeader} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_header_pb.RequestHeader, 1));
};


/**
 * @param {?proto.bosdyn.api.RequestHeader|undefined} value
 * @return {!proto.bosdyn.api.NetworkComputeRequest} returns this
*/
proto.bosdyn.api.NetworkComputeRequest.prototype.setHeader = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.NetworkComputeRequest} returns this
 */
proto.bosdyn.api.NetworkComputeRequest.prototype.clearHeader = function() {
  return this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.NetworkComputeRequest.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional NetworkComputeInputData input_data = 2;
 * @return {?proto.bosdyn.api.NetworkComputeInputData}
 */
proto.bosdyn.api.NetworkComputeRequest.prototype.getInputData = function() {
  return /** @type{?proto.bosdyn.api.NetworkComputeInputData} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.NetworkComputeInputData, 2));
};


/**
 * @param {?proto.bosdyn.api.NetworkComputeInputData|undefined} value
 * @return {!proto.bosdyn.api.NetworkComputeRequest} returns this
*/
proto.bosdyn.api.NetworkComputeRequest.prototype.setInputData = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.bosdyn.api.NetworkComputeRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.NetworkComputeRequest} returns this
 */
proto.bosdyn.api.NetworkComputeRequest.prototype.clearInputData = function() {
  return this.setInputData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.NetworkComputeRequest.prototype.hasInputData = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional NetworkComputeInputDataBridge input_data_bridge = 4;
 * @return {?proto.bosdyn.api.NetworkComputeInputDataBridge}
 */
proto.bosdyn.api.NetworkComputeRequest.prototype.getInputDataBridge = function() {
  return /** @type{?proto.bosdyn.api.NetworkComputeInputDataBridge} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.NetworkComputeInputDataBridge, 4));
};


/**
 * @param {?proto.bosdyn.api.NetworkComputeInputDataBridge|undefined} value
 * @return {!proto.bosdyn.api.NetworkComputeRequest} returns this
*/
proto.bosdyn.api.NetworkComputeRequest.prototype.setInputDataBridge = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.bosdyn.api.NetworkComputeRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.NetworkComputeRequest} returns this
 */
proto.bosdyn.api.NetworkComputeRequest.prototype.clearInputDataBridge = function() {
  return this.setInputDataBridge(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.NetworkComputeRequest.prototype.hasInputDataBridge = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional NetworkComputeServerConfiguration server_config = 3;
 * @return {?proto.bosdyn.api.NetworkComputeServerConfiguration}
 */
proto.bosdyn.api.NetworkComputeRequest.prototype.getServerConfig = function() {
  return /** @type{?proto.bosdyn.api.NetworkComputeServerConfiguration} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.NetworkComputeServerConfiguration, 3));
};


/**
 * @param {?proto.bosdyn.api.NetworkComputeServerConfiguration|undefined} value
 * @return {!proto.bosdyn.api.NetworkComputeRequest} returns this
*/
proto.bosdyn.api.NetworkComputeRequest.prototype.setServerConfig = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.NetworkComputeRequest} returns this
 */
proto.bosdyn.api.NetworkComputeRequest.prototype.clearServerConfig = function() {
  return this.setServerConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.NetworkComputeRequest.prototype.hasServerConfig = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.bosdyn.api.ImageSourceAndService.oneofGroups_ = [[1,3]];

/**
 * @enum {number}
 */
proto.bosdyn.api.ImageSourceAndService.RequestDataCase = {
  REQUEST_DATA_NOT_SET: 0,
  IMAGE_SOURCE: 1,
  IMAGE_REQUEST: 3
};

/**
 * @return {proto.bosdyn.api.ImageSourceAndService.RequestDataCase}
 */
proto.bosdyn.api.ImageSourceAndService.prototype.getRequestDataCase = function() {
  return /** @type {proto.bosdyn.api.ImageSourceAndService.RequestDataCase} */(jspb.Message.computeOneofCase(this, proto.bosdyn.api.ImageSourceAndService.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.ImageSourceAndService.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.ImageSourceAndService.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.ImageSourceAndService} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.ImageSourceAndService.toObject = function(includeInstance, msg) {
  var f, obj = {
    imageSource: jspb.Message.getFieldWithDefault(msg, 1, ""),
    imageRequest: (f = msg.getImageRequest()) && bosdyn_api_image_pb.ImageRequest.toObject(includeInstance, f),
    imageService: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.ImageSourceAndService}
 */
proto.bosdyn.api.ImageSourceAndService.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.ImageSourceAndService;
  return proto.bosdyn.api.ImageSourceAndService.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.ImageSourceAndService} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.ImageSourceAndService}
 */
proto.bosdyn.api.ImageSourceAndService.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setImageSource(value);
      break;
    case 3:
      var value = new bosdyn_api_image_pb.ImageRequest;
      reader.readMessage(value,bosdyn_api_image_pb.ImageRequest.deserializeBinaryFromReader);
      msg.setImageRequest(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setImageService(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.ImageSourceAndService.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.ImageSourceAndService.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.ImageSourceAndService} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.ImageSourceAndService.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getImageRequest();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      bosdyn_api_image_pb.ImageRequest.serializeBinaryToWriter
    );
  }
  f = message.getImageService();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string image_source = 1;
 * @return {string}
 */
proto.bosdyn.api.ImageSourceAndService.prototype.getImageSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bosdyn.api.ImageSourceAndService} returns this
 */
proto.bosdyn.api.ImageSourceAndService.prototype.setImageSource = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.bosdyn.api.ImageSourceAndService.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.bosdyn.api.ImageSourceAndService} returns this
 */
proto.bosdyn.api.ImageSourceAndService.prototype.clearImageSource = function() {
  return jspb.Message.setOneofField(this, 1, proto.bosdyn.api.ImageSourceAndService.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.ImageSourceAndService.prototype.hasImageSource = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ImageRequest image_request = 3;
 * @return {?proto.bosdyn.api.ImageRequest}
 */
proto.bosdyn.api.ImageSourceAndService.prototype.getImageRequest = function() {
  return /** @type{?proto.bosdyn.api.ImageRequest} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_image_pb.ImageRequest, 3));
};


/**
 * @param {?proto.bosdyn.api.ImageRequest|undefined} value
 * @return {!proto.bosdyn.api.ImageSourceAndService} returns this
*/
proto.bosdyn.api.ImageSourceAndService.prototype.setImageRequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.bosdyn.api.ImageSourceAndService.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.ImageSourceAndService} returns this
 */
proto.bosdyn.api.ImageSourceAndService.prototype.clearImageRequest = function() {
  return this.setImageRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.ImageSourceAndService.prototype.hasImageRequest = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string image_service = 2;
 * @return {string}
 */
proto.bosdyn.api.ImageSourceAndService.prototype.getImageService = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.bosdyn.api.ImageSourceAndService} returns this
 */
proto.bosdyn.api.ImageSourceAndService.prototype.setImageService = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bosdyn.api.OutputData.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.OutputData.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.OutputData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.OutputData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.OutputData.toObject = function(includeInstance, msg) {
  var f, obj = {
    metadata: (f = msg.getMetadata()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f),
    objectInImageList: jspb.Message.toObjectList(msg.getObjectInImageList(),
    bosdyn_api_world_object_pb.WorldObject.toObject, includeInstance),
    alertData: (f = msg.getAlertData()) && bosdyn_api_alerts_pb.AlertData.toObject(includeInstance, f),
    otherData: (f = msg.getOtherData()) && google_protobuf_any_pb.Any.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.OutputData}
 */
proto.bosdyn.api.OutputData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.OutputData;
  return proto.bosdyn.api.OutputData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.OutputData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.OutputData}
 */
proto.bosdyn.api.OutputData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 3:
      var value = new bosdyn_api_world_object_pb.WorldObject;
      reader.readMessage(value,bosdyn_api_world_object_pb.WorldObject.deserializeBinaryFromReader);
      msg.addObjectInImage(value);
      break;
    case 4:
      var value = new bosdyn_api_alerts_pb.AlertData;
      reader.readMessage(value,bosdyn_api_alerts_pb.AlertData.deserializeBinaryFromReader);
      msg.setAlertData(value);
      break;
    case 5:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setOtherData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.OutputData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.OutputData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.OutputData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.OutputData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
  f = message.getObjectInImageList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      bosdyn_api_world_object_pb.WorldObject.serializeBinaryToWriter
    );
  }
  f = message.getAlertData();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      bosdyn_api_alerts_pb.AlertData.serializeBinaryToWriter
    );
  }
  f = message.getOtherData();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Struct metadata = 2;
 * @return {?proto.google.protobuf.Struct}
 */
proto.bosdyn.api.OutputData.prototype.getMetadata = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 2));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.bosdyn.api.OutputData} returns this
*/
proto.bosdyn.api.OutputData.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.OutputData} returns this
 */
proto.bosdyn.api.OutputData.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.OutputData.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated WorldObject object_in_image = 3;
 * @return {!Array<!proto.bosdyn.api.WorldObject>}
 */
proto.bosdyn.api.OutputData.prototype.getObjectInImageList = function() {
  return /** @type{!Array<!proto.bosdyn.api.WorldObject>} */ (
    jspb.Message.getRepeatedWrapperField(this, bosdyn_api_world_object_pb.WorldObject, 3));
};


/**
 * @param {!Array<!proto.bosdyn.api.WorldObject>} value
 * @return {!proto.bosdyn.api.OutputData} returns this
*/
proto.bosdyn.api.OutputData.prototype.setObjectInImageList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.bosdyn.api.WorldObject=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bosdyn.api.WorldObject}
 */
proto.bosdyn.api.OutputData.prototype.addObjectInImage = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.bosdyn.api.WorldObject, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bosdyn.api.OutputData} returns this
 */
proto.bosdyn.api.OutputData.prototype.clearObjectInImageList = function() {
  return this.setObjectInImageList([]);
};


/**
 * optional AlertData alert_data = 4;
 * @return {?proto.bosdyn.api.AlertData}
 */
proto.bosdyn.api.OutputData.prototype.getAlertData = function() {
  return /** @type{?proto.bosdyn.api.AlertData} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_alerts_pb.AlertData, 4));
};


/**
 * @param {?proto.bosdyn.api.AlertData|undefined} value
 * @return {!proto.bosdyn.api.OutputData} returns this
*/
proto.bosdyn.api.OutputData.prototype.setAlertData = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.OutputData} returns this
 */
proto.bosdyn.api.OutputData.prototype.clearAlertData = function() {
  return this.setAlertData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.OutputData.prototype.hasAlertData = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional google.protobuf.Any other_data = 5;
 * @return {?proto.google.protobuf.Any}
 */
proto.bosdyn.api.OutputData.prototype.getOtherData = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 5));
};


/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.bosdyn.api.OutputData} returns this
*/
proto.bosdyn.api.OutputData.prototype.setOtherData = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.OutputData} returns this
 */
proto.bosdyn.api.OutputData.prototype.clearOtherData = function() {
  return this.setOtherData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.OutputData.prototype.hasOtherData = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bosdyn.api.ComputeParameters.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.ComputeParameters.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.ComputeParameters.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.ComputeParameters} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.ComputeParameters.toObject = function(includeInstance, msg) {
  var f, obj = {
    otherData: (f = msg.getOtherData()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
    modelName: jspb.Message.getFieldWithDefault(msg, 4, ""),
    referenceImagesList: jspb.Message.toObjectList(msg.getReferenceImagesList(),
    bosdyn_api_image_pb.ImageCaptureAndSource.toObject, includeInstance),
    customParams: (f = msg.getCustomParams()) && bosdyn_api_service_customization_pb.DictParam.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.ComputeParameters}
 */
proto.bosdyn.api.ComputeParameters.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.ComputeParameters;
  return proto.bosdyn.api.ComputeParameters.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.ComputeParameters} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.ComputeParameters}
 */
proto.bosdyn.api.ComputeParameters.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 3:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setOtherData(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setModelName(value);
      break;
    case 6:
      var value = new bosdyn_api_image_pb.ImageCaptureAndSource;
      reader.readMessage(value,bosdyn_api_image_pb.ImageCaptureAndSource.deserializeBinaryFromReader);
      msg.addReferenceImages(value);
      break;
    case 7:
      var value = new bosdyn_api_service_customization_pb.DictParam;
      reader.readMessage(value,bosdyn_api_service_customization_pb.DictParam.deserializeBinaryFromReader);
      msg.setCustomParams(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.ComputeParameters.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.ComputeParameters.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.ComputeParameters} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.ComputeParameters.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOtherData();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
  f = message.getModelName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getReferenceImagesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      bosdyn_api_image_pb.ImageCaptureAndSource.serializeBinaryToWriter
    );
  }
  f = message.getCustomParams();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      bosdyn_api_service_customization_pb.DictParam.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Any other_data = 3;
 * @return {?proto.google.protobuf.Any}
 */
proto.bosdyn.api.ComputeParameters.prototype.getOtherData = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 3));
};


/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.bosdyn.api.ComputeParameters} returns this
*/
proto.bosdyn.api.ComputeParameters.prototype.setOtherData = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.ComputeParameters} returns this
 */
proto.bosdyn.api.ComputeParameters.prototype.clearOtherData = function() {
  return this.setOtherData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.ComputeParameters.prototype.hasOtherData = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string model_name = 4;
 * @return {string}
 */
proto.bosdyn.api.ComputeParameters.prototype.getModelName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.bosdyn.api.ComputeParameters} returns this
 */
proto.bosdyn.api.ComputeParameters.prototype.setModelName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * repeated ImageCaptureAndSource reference_images = 6;
 * @return {!Array<!proto.bosdyn.api.ImageCaptureAndSource>}
 */
proto.bosdyn.api.ComputeParameters.prototype.getReferenceImagesList = function() {
  return /** @type{!Array<!proto.bosdyn.api.ImageCaptureAndSource>} */ (
    jspb.Message.getRepeatedWrapperField(this, bosdyn_api_image_pb.ImageCaptureAndSource, 6));
};


/**
 * @param {!Array<!proto.bosdyn.api.ImageCaptureAndSource>} value
 * @return {!proto.bosdyn.api.ComputeParameters} returns this
*/
proto.bosdyn.api.ComputeParameters.prototype.setReferenceImagesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.bosdyn.api.ImageCaptureAndSource=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bosdyn.api.ImageCaptureAndSource}
 */
proto.bosdyn.api.ComputeParameters.prototype.addReferenceImages = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.bosdyn.api.ImageCaptureAndSource, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bosdyn.api.ComputeParameters} returns this
 */
proto.bosdyn.api.ComputeParameters.prototype.clearReferenceImagesList = function() {
  return this.setReferenceImagesList([]);
};


/**
 * optional DictParam custom_params = 7;
 * @return {?proto.bosdyn.api.DictParam}
 */
proto.bosdyn.api.ComputeParameters.prototype.getCustomParams = function() {
  return /** @type{?proto.bosdyn.api.DictParam} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_service_customization_pb.DictParam, 7));
};


/**
 * @param {?proto.bosdyn.api.DictParam|undefined} value
 * @return {!proto.bosdyn.api.ComputeParameters} returns this
*/
proto.bosdyn.api.ComputeParameters.prototype.setCustomParams = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.ComputeParameters} returns this
 */
proto.bosdyn.api.ComputeParameters.prototype.clearCustomParams = function() {
  return this.setCustomParams(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.ComputeParameters.prototype.hasCustomParams = function() {
  return jspb.Message.getField(this, 7) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bosdyn.api.NetworkComputeInputDataBridge.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.NetworkComputeInputDataBridge.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.NetworkComputeInputDataBridge.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.NetworkComputeInputDataBridge} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.NetworkComputeInputDataBridge.toObject = function(includeInstance, msg) {
  var f, obj = {
    imageSourcesAndServicesList: jspb.Message.toObjectList(msg.getImageSourcesAndServicesList(),
    proto.bosdyn.api.ImageSourceAndService.toObject, includeInstance),
    parameters: (f = msg.getParameters()) && proto.bosdyn.api.ComputeParameters.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.NetworkComputeInputDataBridge}
 */
proto.bosdyn.api.NetworkComputeInputDataBridge.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.NetworkComputeInputDataBridge;
  return proto.bosdyn.api.NetworkComputeInputDataBridge.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.NetworkComputeInputDataBridge} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.NetworkComputeInputDataBridge}
 */
proto.bosdyn.api.NetworkComputeInputDataBridge.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.bosdyn.api.ImageSourceAndService;
      reader.readMessage(value,proto.bosdyn.api.ImageSourceAndService.deserializeBinaryFromReader);
      msg.addImageSourcesAndServices(value);
      break;
    case 2:
      var value = new proto.bosdyn.api.ComputeParameters;
      reader.readMessage(value,proto.bosdyn.api.ComputeParameters.deserializeBinaryFromReader);
      msg.setParameters(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.NetworkComputeInputDataBridge.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.NetworkComputeInputDataBridge.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.NetworkComputeInputDataBridge} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.NetworkComputeInputDataBridge.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getImageSourcesAndServicesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.bosdyn.api.ImageSourceAndService.serializeBinaryToWriter
    );
  }
  f = message.getParameters();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.bosdyn.api.ComputeParameters.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ImageSourceAndService image_sources_and_services = 1;
 * @return {!Array<!proto.bosdyn.api.ImageSourceAndService>}
 */
proto.bosdyn.api.NetworkComputeInputDataBridge.prototype.getImageSourcesAndServicesList = function() {
  return /** @type{!Array<!proto.bosdyn.api.ImageSourceAndService>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.bosdyn.api.ImageSourceAndService, 1));
};


/**
 * @param {!Array<!proto.bosdyn.api.ImageSourceAndService>} value
 * @return {!proto.bosdyn.api.NetworkComputeInputDataBridge} returns this
*/
proto.bosdyn.api.NetworkComputeInputDataBridge.prototype.setImageSourcesAndServicesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.bosdyn.api.ImageSourceAndService=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bosdyn.api.ImageSourceAndService}
 */
proto.bosdyn.api.NetworkComputeInputDataBridge.prototype.addImageSourcesAndServices = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.bosdyn.api.ImageSourceAndService, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bosdyn.api.NetworkComputeInputDataBridge} returns this
 */
proto.bosdyn.api.NetworkComputeInputDataBridge.prototype.clearImageSourcesAndServicesList = function() {
  return this.setImageSourcesAndServicesList([]);
};


/**
 * optional ComputeParameters parameters = 2;
 * @return {?proto.bosdyn.api.ComputeParameters}
 */
proto.bosdyn.api.NetworkComputeInputDataBridge.prototype.getParameters = function() {
  return /** @type{?proto.bosdyn.api.ComputeParameters} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.ComputeParameters, 2));
};


/**
 * @param {?proto.bosdyn.api.ComputeParameters|undefined} value
 * @return {!proto.bosdyn.api.NetworkComputeInputDataBridge} returns this
*/
proto.bosdyn.api.NetworkComputeInputDataBridge.prototype.setParameters = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.NetworkComputeInputDataBridge} returns this
 */
proto.bosdyn.api.NetworkComputeInputDataBridge.prototype.clearParameters = function() {
  return this.setParameters(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.NetworkComputeInputDataBridge.prototype.hasParameters = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bosdyn.api.NetworkComputeInputDataWorker.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.NetworkComputeInputDataWorker.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.NetworkComputeInputDataWorker.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.NetworkComputeInputDataWorker} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.NetworkComputeInputDataWorker.toObject = function(includeInstance, msg) {
  var f, obj = {
    imagesList: jspb.Message.toObjectList(msg.getImagesList(),
    bosdyn_api_image_pb.ImageCaptureAndSource.toObject, includeInstance),
    parameters: (f = msg.getParameters()) && proto.bosdyn.api.ComputeParameters.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.NetworkComputeInputDataWorker}
 */
proto.bosdyn.api.NetworkComputeInputDataWorker.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.NetworkComputeInputDataWorker;
  return proto.bosdyn.api.NetworkComputeInputDataWorker.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.NetworkComputeInputDataWorker} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.NetworkComputeInputDataWorker}
 */
proto.bosdyn.api.NetworkComputeInputDataWorker.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new bosdyn_api_image_pb.ImageCaptureAndSource;
      reader.readMessage(value,bosdyn_api_image_pb.ImageCaptureAndSource.deserializeBinaryFromReader);
      msg.addImages(value);
      break;
    case 2:
      var value = new proto.bosdyn.api.ComputeParameters;
      reader.readMessage(value,proto.bosdyn.api.ComputeParameters.deserializeBinaryFromReader);
      msg.setParameters(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.NetworkComputeInputDataWorker.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.NetworkComputeInputDataWorker.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.NetworkComputeInputDataWorker} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.NetworkComputeInputDataWorker.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getImagesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      bosdyn_api_image_pb.ImageCaptureAndSource.serializeBinaryToWriter
    );
  }
  f = message.getParameters();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.bosdyn.api.ComputeParameters.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ImageCaptureAndSource images = 1;
 * @return {!Array<!proto.bosdyn.api.ImageCaptureAndSource>}
 */
proto.bosdyn.api.NetworkComputeInputDataWorker.prototype.getImagesList = function() {
  return /** @type{!Array<!proto.bosdyn.api.ImageCaptureAndSource>} */ (
    jspb.Message.getRepeatedWrapperField(this, bosdyn_api_image_pb.ImageCaptureAndSource, 1));
};


/**
 * @param {!Array<!proto.bosdyn.api.ImageCaptureAndSource>} value
 * @return {!proto.bosdyn.api.NetworkComputeInputDataWorker} returns this
*/
proto.bosdyn.api.NetworkComputeInputDataWorker.prototype.setImagesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.bosdyn.api.ImageCaptureAndSource=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bosdyn.api.ImageCaptureAndSource}
 */
proto.bosdyn.api.NetworkComputeInputDataWorker.prototype.addImages = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.bosdyn.api.ImageCaptureAndSource, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bosdyn.api.NetworkComputeInputDataWorker} returns this
 */
proto.bosdyn.api.NetworkComputeInputDataWorker.prototype.clearImagesList = function() {
  return this.setImagesList([]);
};


/**
 * optional ComputeParameters parameters = 2;
 * @return {?proto.bosdyn.api.ComputeParameters}
 */
proto.bosdyn.api.NetworkComputeInputDataWorker.prototype.getParameters = function() {
  return /** @type{?proto.bosdyn.api.ComputeParameters} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.ComputeParameters, 2));
};


/**
 * @param {?proto.bosdyn.api.ComputeParameters|undefined} value
 * @return {!proto.bosdyn.api.NetworkComputeInputDataWorker} returns this
*/
proto.bosdyn.api.NetworkComputeInputDataWorker.prototype.setParameters = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.NetworkComputeInputDataWorker} returns this
 */
proto.bosdyn.api.NetworkComputeInputDataWorker.prototype.clearParameters = function() {
  return this.setParameters(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.NetworkComputeInputDataWorker.prototype.hasParameters = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.bosdyn.api.NetworkComputeInputData.oneofGroups_ = [[7,2]];

/**
 * @enum {number}
 */
proto.bosdyn.api.NetworkComputeInputData.InputCase = {
  INPUT_NOT_SET: 0,
  IMAGE_SOURCE_AND_SERVICE: 7,
  IMAGE: 2
};

/**
 * @return {proto.bosdyn.api.NetworkComputeInputData.InputCase}
 */
proto.bosdyn.api.NetworkComputeInputData.prototype.getInputCase = function() {
  return /** @type {proto.bosdyn.api.NetworkComputeInputData.InputCase} */(jspb.Message.computeOneofCase(this, proto.bosdyn.api.NetworkComputeInputData.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.NetworkComputeInputData.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.NetworkComputeInputData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.NetworkComputeInputData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.NetworkComputeInputData.toObject = function(includeInstance, msg) {
  var f, obj = {
    imageSourceAndService: (f = msg.getImageSourceAndService()) && proto.bosdyn.api.ImageSourceAndService.toObject(includeInstance, f),
    image: (f = msg.getImage()) && bosdyn_api_image_pb.Image.toObject(includeInstance, f),
    otherData: (f = msg.getOtherData()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
    modelName: jspb.Message.getFieldWithDefault(msg, 4, ""),
    minConfidence: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    rotateImage: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.NetworkComputeInputData}
 */
proto.bosdyn.api.NetworkComputeInputData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.NetworkComputeInputData;
  return proto.bosdyn.api.NetworkComputeInputData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.NetworkComputeInputData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.NetworkComputeInputData}
 */
proto.bosdyn.api.NetworkComputeInputData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 7:
      var value = new proto.bosdyn.api.ImageSourceAndService;
      reader.readMessage(value,proto.bosdyn.api.ImageSourceAndService.deserializeBinaryFromReader);
      msg.setImageSourceAndService(value);
      break;
    case 2:
      var value = new bosdyn_api_image_pb.Image;
      reader.readMessage(value,bosdyn_api_image_pb.Image.deserializeBinaryFromReader);
      msg.setImage(value);
      break;
    case 3:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setOtherData(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setModelName(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMinConfidence(value);
      break;
    case 6:
      var value = /** @type {!proto.bosdyn.api.NetworkComputeInputData.RotateImage} */ (reader.readEnum());
      msg.setRotateImage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.NetworkComputeInputData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.NetworkComputeInputData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.NetworkComputeInputData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.NetworkComputeInputData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getImageSourceAndService();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.bosdyn.api.ImageSourceAndService.serializeBinaryToWriter
    );
  }
  f = message.getImage();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      bosdyn_api_image_pb.Image.serializeBinaryToWriter
    );
  }
  f = message.getOtherData();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
  f = message.getModelName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getMinConfidence();
  if (f !== 0.0) {
    writer.writeFloat(
      5,
      f
    );
  }
  f = message.getRotateImage();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.bosdyn.api.NetworkComputeInputData.RotateImage = {
  ROTATE_IMAGE_UNKNOWN: 0,
  ROTATE_IMAGE_NO_ROTATION: 3,
  ROTATE_IMAGE_ALIGN_HORIZONTAL: 1,
  ROTATE_IMAGE_ALIGN_WITH_BODY: 2
};

/**
 * optional ImageSourceAndService image_source_and_service = 7;
 * @return {?proto.bosdyn.api.ImageSourceAndService}
 */
proto.bosdyn.api.NetworkComputeInputData.prototype.getImageSourceAndService = function() {
  return /** @type{?proto.bosdyn.api.ImageSourceAndService} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.ImageSourceAndService, 7));
};


/**
 * @param {?proto.bosdyn.api.ImageSourceAndService|undefined} value
 * @return {!proto.bosdyn.api.NetworkComputeInputData} returns this
*/
proto.bosdyn.api.NetworkComputeInputData.prototype.setImageSourceAndService = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.bosdyn.api.NetworkComputeInputData.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.NetworkComputeInputData} returns this
 */
proto.bosdyn.api.NetworkComputeInputData.prototype.clearImageSourceAndService = function() {
  return this.setImageSourceAndService(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.NetworkComputeInputData.prototype.hasImageSourceAndService = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional Image image = 2;
 * @return {?proto.bosdyn.api.Image}
 */
proto.bosdyn.api.NetworkComputeInputData.prototype.getImage = function() {
  return /** @type{?proto.bosdyn.api.Image} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_image_pb.Image, 2));
};


/**
 * @param {?proto.bosdyn.api.Image|undefined} value
 * @return {!proto.bosdyn.api.NetworkComputeInputData} returns this
*/
proto.bosdyn.api.NetworkComputeInputData.prototype.setImage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.bosdyn.api.NetworkComputeInputData.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.NetworkComputeInputData} returns this
 */
proto.bosdyn.api.NetworkComputeInputData.prototype.clearImage = function() {
  return this.setImage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.NetworkComputeInputData.prototype.hasImage = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Any other_data = 3;
 * @return {?proto.google.protobuf.Any}
 */
proto.bosdyn.api.NetworkComputeInputData.prototype.getOtherData = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 3));
};


/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.bosdyn.api.NetworkComputeInputData} returns this
*/
proto.bosdyn.api.NetworkComputeInputData.prototype.setOtherData = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.NetworkComputeInputData} returns this
 */
proto.bosdyn.api.NetworkComputeInputData.prototype.clearOtherData = function() {
  return this.setOtherData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.NetworkComputeInputData.prototype.hasOtherData = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string model_name = 4;
 * @return {string}
 */
proto.bosdyn.api.NetworkComputeInputData.prototype.getModelName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.bosdyn.api.NetworkComputeInputData} returns this
 */
proto.bosdyn.api.NetworkComputeInputData.prototype.setModelName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional float min_confidence = 5;
 * @return {number}
 */
proto.bosdyn.api.NetworkComputeInputData.prototype.getMinConfidence = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.bosdyn.api.NetworkComputeInputData} returns this
 */
proto.bosdyn.api.NetworkComputeInputData.prototype.setMinConfidence = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional RotateImage rotate_image = 6;
 * @return {!proto.bosdyn.api.NetworkComputeInputData.RotateImage}
 */
proto.bosdyn.api.NetworkComputeInputData.prototype.getRotateImage = function() {
  return /** @type {!proto.bosdyn.api.NetworkComputeInputData.RotateImage} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.bosdyn.api.NetworkComputeInputData.RotateImage} value
 * @return {!proto.bosdyn.api.NetworkComputeInputData} returns this
 */
proto.bosdyn.api.NetworkComputeInputData.prototype.setRotateImage = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.NetworkComputeServerConfiguration.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.NetworkComputeServerConfiguration.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.NetworkComputeServerConfiguration} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.NetworkComputeServerConfiguration.toObject = function(includeInstance, msg) {
  var f, obj = {
    serviceName: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.NetworkComputeServerConfiguration}
 */
proto.bosdyn.api.NetworkComputeServerConfiguration.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.NetworkComputeServerConfiguration;
  return proto.bosdyn.api.NetworkComputeServerConfiguration.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.NetworkComputeServerConfiguration} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.NetworkComputeServerConfiguration}
 */
proto.bosdyn.api.NetworkComputeServerConfiguration.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setServiceName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.NetworkComputeServerConfiguration.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.NetworkComputeServerConfiguration.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.NetworkComputeServerConfiguration} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.NetworkComputeServerConfiguration.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getServiceName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string service_name = 3;
 * @return {string}
 */
proto.bosdyn.api.NetworkComputeServerConfiguration.prototype.getServiceName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.bosdyn.api.NetworkComputeServerConfiguration} returns this
 */
proto.bosdyn.api.NetworkComputeServerConfiguration.prototype.setServiceName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bosdyn.api.OutputImage.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.OutputImage.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.OutputImage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.OutputImage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.OutputImage.toObject = function(includeInstance, msg) {
  var f, obj = {
    imageResponse: (f = msg.getImageResponse()) && bosdyn_api_image_pb.ImageResponse.toObject(includeInstance, f),
    metadata: (f = msg.getMetadata()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f),
    objectInImageList: jspb.Message.toObjectList(msg.getObjectInImageList(),
    bosdyn_api_world_object_pb.WorldObject.toObject, includeInstance),
    alertData: (f = msg.getAlertData()) && bosdyn_api_alerts_pb.AlertData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.OutputImage}
 */
proto.bosdyn.api.OutputImage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.OutputImage;
  return proto.bosdyn.api.OutputImage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.OutputImage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.OutputImage}
 */
proto.bosdyn.api.OutputImage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new bosdyn_api_image_pb.ImageResponse;
      reader.readMessage(value,bosdyn_api_image_pb.ImageResponse.deserializeBinaryFromReader);
      msg.setImageResponse(value);
      break;
    case 2:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 3:
      var value = new bosdyn_api_world_object_pb.WorldObject;
      reader.readMessage(value,bosdyn_api_world_object_pb.WorldObject.deserializeBinaryFromReader);
      msg.addObjectInImage(value);
      break;
    case 4:
      var value = new bosdyn_api_alerts_pb.AlertData;
      reader.readMessage(value,bosdyn_api_alerts_pb.AlertData.deserializeBinaryFromReader);
      msg.setAlertData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.OutputImage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.OutputImage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.OutputImage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.OutputImage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getImageResponse();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      bosdyn_api_image_pb.ImageResponse.serializeBinaryToWriter
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
  f = message.getObjectInImageList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      bosdyn_api_world_object_pb.WorldObject.serializeBinaryToWriter
    );
  }
  f = message.getAlertData();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      bosdyn_api_alerts_pb.AlertData.serializeBinaryToWriter
    );
  }
};


/**
 * optional ImageResponse image_response = 1;
 * @return {?proto.bosdyn.api.ImageResponse}
 */
proto.bosdyn.api.OutputImage.prototype.getImageResponse = function() {
  return /** @type{?proto.bosdyn.api.ImageResponse} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_image_pb.ImageResponse, 1));
};


/**
 * @param {?proto.bosdyn.api.ImageResponse|undefined} value
 * @return {!proto.bosdyn.api.OutputImage} returns this
*/
proto.bosdyn.api.OutputImage.prototype.setImageResponse = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.OutputImage} returns this
 */
proto.bosdyn.api.OutputImage.prototype.clearImageResponse = function() {
  return this.setImageResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.OutputImage.prototype.hasImageResponse = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Struct metadata = 2;
 * @return {?proto.google.protobuf.Struct}
 */
proto.bosdyn.api.OutputImage.prototype.getMetadata = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 2));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.bosdyn.api.OutputImage} returns this
*/
proto.bosdyn.api.OutputImage.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.OutputImage} returns this
 */
proto.bosdyn.api.OutputImage.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.OutputImage.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated WorldObject object_in_image = 3;
 * @return {!Array<!proto.bosdyn.api.WorldObject>}
 */
proto.bosdyn.api.OutputImage.prototype.getObjectInImageList = function() {
  return /** @type{!Array<!proto.bosdyn.api.WorldObject>} */ (
    jspb.Message.getRepeatedWrapperField(this, bosdyn_api_world_object_pb.WorldObject, 3));
};


/**
 * @param {!Array<!proto.bosdyn.api.WorldObject>} value
 * @return {!proto.bosdyn.api.OutputImage} returns this
*/
proto.bosdyn.api.OutputImage.prototype.setObjectInImageList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.bosdyn.api.WorldObject=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bosdyn.api.WorldObject}
 */
proto.bosdyn.api.OutputImage.prototype.addObjectInImage = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.bosdyn.api.WorldObject, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bosdyn.api.OutputImage} returns this
 */
proto.bosdyn.api.OutputImage.prototype.clearObjectInImageList = function() {
  return this.setObjectInImageList([]);
};


/**
 * optional AlertData alert_data = 4;
 * @return {?proto.bosdyn.api.AlertData}
 */
proto.bosdyn.api.OutputImage.prototype.getAlertData = function() {
  return /** @type{?proto.bosdyn.api.AlertData} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_alerts_pb.AlertData, 4));
};


/**
 * @param {?proto.bosdyn.api.AlertData|undefined} value
 * @return {!proto.bosdyn.api.OutputImage} returns this
*/
proto.bosdyn.api.OutputImage.prototype.setAlertData = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.OutputImage} returns this
 */
proto.bosdyn.api.OutputImage.prototype.clearAlertData = function() {
  return this.setAlertData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.OutputImage.prototype.hasAlertData = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.OutputImageSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.OutputImageSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.OutputImageSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.OutputImageSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.OutputImageSpec}
 */
proto.bosdyn.api.OutputImageSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.OutputImageSpec;
  return proto.bosdyn.api.OutputImageSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.OutputImageSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.OutputImageSpec}
 */
proto.bosdyn.api.OutputImageSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.OutputImageSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.OutputImageSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.OutputImageSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.OutputImageSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.bosdyn.api.OutputImageSpec.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bosdyn.api.OutputImageSpec} returns this
 */
proto.bosdyn.api.OutputImageSpec.prototype.setKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.bosdyn.api.OutputImageSpec.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.bosdyn.api.OutputImageSpec} returns this
 */
proto.bosdyn.api.OutputImageSpec.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bosdyn.api.NetworkComputeResponse.repeatedFields_ = [2,13];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.NetworkComputeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.NetworkComputeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.NetworkComputeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.NetworkComputeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && bosdyn_api_header_pb.ResponseHeader.toObject(includeInstance, f),
    objectInImageList: jspb.Message.toObjectList(msg.getObjectInImageList(),
    bosdyn_api_world_object_pb.WorldObject.toObject, includeInstance),
    imageResponse: (f = msg.getImageResponse()) && bosdyn_api_image_pb.ImageResponse.toObject(includeInstance, f),
    imageResponsesList: jspb.Message.toObjectList(msg.getImageResponsesList(),
    bosdyn_api_image_pb.ImageCaptureAndSource.toObject, includeInstance),
    imageRotationAngle: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    otherData: (f = msg.getOtherData()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
    status: jspb.Message.getFieldWithDefault(msg, 5, 0),
    customParamError: (f = msg.getCustomParamError()) && bosdyn_api_service_customization_pb.CustomParamError.toObject(includeInstance, f),
    alertData: (f = msg.getAlertData()) && bosdyn_api_alerts_pb.AlertData.toObject(includeInstance, f),
    outputImagesMap: (f = msg.getOutputImagesMap()) ? f.toObject(includeInstance, proto.bosdyn.api.OutputImage.toObject) : [],
    roiOutputDataMap: (f = msg.getRoiOutputDataMap()) ? f.toObject(includeInstance, proto.bosdyn.api.OutputData.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.NetworkComputeResponse}
 */
proto.bosdyn.api.NetworkComputeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.NetworkComputeResponse;
  return proto.bosdyn.api.NetworkComputeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.NetworkComputeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.NetworkComputeResponse}
 */
proto.bosdyn.api.NetworkComputeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new bosdyn_api_header_pb.ResponseHeader;
      reader.readMessage(value,bosdyn_api_header_pb.ResponseHeader.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 2:
      var value = new bosdyn_api_world_object_pb.WorldObject;
      reader.readMessage(value,bosdyn_api_world_object_pb.WorldObject.deserializeBinaryFromReader);
      msg.addObjectInImage(value);
      break;
    case 3:
      var value = new bosdyn_api_image_pb.ImageResponse;
      reader.readMessage(value,bosdyn_api_image_pb.ImageResponse.deserializeBinaryFromReader);
      msg.setImageResponse(value);
      break;
    case 13:
      var value = new bosdyn_api_image_pb.ImageCaptureAndSource;
      reader.readMessage(value,bosdyn_api_image_pb.ImageCaptureAndSource.deserializeBinaryFromReader);
      msg.addImageResponses(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setImageRotationAngle(value);
      break;
    case 4:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setOtherData(value);
      break;
    case 5:
      var value = /** @type {!proto.bosdyn.api.NetworkComputeStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 11:
      var value = new bosdyn_api_service_customization_pb.CustomParamError;
      reader.readMessage(value,bosdyn_api_service_customization_pb.CustomParamError.deserializeBinaryFromReader);
      msg.setCustomParamError(value);
      break;
    case 7:
      var value = new bosdyn_api_alerts_pb.AlertData;
      reader.readMessage(value,bosdyn_api_alerts_pb.AlertData.deserializeBinaryFromReader);
      msg.setAlertData(value);
      break;
    case 8:
      var value = msg.getOutputImagesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.bosdyn.api.OutputImage.deserializeBinaryFromReader, "", new proto.bosdyn.api.OutputImage());
         });
      break;
    case 10:
      var value = msg.getRoiOutputDataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.bosdyn.api.OutputData.deserializeBinaryFromReader, "", new proto.bosdyn.api.OutputData());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.NetworkComputeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.NetworkComputeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.NetworkComputeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.NetworkComputeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      bosdyn_api_header_pb.ResponseHeader.serializeBinaryToWriter
    );
  }
  f = message.getObjectInImageList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      bosdyn_api_world_object_pb.WorldObject.serializeBinaryToWriter
    );
  }
  f = message.getImageResponse();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      bosdyn_api_image_pb.ImageResponse.serializeBinaryToWriter
    );
  }
  f = message.getImageResponsesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      13,
      f,
      bosdyn_api_image_pb.ImageCaptureAndSource.serializeBinaryToWriter
    );
  }
  f = message.getImageRotationAngle();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getOtherData();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getCustomParamError();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      bosdyn_api_service_customization_pb.CustomParamError.serializeBinaryToWriter
    );
  }
  f = message.getAlertData();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      bosdyn_api_alerts_pb.AlertData.serializeBinaryToWriter
    );
  }
  f = message.getOutputImagesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(8, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.bosdyn.api.OutputImage.serializeBinaryToWriter);
  }
  f = message.getRoiOutputDataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(10, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.bosdyn.api.OutputData.serializeBinaryToWriter);
  }
};


/**
 * optional ResponseHeader header = 1;
 * @return {?proto.bosdyn.api.ResponseHeader}
 */
proto.bosdyn.api.NetworkComputeResponse.prototype.getHeader = function() {
  return /** @type{?proto.bosdyn.api.ResponseHeader} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_header_pb.ResponseHeader, 1));
};


/**
 * @param {?proto.bosdyn.api.ResponseHeader|undefined} value
 * @return {!proto.bosdyn.api.NetworkComputeResponse} returns this
*/
proto.bosdyn.api.NetworkComputeResponse.prototype.setHeader = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.NetworkComputeResponse} returns this
 */
proto.bosdyn.api.NetworkComputeResponse.prototype.clearHeader = function() {
  return this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.NetworkComputeResponse.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated WorldObject object_in_image = 2;
 * @return {!Array<!proto.bosdyn.api.WorldObject>}
 */
proto.bosdyn.api.NetworkComputeResponse.prototype.getObjectInImageList = function() {
  return /** @type{!Array<!proto.bosdyn.api.WorldObject>} */ (
    jspb.Message.getRepeatedWrapperField(this, bosdyn_api_world_object_pb.WorldObject, 2));
};


/**
 * @param {!Array<!proto.bosdyn.api.WorldObject>} value
 * @return {!proto.bosdyn.api.NetworkComputeResponse} returns this
*/
proto.bosdyn.api.NetworkComputeResponse.prototype.setObjectInImageList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.bosdyn.api.WorldObject=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bosdyn.api.WorldObject}
 */
proto.bosdyn.api.NetworkComputeResponse.prototype.addObjectInImage = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.bosdyn.api.WorldObject, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bosdyn.api.NetworkComputeResponse} returns this
 */
proto.bosdyn.api.NetworkComputeResponse.prototype.clearObjectInImageList = function() {
  return this.setObjectInImageList([]);
};


/**
 * optional ImageResponse image_response = 3;
 * @return {?proto.bosdyn.api.ImageResponse}
 */
proto.bosdyn.api.NetworkComputeResponse.prototype.getImageResponse = function() {
  return /** @type{?proto.bosdyn.api.ImageResponse} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_image_pb.ImageResponse, 3));
};


/**
 * @param {?proto.bosdyn.api.ImageResponse|undefined} value
 * @return {!proto.bosdyn.api.NetworkComputeResponse} returns this
*/
proto.bosdyn.api.NetworkComputeResponse.prototype.setImageResponse = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.NetworkComputeResponse} returns this
 */
proto.bosdyn.api.NetworkComputeResponse.prototype.clearImageResponse = function() {
  return this.setImageResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.NetworkComputeResponse.prototype.hasImageResponse = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated ImageCaptureAndSource image_responses = 13;
 * @return {!Array<!proto.bosdyn.api.ImageCaptureAndSource>}
 */
proto.bosdyn.api.NetworkComputeResponse.prototype.getImageResponsesList = function() {
  return /** @type{!Array<!proto.bosdyn.api.ImageCaptureAndSource>} */ (
    jspb.Message.getRepeatedWrapperField(this, bosdyn_api_image_pb.ImageCaptureAndSource, 13));
};


/**
 * @param {!Array<!proto.bosdyn.api.ImageCaptureAndSource>} value
 * @return {!proto.bosdyn.api.NetworkComputeResponse} returns this
*/
proto.bosdyn.api.NetworkComputeResponse.prototype.setImageResponsesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 13, value);
};


/**
 * @param {!proto.bosdyn.api.ImageCaptureAndSource=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bosdyn.api.ImageCaptureAndSource}
 */
proto.bosdyn.api.NetworkComputeResponse.prototype.addImageResponses = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 13, opt_value, proto.bosdyn.api.ImageCaptureAndSource, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bosdyn.api.NetworkComputeResponse} returns this
 */
proto.bosdyn.api.NetworkComputeResponse.prototype.clearImageResponsesList = function() {
  return this.setImageResponsesList([]);
};


/**
 * optional double image_rotation_angle = 6;
 * @return {number}
 */
proto.bosdyn.api.NetworkComputeResponse.prototype.getImageRotationAngle = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.bosdyn.api.NetworkComputeResponse} returns this
 */
proto.bosdyn.api.NetworkComputeResponse.prototype.setImageRotationAngle = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional google.protobuf.Any other_data = 4;
 * @return {?proto.google.protobuf.Any}
 */
proto.bosdyn.api.NetworkComputeResponse.prototype.getOtherData = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 4));
};


/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.bosdyn.api.NetworkComputeResponse} returns this
*/
proto.bosdyn.api.NetworkComputeResponse.prototype.setOtherData = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.NetworkComputeResponse} returns this
 */
proto.bosdyn.api.NetworkComputeResponse.prototype.clearOtherData = function() {
  return this.setOtherData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.NetworkComputeResponse.prototype.hasOtherData = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional NetworkComputeStatus status = 5;
 * @return {!proto.bosdyn.api.NetworkComputeStatus}
 */
proto.bosdyn.api.NetworkComputeResponse.prototype.getStatus = function() {
  return /** @type {!proto.bosdyn.api.NetworkComputeStatus} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.bosdyn.api.NetworkComputeStatus} value
 * @return {!proto.bosdyn.api.NetworkComputeResponse} returns this
 */
proto.bosdyn.api.NetworkComputeResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional CustomParamError custom_param_error = 11;
 * @return {?proto.bosdyn.api.CustomParamError}
 */
proto.bosdyn.api.NetworkComputeResponse.prototype.getCustomParamError = function() {
  return /** @type{?proto.bosdyn.api.CustomParamError} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_service_customization_pb.CustomParamError, 11));
};


/**
 * @param {?proto.bosdyn.api.CustomParamError|undefined} value
 * @return {!proto.bosdyn.api.NetworkComputeResponse} returns this
*/
proto.bosdyn.api.NetworkComputeResponse.prototype.setCustomParamError = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.NetworkComputeResponse} returns this
 */
proto.bosdyn.api.NetworkComputeResponse.prototype.clearCustomParamError = function() {
  return this.setCustomParamError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.NetworkComputeResponse.prototype.hasCustomParamError = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional AlertData alert_data = 7;
 * @return {?proto.bosdyn.api.AlertData}
 */
proto.bosdyn.api.NetworkComputeResponse.prototype.getAlertData = function() {
  return /** @type{?proto.bosdyn.api.AlertData} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_alerts_pb.AlertData, 7));
};


/**
 * @param {?proto.bosdyn.api.AlertData|undefined} value
 * @return {!proto.bosdyn.api.NetworkComputeResponse} returns this
*/
proto.bosdyn.api.NetworkComputeResponse.prototype.setAlertData = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.NetworkComputeResponse} returns this
 */
proto.bosdyn.api.NetworkComputeResponse.prototype.clearAlertData = function() {
  return this.setAlertData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.NetworkComputeResponse.prototype.hasAlertData = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * map<string, OutputImage> output_images = 8;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.bosdyn.api.OutputImage>}
 */
proto.bosdyn.api.NetworkComputeResponse.prototype.getOutputImagesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.bosdyn.api.OutputImage>} */ (
      jspb.Message.getMapField(this, 8, opt_noLazyCreate,
      proto.bosdyn.api.OutputImage));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.bosdyn.api.NetworkComputeResponse} returns this
 */
proto.bosdyn.api.NetworkComputeResponse.prototype.clearOutputImagesMap = function() {
  this.getOutputImagesMap().clear();
  return this;};


/**
 * map<string, OutputData> roi_output_data = 10;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.bosdyn.api.OutputData>}
 */
proto.bosdyn.api.NetworkComputeResponse.prototype.getRoiOutputDataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.bosdyn.api.OutputData>} */ (
      jspb.Message.getMapField(this, 10, opt_noLazyCreate,
      proto.bosdyn.api.OutputData));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.bosdyn.api.NetworkComputeResponse} returns this
 */
proto.bosdyn.api.NetworkComputeResponse.prototype.clearRoiOutputDataMap = function() {
  this.getRoiOutputDataMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.WorkerComputeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.WorkerComputeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.WorkerComputeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.WorkerComputeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && bosdyn_api_header_pb.RequestHeader.toObject(includeInstance, f),
    inputData: (f = msg.getInputData()) && proto.bosdyn.api.NetworkComputeInputDataWorker.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.WorkerComputeRequest}
 */
proto.bosdyn.api.WorkerComputeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.WorkerComputeRequest;
  return proto.bosdyn.api.WorkerComputeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.WorkerComputeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.WorkerComputeRequest}
 */
proto.bosdyn.api.WorkerComputeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new bosdyn_api_header_pb.RequestHeader;
      reader.readMessage(value,bosdyn_api_header_pb.RequestHeader.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 2:
      var value = new proto.bosdyn.api.NetworkComputeInputDataWorker;
      reader.readMessage(value,proto.bosdyn.api.NetworkComputeInputDataWorker.deserializeBinaryFromReader);
      msg.setInputData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.WorkerComputeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.WorkerComputeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.WorkerComputeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.WorkerComputeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      bosdyn_api_header_pb.RequestHeader.serializeBinaryToWriter
    );
  }
  f = message.getInputData();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.bosdyn.api.NetworkComputeInputDataWorker.serializeBinaryToWriter
    );
  }
};


/**
 * optional RequestHeader header = 1;
 * @return {?proto.bosdyn.api.RequestHeader}
 */
proto.bosdyn.api.WorkerComputeRequest.prototype.getHeader = function() {
  return /** @type{?proto.bosdyn.api.RequestHeader} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_header_pb.RequestHeader, 1));
};


/**
 * @param {?proto.bosdyn.api.RequestHeader|undefined} value
 * @return {!proto.bosdyn.api.WorkerComputeRequest} returns this
*/
proto.bosdyn.api.WorkerComputeRequest.prototype.setHeader = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.WorkerComputeRequest} returns this
 */
proto.bosdyn.api.WorkerComputeRequest.prototype.clearHeader = function() {
  return this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.WorkerComputeRequest.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional NetworkComputeInputDataWorker input_data = 2;
 * @return {?proto.bosdyn.api.NetworkComputeInputDataWorker}
 */
proto.bosdyn.api.WorkerComputeRequest.prototype.getInputData = function() {
  return /** @type{?proto.bosdyn.api.NetworkComputeInputDataWorker} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.NetworkComputeInputDataWorker, 2));
};


/**
 * @param {?proto.bosdyn.api.NetworkComputeInputDataWorker|undefined} value
 * @return {!proto.bosdyn.api.WorkerComputeRequest} returns this
*/
proto.bosdyn.api.WorkerComputeRequest.prototype.setInputData = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.WorkerComputeRequest} returns this
 */
proto.bosdyn.api.WorkerComputeRequest.prototype.clearInputData = function() {
  return this.setInputData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.WorkerComputeRequest.prototype.hasInputData = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.WorkerComputeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.WorkerComputeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.WorkerComputeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.WorkerComputeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && bosdyn_api_header_pb.ResponseHeader.toObject(includeInstance, f),
    otherData: (f = msg.getOtherData()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
    status: jspb.Message.getFieldWithDefault(msg, 3, 0),
    customParamError: (f = msg.getCustomParamError()) && bosdyn_api_service_customization_pb.CustomParamError.toObject(includeInstance, f),
    outputImagesMap: (f = msg.getOutputImagesMap()) ? f.toObject(includeInstance, proto.bosdyn.api.OutputImage.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.WorkerComputeResponse}
 */
proto.bosdyn.api.WorkerComputeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.WorkerComputeResponse;
  return proto.bosdyn.api.WorkerComputeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.WorkerComputeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.WorkerComputeResponse}
 */
proto.bosdyn.api.WorkerComputeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new bosdyn_api_header_pb.ResponseHeader;
      reader.readMessage(value,bosdyn_api_header_pb.ResponseHeader.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 2:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setOtherData(value);
      break;
    case 3:
      var value = /** @type {!proto.bosdyn.api.NetworkComputeStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 4:
      var value = new bosdyn_api_service_customization_pb.CustomParamError;
      reader.readMessage(value,bosdyn_api_service_customization_pb.CustomParamError.deserializeBinaryFromReader);
      msg.setCustomParamError(value);
      break;
    case 7:
      var value = msg.getOutputImagesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.bosdyn.api.OutputImage.deserializeBinaryFromReader, "", new proto.bosdyn.api.OutputImage());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.WorkerComputeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.WorkerComputeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.WorkerComputeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.WorkerComputeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      bosdyn_api_header_pb.ResponseHeader.serializeBinaryToWriter
    );
  }
  f = message.getOtherData();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getCustomParamError();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      bosdyn_api_service_customization_pb.CustomParamError.serializeBinaryToWriter
    );
  }
  f = message.getOutputImagesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(7, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.bosdyn.api.OutputImage.serializeBinaryToWriter);
  }
};


/**
 * optional ResponseHeader header = 1;
 * @return {?proto.bosdyn.api.ResponseHeader}
 */
proto.bosdyn.api.WorkerComputeResponse.prototype.getHeader = function() {
  return /** @type{?proto.bosdyn.api.ResponseHeader} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_header_pb.ResponseHeader, 1));
};


/**
 * @param {?proto.bosdyn.api.ResponseHeader|undefined} value
 * @return {!proto.bosdyn.api.WorkerComputeResponse} returns this
*/
proto.bosdyn.api.WorkerComputeResponse.prototype.setHeader = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.WorkerComputeResponse} returns this
 */
proto.bosdyn.api.WorkerComputeResponse.prototype.clearHeader = function() {
  return this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.WorkerComputeResponse.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Any other_data = 2;
 * @return {?proto.google.protobuf.Any}
 */
proto.bosdyn.api.WorkerComputeResponse.prototype.getOtherData = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 2));
};


/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.bosdyn.api.WorkerComputeResponse} returns this
*/
proto.bosdyn.api.WorkerComputeResponse.prototype.setOtherData = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.WorkerComputeResponse} returns this
 */
proto.bosdyn.api.WorkerComputeResponse.prototype.clearOtherData = function() {
  return this.setOtherData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.WorkerComputeResponse.prototype.hasOtherData = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional NetworkComputeStatus status = 3;
 * @return {!proto.bosdyn.api.NetworkComputeStatus}
 */
proto.bosdyn.api.WorkerComputeResponse.prototype.getStatus = function() {
  return /** @type {!proto.bosdyn.api.NetworkComputeStatus} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.bosdyn.api.NetworkComputeStatus} value
 * @return {!proto.bosdyn.api.WorkerComputeResponse} returns this
 */
proto.bosdyn.api.WorkerComputeResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional CustomParamError custom_param_error = 4;
 * @return {?proto.bosdyn.api.CustomParamError}
 */
proto.bosdyn.api.WorkerComputeResponse.prototype.getCustomParamError = function() {
  return /** @type{?proto.bosdyn.api.CustomParamError} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_service_customization_pb.CustomParamError, 4));
};


/**
 * @param {?proto.bosdyn.api.CustomParamError|undefined} value
 * @return {!proto.bosdyn.api.WorkerComputeResponse} returns this
*/
proto.bosdyn.api.WorkerComputeResponse.prototype.setCustomParamError = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.WorkerComputeResponse} returns this
 */
proto.bosdyn.api.WorkerComputeResponse.prototype.clearCustomParamError = function() {
  return this.setCustomParamError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.WorkerComputeResponse.prototype.hasCustomParamError = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * map<string, OutputImage> output_images = 7;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.bosdyn.api.OutputImage>}
 */
proto.bosdyn.api.WorkerComputeResponse.prototype.getOutputImagesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.bosdyn.api.OutputImage>} */ (
      jspb.Message.getMapField(this, 7, opt_noLazyCreate,
      proto.bosdyn.api.OutputImage));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.bosdyn.api.WorkerComputeResponse} returns this
 */
proto.bosdyn.api.WorkerComputeResponse.prototype.clearOutputImagesMap = function() {
  this.getOutputImagesMap().clear();
  return this;};


/**
 * @enum {number}
 */
proto.bosdyn.api.NetworkComputeStatus = {
  NETWORK_COMPUTE_STATUS_UNKNOWN: 0,
  NETWORK_COMPUTE_STATUS_SUCCESS: 1,
  NETWORK_COMPUTE_STATUS_EXTERNAL_SERVICE_NOT_FOUND: 2,
  NETWORK_COMPUTE_STATUS_EXTERNAL_SERVER_ERROR: 3,
  NETWORK_COMPUTE_STATUS_ROTATION_ERROR: 4,
  NETWORK_COMPUTE_STATUS_CUSTOM_PARAMS_ERROR: 5
};

/**
 * @enum {number}
 */
proto.bosdyn.api.ListAvailableModelsStatus = {
  LIST_AVAILABLE_MODELS_STATUS_UNKNOWN: 0,
  LIST_AVAILABLE_MODELS_STATUS_SUCCESS: 1,
  LIST_AVAILABLE_MODELS_STATUS_EXTERNAL_SERVICE_NOT_FOUND: 2,
  LIST_AVAILABLE_MODELS_STATUS_EXTERNAL_SERVER_ERROR: 3
};

goog.object.extend(exports, proto.bosdyn.api);
