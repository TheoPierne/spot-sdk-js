// source: bosdyn/api/log_status/log_status.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var bosdyn_api_header_pb = require('../../../bosdyn/api/header_pb.js');
goog.object.extend(proto, bosdyn_api_header_pb);
var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js');
goog.object.extend(proto, google_protobuf_duration_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.bosdyn.api.log_status.GetActiveLogStatusesRequest', null, global);
goog.exportSymbol('proto.bosdyn.api.log_status.GetActiveLogStatusesResponse', null, global);
goog.exportSymbol('proto.bosdyn.api.log_status.GetActiveLogStatusesResponse.Status', null, global);
goog.exportSymbol('proto.bosdyn.api.log_status.GetLogStatusRequest', null, global);
goog.exportSymbol('proto.bosdyn.api.log_status.GetLogStatusResponse', null, global);
goog.exportSymbol('proto.bosdyn.api.log_status.GetLogStatusResponse.Status', null, global);
goog.exportSymbol('proto.bosdyn.api.log_status.LogStatus', null, global);
goog.exportSymbol('proto.bosdyn.api.log_status.LogStatus.Status', null, global);
goog.exportSymbol('proto.bosdyn.api.log_status.LogStatus.Type', null, global);
goog.exportSymbol('proto.bosdyn.api.log_status.StartExperimentLogRequest', null, global);
goog.exportSymbol('proto.bosdyn.api.log_status.StartExperimentLogResponse', null, global);
goog.exportSymbol('proto.bosdyn.api.log_status.StartExperimentLogResponse.Status', null, global);
goog.exportSymbol('proto.bosdyn.api.log_status.StartRetroLogRequest', null, global);
goog.exportSymbol('proto.bosdyn.api.log_status.StartRetroLogResponse', null, global);
goog.exportSymbol('proto.bosdyn.api.log_status.StartRetroLogResponse.Status', null, global);
goog.exportSymbol('proto.bosdyn.api.log_status.TerminateLogRequest', null, global);
goog.exportSymbol('proto.bosdyn.api.log_status.TerminateLogResponse', null, global);
goog.exportSymbol('proto.bosdyn.api.log_status.TerminateLogResponse.Status', null, global);
goog.exportSymbol('proto.bosdyn.api.log_status.UpdateExperimentLogRequest', null, global);
goog.exportSymbol('proto.bosdyn.api.log_status.UpdateExperimentLogResponse', null, global);
goog.exportSymbol('proto.bosdyn.api.log_status.UpdateExperimentLogResponse.Status', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.log_status.LogStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.log_status.LogStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.log_status.LogStatus.displayName = 'proto.bosdyn.api.log_status.LogStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.log_status.GetLogStatusRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.log_status.GetLogStatusRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.log_status.GetLogStatusRequest.displayName = 'proto.bosdyn.api.log_status.GetLogStatusRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.log_status.GetLogStatusResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.log_status.GetLogStatusResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.log_status.GetLogStatusResponse.displayName = 'proto.bosdyn.api.log_status.GetLogStatusResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.log_status.GetActiveLogStatusesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.log_status.GetActiveLogStatusesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.log_status.GetActiveLogStatusesRequest.displayName = 'proto.bosdyn.api.log_status.GetActiveLogStatusesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.log_status.GetActiveLogStatusesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bosdyn.api.log_status.GetActiveLogStatusesResponse.repeatedFields_, null);
};
goog.inherits(proto.bosdyn.api.log_status.GetActiveLogStatusesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.log_status.GetActiveLogStatusesResponse.displayName = 'proto.bosdyn.api.log_status.GetActiveLogStatusesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.log_status.StartRetroLogRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.log_status.StartRetroLogRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.log_status.StartRetroLogRequest.displayName = 'proto.bosdyn.api.log_status.StartRetroLogRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.log_status.StartRetroLogResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.log_status.StartRetroLogResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.log_status.StartRetroLogResponse.displayName = 'proto.bosdyn.api.log_status.StartRetroLogResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.log_status.StartExperimentLogRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.log_status.StartExperimentLogRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.log_status.StartExperimentLogRequest.displayName = 'proto.bosdyn.api.log_status.StartExperimentLogRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.log_status.StartExperimentLogResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.log_status.StartExperimentLogResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.log_status.StartExperimentLogResponse.displayName = 'proto.bosdyn.api.log_status.StartExperimentLogResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.log_status.UpdateExperimentLogRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.log_status.UpdateExperimentLogRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.log_status.UpdateExperimentLogRequest.displayName = 'proto.bosdyn.api.log_status.UpdateExperimentLogRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.log_status.UpdateExperimentLogResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.log_status.UpdateExperimentLogResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.log_status.UpdateExperimentLogResponse.displayName = 'proto.bosdyn.api.log_status.UpdateExperimentLogResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.log_status.TerminateLogRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.log_status.TerminateLogRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.log_status.TerminateLogRequest.displayName = 'proto.bosdyn.api.log_status.TerminateLogRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.log_status.TerminateLogResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.log_status.TerminateLogResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.log_status.TerminateLogResponse.displayName = 'proto.bosdyn.api.log_status.TerminateLogResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.log_status.LogStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.log_status.LogStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.log_status.LogStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.log_status.LogStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0),
    type: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.log_status.LogStatus}
 */
proto.bosdyn.api.log_status.LogStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.log_status.LogStatus;
  return proto.bosdyn.api.log_status.LogStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.log_status.LogStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.log_status.LogStatus}
 */
proto.bosdyn.api.log_status.LogStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {!proto.bosdyn.api.log_status.LogStatus.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 3:
      var value = /** @type {!proto.bosdyn.api.log_status.LogStatus.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.log_status.LogStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.log_status.LogStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.log_status.LogStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.log_status.LogStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.bosdyn.api.log_status.LogStatus.Status = {
  STATUS_UNKNOWN: 0,
  STATUS_RECEIVED: 1,
  STATUS_IN_PROGRESS: 2,
  STATUS_SYNCING: 3,
  STATUS_DONE: 100,
  STATUS_FAILED: 101,
  STATUS_TERMINATED: 102
};

/**
 * @enum {number}
 */
proto.bosdyn.api.log_status.LogStatus.Type = {
  TYPE_UNKNOWN: 0,
  TYPE_EXPERIMENT: 1,
  TYPE_RETRO: 2
};

/**
 * optional string id = 1;
 * @return {string}
 */
proto.bosdyn.api.log_status.LogStatus.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bosdyn.api.log_status.LogStatus} returns this
 */
proto.bosdyn.api.log_status.LogStatus.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Status status = 2;
 * @return {!proto.bosdyn.api.log_status.LogStatus.Status}
 */
proto.bosdyn.api.log_status.LogStatus.prototype.getStatus = function() {
  return /** @type {!proto.bosdyn.api.log_status.LogStatus.Status} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.bosdyn.api.log_status.LogStatus.Status} value
 * @return {!proto.bosdyn.api.log_status.LogStatus} returns this
 */
proto.bosdyn.api.log_status.LogStatus.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional Type type = 3;
 * @return {!proto.bosdyn.api.log_status.LogStatus.Type}
 */
proto.bosdyn.api.log_status.LogStatus.prototype.getType = function() {
  return /** @type {!proto.bosdyn.api.log_status.LogStatus.Type} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.bosdyn.api.log_status.LogStatus.Type} value
 * @return {!proto.bosdyn.api.log_status.LogStatus} returns this
 */
proto.bosdyn.api.log_status.LogStatus.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.log_status.GetLogStatusRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.log_status.GetLogStatusRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.log_status.GetLogStatusRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.log_status.GetLogStatusRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && bosdyn_api_header_pb.RequestHeader.toObject(includeInstance, f),
    id: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.log_status.GetLogStatusRequest}
 */
proto.bosdyn.api.log_status.GetLogStatusRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.log_status.GetLogStatusRequest;
  return proto.bosdyn.api.log_status.GetLogStatusRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.log_status.GetLogStatusRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.log_status.GetLogStatusRequest}
 */
proto.bosdyn.api.log_status.GetLogStatusRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new bosdyn_api_header_pb.RequestHeader;
      reader.readMessage(value,bosdyn_api_header_pb.RequestHeader.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.log_status.GetLogStatusRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.log_status.GetLogStatusRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.log_status.GetLogStatusRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.log_status.GetLogStatusRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      bosdyn_api_header_pb.RequestHeader.serializeBinaryToWriter
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bosdyn.api.RequestHeader header = 1;
 * @return {?proto.bosdyn.api.RequestHeader}
 */
proto.bosdyn.api.log_status.GetLogStatusRequest.prototype.getHeader = function() {
  return /** @type{?proto.bosdyn.api.RequestHeader} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_header_pb.RequestHeader, 1));
};


/**
 * @param {?proto.bosdyn.api.RequestHeader|undefined} value
 * @return {!proto.bosdyn.api.log_status.GetLogStatusRequest} returns this
*/
proto.bosdyn.api.log_status.GetLogStatusRequest.prototype.setHeader = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.log_status.GetLogStatusRequest} returns this
 */
proto.bosdyn.api.log_status.GetLogStatusRequest.prototype.clearHeader = function() {
  return this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.log_status.GetLogStatusRequest.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string id = 2;
 * @return {string}
 */
proto.bosdyn.api.log_status.GetLogStatusRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.bosdyn.api.log_status.GetLogStatusRequest} returns this
 */
proto.bosdyn.api.log_status.GetLogStatusRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.log_status.GetLogStatusResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.log_status.GetLogStatusResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.log_status.GetLogStatusResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.log_status.GetLogStatusResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && bosdyn_api_header_pb.ResponseHeader.toObject(includeInstance, f),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0),
    logStatus: (f = msg.getLogStatus()) && proto.bosdyn.api.log_status.LogStatus.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.log_status.GetLogStatusResponse}
 */
proto.bosdyn.api.log_status.GetLogStatusResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.log_status.GetLogStatusResponse;
  return proto.bosdyn.api.log_status.GetLogStatusResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.log_status.GetLogStatusResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.log_status.GetLogStatusResponse}
 */
proto.bosdyn.api.log_status.GetLogStatusResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new bosdyn_api_header_pb.ResponseHeader;
      reader.readMessage(value,bosdyn_api_header_pb.ResponseHeader.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 2:
      var value = /** @type {!proto.bosdyn.api.log_status.GetLogStatusResponse.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 3:
      var value = new proto.bosdyn.api.log_status.LogStatus;
      reader.readMessage(value,proto.bosdyn.api.log_status.LogStatus.deserializeBinaryFromReader);
      msg.setLogStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.log_status.GetLogStatusResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.log_status.GetLogStatusResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.log_status.GetLogStatusResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.log_status.GetLogStatusResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      bosdyn_api_header_pb.ResponseHeader.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getLogStatus();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.bosdyn.api.log_status.LogStatus.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.bosdyn.api.log_status.GetLogStatusResponse.Status = {
  STATUS_UNKNOWN: 0,
  STATUS_OK: 1,
  STATUS_ID_NOT_FOUND: 2
};

/**
 * optional bosdyn.api.ResponseHeader header = 1;
 * @return {?proto.bosdyn.api.ResponseHeader}
 */
proto.bosdyn.api.log_status.GetLogStatusResponse.prototype.getHeader = function() {
  return /** @type{?proto.bosdyn.api.ResponseHeader} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_header_pb.ResponseHeader, 1));
};


/**
 * @param {?proto.bosdyn.api.ResponseHeader|undefined} value
 * @return {!proto.bosdyn.api.log_status.GetLogStatusResponse} returns this
*/
proto.bosdyn.api.log_status.GetLogStatusResponse.prototype.setHeader = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.log_status.GetLogStatusResponse} returns this
 */
proto.bosdyn.api.log_status.GetLogStatusResponse.prototype.clearHeader = function() {
  return this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.log_status.GetLogStatusResponse.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Status status = 2;
 * @return {!proto.bosdyn.api.log_status.GetLogStatusResponse.Status}
 */
proto.bosdyn.api.log_status.GetLogStatusResponse.prototype.getStatus = function() {
  return /** @type {!proto.bosdyn.api.log_status.GetLogStatusResponse.Status} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.bosdyn.api.log_status.GetLogStatusResponse.Status} value
 * @return {!proto.bosdyn.api.log_status.GetLogStatusResponse} returns this
 */
proto.bosdyn.api.log_status.GetLogStatusResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional LogStatus log_status = 3;
 * @return {?proto.bosdyn.api.log_status.LogStatus}
 */
proto.bosdyn.api.log_status.GetLogStatusResponse.prototype.getLogStatus = function() {
  return /** @type{?proto.bosdyn.api.log_status.LogStatus} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.log_status.LogStatus, 3));
};


/**
 * @param {?proto.bosdyn.api.log_status.LogStatus|undefined} value
 * @return {!proto.bosdyn.api.log_status.GetLogStatusResponse} returns this
*/
proto.bosdyn.api.log_status.GetLogStatusResponse.prototype.setLogStatus = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.log_status.GetLogStatusResponse} returns this
 */
proto.bosdyn.api.log_status.GetLogStatusResponse.prototype.clearLogStatus = function() {
  return this.setLogStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.log_status.GetLogStatusResponse.prototype.hasLogStatus = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.log_status.GetActiveLogStatusesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.log_status.GetActiveLogStatusesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.log_status.GetActiveLogStatusesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.log_status.GetActiveLogStatusesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && bosdyn_api_header_pb.RequestHeader.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.log_status.GetActiveLogStatusesRequest}
 */
proto.bosdyn.api.log_status.GetActiveLogStatusesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.log_status.GetActiveLogStatusesRequest;
  return proto.bosdyn.api.log_status.GetActiveLogStatusesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.log_status.GetActiveLogStatusesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.log_status.GetActiveLogStatusesRequest}
 */
proto.bosdyn.api.log_status.GetActiveLogStatusesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new bosdyn_api_header_pb.RequestHeader;
      reader.readMessage(value,bosdyn_api_header_pb.RequestHeader.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.log_status.GetActiveLogStatusesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.log_status.GetActiveLogStatusesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.log_status.GetActiveLogStatusesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.log_status.GetActiveLogStatusesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      bosdyn_api_header_pb.RequestHeader.serializeBinaryToWriter
    );
  }
};


/**
 * optional bosdyn.api.RequestHeader header = 1;
 * @return {?proto.bosdyn.api.RequestHeader}
 */
proto.bosdyn.api.log_status.GetActiveLogStatusesRequest.prototype.getHeader = function() {
  return /** @type{?proto.bosdyn.api.RequestHeader} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_header_pb.RequestHeader, 1));
};


/**
 * @param {?proto.bosdyn.api.RequestHeader|undefined} value
 * @return {!proto.bosdyn.api.log_status.GetActiveLogStatusesRequest} returns this
*/
proto.bosdyn.api.log_status.GetActiveLogStatusesRequest.prototype.setHeader = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.log_status.GetActiveLogStatusesRequest} returns this
 */
proto.bosdyn.api.log_status.GetActiveLogStatusesRequest.prototype.clearHeader = function() {
  return this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.log_status.GetActiveLogStatusesRequest.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bosdyn.api.log_status.GetActiveLogStatusesResponse.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.log_status.GetActiveLogStatusesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.log_status.GetActiveLogStatusesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.log_status.GetActiveLogStatusesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.log_status.GetActiveLogStatusesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && bosdyn_api_header_pb.ResponseHeader.toObject(includeInstance, f),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0),
    logStatusesList: jspb.Message.toObjectList(msg.getLogStatusesList(),
    proto.bosdyn.api.log_status.LogStatus.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.log_status.GetActiveLogStatusesResponse}
 */
proto.bosdyn.api.log_status.GetActiveLogStatusesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.log_status.GetActiveLogStatusesResponse;
  return proto.bosdyn.api.log_status.GetActiveLogStatusesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.log_status.GetActiveLogStatusesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.log_status.GetActiveLogStatusesResponse}
 */
proto.bosdyn.api.log_status.GetActiveLogStatusesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new bosdyn_api_header_pb.ResponseHeader;
      reader.readMessage(value,bosdyn_api_header_pb.ResponseHeader.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 2:
      var value = /** @type {!proto.bosdyn.api.log_status.GetActiveLogStatusesResponse.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 3:
      var value = new proto.bosdyn.api.log_status.LogStatus;
      reader.readMessage(value,proto.bosdyn.api.log_status.LogStatus.deserializeBinaryFromReader);
      msg.addLogStatuses(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.log_status.GetActiveLogStatusesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.log_status.GetActiveLogStatusesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.log_status.GetActiveLogStatusesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.log_status.GetActiveLogStatusesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      bosdyn_api_header_pb.ResponseHeader.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getLogStatusesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.bosdyn.api.log_status.LogStatus.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.bosdyn.api.log_status.GetActiveLogStatusesResponse.Status = {
  STATUS_UNKNOWN: 0,
  STATUS_OK: 1
};

/**
 * optional bosdyn.api.ResponseHeader header = 1;
 * @return {?proto.bosdyn.api.ResponseHeader}
 */
proto.bosdyn.api.log_status.GetActiveLogStatusesResponse.prototype.getHeader = function() {
  return /** @type{?proto.bosdyn.api.ResponseHeader} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_header_pb.ResponseHeader, 1));
};


/**
 * @param {?proto.bosdyn.api.ResponseHeader|undefined} value
 * @return {!proto.bosdyn.api.log_status.GetActiveLogStatusesResponse} returns this
*/
proto.bosdyn.api.log_status.GetActiveLogStatusesResponse.prototype.setHeader = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.log_status.GetActiveLogStatusesResponse} returns this
 */
proto.bosdyn.api.log_status.GetActiveLogStatusesResponse.prototype.clearHeader = function() {
  return this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.log_status.GetActiveLogStatusesResponse.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Status status = 2;
 * @return {!proto.bosdyn.api.log_status.GetActiveLogStatusesResponse.Status}
 */
proto.bosdyn.api.log_status.GetActiveLogStatusesResponse.prototype.getStatus = function() {
  return /** @type {!proto.bosdyn.api.log_status.GetActiveLogStatusesResponse.Status} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.bosdyn.api.log_status.GetActiveLogStatusesResponse.Status} value
 * @return {!proto.bosdyn.api.log_status.GetActiveLogStatusesResponse} returns this
 */
proto.bosdyn.api.log_status.GetActiveLogStatusesResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * repeated LogStatus log_statuses = 3;
 * @return {!Array<!proto.bosdyn.api.log_status.LogStatus>}
 */
proto.bosdyn.api.log_status.GetActiveLogStatusesResponse.prototype.getLogStatusesList = function() {
  return /** @type{!Array<!proto.bosdyn.api.log_status.LogStatus>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.bosdyn.api.log_status.LogStatus, 3));
};


/**
 * @param {!Array<!proto.bosdyn.api.log_status.LogStatus>} value
 * @return {!proto.bosdyn.api.log_status.GetActiveLogStatusesResponse} returns this
*/
proto.bosdyn.api.log_status.GetActiveLogStatusesResponse.prototype.setLogStatusesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.bosdyn.api.log_status.LogStatus=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bosdyn.api.log_status.LogStatus}
 */
proto.bosdyn.api.log_status.GetActiveLogStatusesResponse.prototype.addLogStatuses = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.bosdyn.api.log_status.LogStatus, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bosdyn.api.log_status.GetActiveLogStatusesResponse} returns this
 */
proto.bosdyn.api.log_status.GetActiveLogStatusesResponse.prototype.clearLogStatusesList = function() {
  return this.setLogStatusesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.log_status.StartRetroLogRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.log_status.StartRetroLogRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.log_status.StartRetroLogRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.log_status.StartRetroLogRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && bosdyn_api_header_pb.RequestHeader.toObject(includeInstance, f),
    pastDuration: (f = msg.getPastDuration()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.log_status.StartRetroLogRequest}
 */
proto.bosdyn.api.log_status.StartRetroLogRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.log_status.StartRetroLogRequest;
  return proto.bosdyn.api.log_status.StartRetroLogRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.log_status.StartRetroLogRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.log_status.StartRetroLogRequest}
 */
proto.bosdyn.api.log_status.StartRetroLogRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new bosdyn_api_header_pb.RequestHeader;
      reader.readMessage(value,bosdyn_api_header_pb.RequestHeader.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 2:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setPastDuration(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.log_status.StartRetroLogRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.log_status.StartRetroLogRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.log_status.StartRetroLogRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.log_status.StartRetroLogRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      bosdyn_api_header_pb.RequestHeader.serializeBinaryToWriter
    );
  }
  f = message.getPastDuration();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
};


/**
 * optional bosdyn.api.RequestHeader header = 1;
 * @return {?proto.bosdyn.api.RequestHeader}
 */
proto.bosdyn.api.log_status.StartRetroLogRequest.prototype.getHeader = function() {
  return /** @type{?proto.bosdyn.api.RequestHeader} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_header_pb.RequestHeader, 1));
};


/**
 * @param {?proto.bosdyn.api.RequestHeader|undefined} value
 * @return {!proto.bosdyn.api.log_status.StartRetroLogRequest} returns this
*/
proto.bosdyn.api.log_status.StartRetroLogRequest.prototype.setHeader = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.log_status.StartRetroLogRequest} returns this
 */
proto.bosdyn.api.log_status.StartRetroLogRequest.prototype.clearHeader = function() {
  return this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.log_status.StartRetroLogRequest.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Duration past_duration = 2;
 * @return {?proto.google.protobuf.Duration}
 */
proto.bosdyn.api.log_status.StartRetroLogRequest.prototype.getPastDuration = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 2));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.bosdyn.api.log_status.StartRetroLogRequest} returns this
*/
proto.bosdyn.api.log_status.StartRetroLogRequest.prototype.setPastDuration = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.log_status.StartRetroLogRequest} returns this
 */
proto.bosdyn.api.log_status.StartRetroLogRequest.prototype.clearPastDuration = function() {
  return this.setPastDuration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.log_status.StartRetroLogRequest.prototype.hasPastDuration = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.log_status.StartRetroLogResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.log_status.StartRetroLogResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.log_status.StartRetroLogResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.log_status.StartRetroLogResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && bosdyn_api_header_pb.ResponseHeader.toObject(includeInstance, f),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0),
    logStatus: (f = msg.getLogStatus()) && proto.bosdyn.api.log_status.LogStatus.toObject(includeInstance, f),
    endTime: (f = msg.getEndTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.log_status.StartRetroLogResponse}
 */
proto.bosdyn.api.log_status.StartRetroLogResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.log_status.StartRetroLogResponse;
  return proto.bosdyn.api.log_status.StartRetroLogResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.log_status.StartRetroLogResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.log_status.StartRetroLogResponse}
 */
proto.bosdyn.api.log_status.StartRetroLogResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new bosdyn_api_header_pb.ResponseHeader;
      reader.readMessage(value,bosdyn_api_header_pb.ResponseHeader.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 2:
      var value = /** @type {!proto.bosdyn.api.log_status.StartRetroLogResponse.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 3:
      var value = new proto.bosdyn.api.log_status.LogStatus;
      reader.readMessage(value,proto.bosdyn.api.log_status.LogStatus.deserializeBinaryFromReader);
      msg.setLogStatus(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setEndTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.log_status.StartRetroLogResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.log_status.StartRetroLogResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.log_status.StartRetroLogResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.log_status.StartRetroLogResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      bosdyn_api_header_pb.ResponseHeader.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getLogStatus();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.bosdyn.api.log_status.LogStatus.serializeBinaryToWriter
    );
  }
  f = message.getEndTime();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.bosdyn.api.log_status.StartRetroLogResponse.Status = {
  STATUS_UNKNOWN: 0,
  STATUS_OK: 1,
  STATUS_EXPERIMENT_LOG_RUNNING: 2,
  STATUS_CONCURRENCY_LIMIT_REACHED: 3
};

/**
 * optional bosdyn.api.ResponseHeader header = 1;
 * @return {?proto.bosdyn.api.ResponseHeader}
 */
proto.bosdyn.api.log_status.StartRetroLogResponse.prototype.getHeader = function() {
  return /** @type{?proto.bosdyn.api.ResponseHeader} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_header_pb.ResponseHeader, 1));
};


/**
 * @param {?proto.bosdyn.api.ResponseHeader|undefined} value
 * @return {!proto.bosdyn.api.log_status.StartRetroLogResponse} returns this
*/
proto.bosdyn.api.log_status.StartRetroLogResponse.prototype.setHeader = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.log_status.StartRetroLogResponse} returns this
 */
proto.bosdyn.api.log_status.StartRetroLogResponse.prototype.clearHeader = function() {
  return this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.log_status.StartRetroLogResponse.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Status status = 2;
 * @return {!proto.bosdyn.api.log_status.StartRetroLogResponse.Status}
 */
proto.bosdyn.api.log_status.StartRetroLogResponse.prototype.getStatus = function() {
  return /** @type {!proto.bosdyn.api.log_status.StartRetroLogResponse.Status} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.bosdyn.api.log_status.StartRetroLogResponse.Status} value
 * @return {!proto.bosdyn.api.log_status.StartRetroLogResponse} returns this
 */
proto.bosdyn.api.log_status.StartRetroLogResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional LogStatus log_status = 3;
 * @return {?proto.bosdyn.api.log_status.LogStatus}
 */
proto.bosdyn.api.log_status.StartRetroLogResponse.prototype.getLogStatus = function() {
  return /** @type{?proto.bosdyn.api.log_status.LogStatus} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.log_status.LogStatus, 3));
};


/**
 * @param {?proto.bosdyn.api.log_status.LogStatus|undefined} value
 * @return {!proto.bosdyn.api.log_status.StartRetroLogResponse} returns this
*/
proto.bosdyn.api.log_status.StartRetroLogResponse.prototype.setLogStatus = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.log_status.StartRetroLogResponse} returns this
 */
proto.bosdyn.api.log_status.StartRetroLogResponse.prototype.clearLogStatus = function() {
  return this.setLogStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.log_status.StartRetroLogResponse.prototype.hasLogStatus = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional google.protobuf.Timestamp end_time = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.bosdyn.api.log_status.StartRetroLogResponse.prototype.getEndTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.bosdyn.api.log_status.StartRetroLogResponse} returns this
*/
proto.bosdyn.api.log_status.StartRetroLogResponse.prototype.setEndTime = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.log_status.StartRetroLogResponse} returns this
 */
proto.bosdyn.api.log_status.StartRetroLogResponse.prototype.clearEndTime = function() {
  return this.setEndTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.log_status.StartRetroLogResponse.prototype.hasEndTime = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.log_status.StartExperimentLogRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.log_status.StartExperimentLogRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.log_status.StartExperimentLogRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.log_status.StartExperimentLogRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && bosdyn_api_header_pb.RequestHeader.toObject(includeInstance, f),
    keepAlive: (f = msg.getKeepAlive()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.log_status.StartExperimentLogRequest}
 */
proto.bosdyn.api.log_status.StartExperimentLogRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.log_status.StartExperimentLogRequest;
  return proto.bosdyn.api.log_status.StartExperimentLogRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.log_status.StartExperimentLogRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.log_status.StartExperimentLogRequest}
 */
proto.bosdyn.api.log_status.StartExperimentLogRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new bosdyn_api_header_pb.RequestHeader;
      reader.readMessage(value,bosdyn_api_header_pb.RequestHeader.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 2:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setKeepAlive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.log_status.StartExperimentLogRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.log_status.StartExperimentLogRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.log_status.StartExperimentLogRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.log_status.StartExperimentLogRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      bosdyn_api_header_pb.RequestHeader.serializeBinaryToWriter
    );
  }
  f = message.getKeepAlive();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
};


/**
 * optional bosdyn.api.RequestHeader header = 1;
 * @return {?proto.bosdyn.api.RequestHeader}
 */
proto.bosdyn.api.log_status.StartExperimentLogRequest.prototype.getHeader = function() {
  return /** @type{?proto.bosdyn.api.RequestHeader} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_header_pb.RequestHeader, 1));
};


/**
 * @param {?proto.bosdyn.api.RequestHeader|undefined} value
 * @return {!proto.bosdyn.api.log_status.StartExperimentLogRequest} returns this
*/
proto.bosdyn.api.log_status.StartExperimentLogRequest.prototype.setHeader = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.log_status.StartExperimentLogRequest} returns this
 */
proto.bosdyn.api.log_status.StartExperimentLogRequest.prototype.clearHeader = function() {
  return this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.log_status.StartExperimentLogRequest.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Duration keep_alive = 2;
 * @return {?proto.google.protobuf.Duration}
 */
proto.bosdyn.api.log_status.StartExperimentLogRequest.prototype.getKeepAlive = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 2));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.bosdyn.api.log_status.StartExperimentLogRequest} returns this
*/
proto.bosdyn.api.log_status.StartExperimentLogRequest.prototype.setKeepAlive = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.log_status.StartExperimentLogRequest} returns this
 */
proto.bosdyn.api.log_status.StartExperimentLogRequest.prototype.clearKeepAlive = function() {
  return this.setKeepAlive(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.log_status.StartExperimentLogRequest.prototype.hasKeepAlive = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.log_status.StartExperimentLogResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.log_status.StartExperimentLogResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.log_status.StartExperimentLogResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.log_status.StartExperimentLogResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && bosdyn_api_header_pb.ResponseHeader.toObject(includeInstance, f),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0),
    logStatus: (f = msg.getLogStatus()) && proto.bosdyn.api.log_status.LogStatus.toObject(includeInstance, f),
    endTime: (f = msg.getEndTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.log_status.StartExperimentLogResponse}
 */
proto.bosdyn.api.log_status.StartExperimentLogResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.log_status.StartExperimentLogResponse;
  return proto.bosdyn.api.log_status.StartExperimentLogResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.log_status.StartExperimentLogResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.log_status.StartExperimentLogResponse}
 */
proto.bosdyn.api.log_status.StartExperimentLogResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new bosdyn_api_header_pb.ResponseHeader;
      reader.readMessage(value,bosdyn_api_header_pb.ResponseHeader.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 2:
      var value = /** @type {!proto.bosdyn.api.log_status.StartExperimentLogResponse.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 3:
      var value = new proto.bosdyn.api.log_status.LogStatus;
      reader.readMessage(value,proto.bosdyn.api.log_status.LogStatus.deserializeBinaryFromReader);
      msg.setLogStatus(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setEndTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.log_status.StartExperimentLogResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.log_status.StartExperimentLogResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.log_status.StartExperimentLogResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.log_status.StartExperimentLogResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      bosdyn_api_header_pb.ResponseHeader.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getLogStatus();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.bosdyn.api.log_status.LogStatus.serializeBinaryToWriter
    );
  }
  f = message.getEndTime();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.bosdyn.api.log_status.StartExperimentLogResponse.Status = {
  STATUS_UNKNOWN: 0,
  STATUS_OK: 1,
  STATUS_EXPERIMENT_LOG_RUNNING: 2
};

/**
 * optional bosdyn.api.ResponseHeader header = 1;
 * @return {?proto.bosdyn.api.ResponseHeader}
 */
proto.bosdyn.api.log_status.StartExperimentLogResponse.prototype.getHeader = function() {
  return /** @type{?proto.bosdyn.api.ResponseHeader} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_header_pb.ResponseHeader, 1));
};


/**
 * @param {?proto.bosdyn.api.ResponseHeader|undefined} value
 * @return {!proto.bosdyn.api.log_status.StartExperimentLogResponse} returns this
*/
proto.bosdyn.api.log_status.StartExperimentLogResponse.prototype.setHeader = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.log_status.StartExperimentLogResponse} returns this
 */
proto.bosdyn.api.log_status.StartExperimentLogResponse.prototype.clearHeader = function() {
  return this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.log_status.StartExperimentLogResponse.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Status status = 2;
 * @return {!proto.bosdyn.api.log_status.StartExperimentLogResponse.Status}
 */
proto.bosdyn.api.log_status.StartExperimentLogResponse.prototype.getStatus = function() {
  return /** @type {!proto.bosdyn.api.log_status.StartExperimentLogResponse.Status} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.bosdyn.api.log_status.StartExperimentLogResponse.Status} value
 * @return {!proto.bosdyn.api.log_status.StartExperimentLogResponse} returns this
 */
proto.bosdyn.api.log_status.StartExperimentLogResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional LogStatus log_status = 3;
 * @return {?proto.bosdyn.api.log_status.LogStatus}
 */
proto.bosdyn.api.log_status.StartExperimentLogResponse.prototype.getLogStatus = function() {
  return /** @type{?proto.bosdyn.api.log_status.LogStatus} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.log_status.LogStatus, 3));
};


/**
 * @param {?proto.bosdyn.api.log_status.LogStatus|undefined} value
 * @return {!proto.bosdyn.api.log_status.StartExperimentLogResponse} returns this
*/
proto.bosdyn.api.log_status.StartExperimentLogResponse.prototype.setLogStatus = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.log_status.StartExperimentLogResponse} returns this
 */
proto.bosdyn.api.log_status.StartExperimentLogResponse.prototype.clearLogStatus = function() {
  return this.setLogStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.log_status.StartExperimentLogResponse.prototype.hasLogStatus = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional google.protobuf.Timestamp end_time = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.bosdyn.api.log_status.StartExperimentLogResponse.prototype.getEndTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.bosdyn.api.log_status.StartExperimentLogResponse} returns this
*/
proto.bosdyn.api.log_status.StartExperimentLogResponse.prototype.setEndTime = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.log_status.StartExperimentLogResponse} returns this
 */
proto.bosdyn.api.log_status.StartExperimentLogResponse.prototype.clearEndTime = function() {
  return this.setEndTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.log_status.StartExperimentLogResponse.prototype.hasEndTime = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.log_status.UpdateExperimentLogRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.log_status.UpdateExperimentLogRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.log_status.UpdateExperimentLogRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.log_status.UpdateExperimentLogRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && bosdyn_api_header_pb.RequestHeader.toObject(includeInstance, f),
    keepAlive: (f = msg.getKeepAlive()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f),
    id: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.log_status.UpdateExperimentLogRequest}
 */
proto.bosdyn.api.log_status.UpdateExperimentLogRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.log_status.UpdateExperimentLogRequest;
  return proto.bosdyn.api.log_status.UpdateExperimentLogRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.log_status.UpdateExperimentLogRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.log_status.UpdateExperimentLogRequest}
 */
proto.bosdyn.api.log_status.UpdateExperimentLogRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new bosdyn_api_header_pb.RequestHeader;
      reader.readMessage(value,bosdyn_api_header_pb.RequestHeader.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 2:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setKeepAlive(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.log_status.UpdateExperimentLogRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.log_status.UpdateExperimentLogRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.log_status.UpdateExperimentLogRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.log_status.UpdateExperimentLogRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      bosdyn_api_header_pb.RequestHeader.serializeBinaryToWriter
    );
  }
  f = message.getKeepAlive();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional bosdyn.api.RequestHeader header = 1;
 * @return {?proto.bosdyn.api.RequestHeader}
 */
proto.bosdyn.api.log_status.UpdateExperimentLogRequest.prototype.getHeader = function() {
  return /** @type{?proto.bosdyn.api.RequestHeader} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_header_pb.RequestHeader, 1));
};


/**
 * @param {?proto.bosdyn.api.RequestHeader|undefined} value
 * @return {!proto.bosdyn.api.log_status.UpdateExperimentLogRequest} returns this
*/
proto.bosdyn.api.log_status.UpdateExperimentLogRequest.prototype.setHeader = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.log_status.UpdateExperimentLogRequest} returns this
 */
proto.bosdyn.api.log_status.UpdateExperimentLogRequest.prototype.clearHeader = function() {
  return this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.log_status.UpdateExperimentLogRequest.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Duration keep_alive = 2;
 * @return {?proto.google.protobuf.Duration}
 */
proto.bosdyn.api.log_status.UpdateExperimentLogRequest.prototype.getKeepAlive = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 2));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.bosdyn.api.log_status.UpdateExperimentLogRequest} returns this
*/
proto.bosdyn.api.log_status.UpdateExperimentLogRequest.prototype.setKeepAlive = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.log_status.UpdateExperimentLogRequest} returns this
 */
proto.bosdyn.api.log_status.UpdateExperimentLogRequest.prototype.clearKeepAlive = function() {
  return this.setKeepAlive(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.log_status.UpdateExperimentLogRequest.prototype.hasKeepAlive = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string id = 3;
 * @return {string}
 */
proto.bosdyn.api.log_status.UpdateExperimentLogRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.bosdyn.api.log_status.UpdateExperimentLogRequest} returns this
 */
proto.bosdyn.api.log_status.UpdateExperimentLogRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.log_status.UpdateExperimentLogResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.log_status.UpdateExperimentLogResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.log_status.UpdateExperimentLogResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.log_status.UpdateExperimentLogResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && bosdyn_api_header_pb.ResponseHeader.toObject(includeInstance, f),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0),
    logStatus: (f = msg.getLogStatus()) && proto.bosdyn.api.log_status.LogStatus.toObject(includeInstance, f),
    endTime: (f = msg.getEndTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.log_status.UpdateExperimentLogResponse}
 */
proto.bosdyn.api.log_status.UpdateExperimentLogResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.log_status.UpdateExperimentLogResponse;
  return proto.bosdyn.api.log_status.UpdateExperimentLogResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.log_status.UpdateExperimentLogResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.log_status.UpdateExperimentLogResponse}
 */
proto.bosdyn.api.log_status.UpdateExperimentLogResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new bosdyn_api_header_pb.ResponseHeader;
      reader.readMessage(value,bosdyn_api_header_pb.ResponseHeader.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 2:
      var value = /** @type {!proto.bosdyn.api.log_status.UpdateExperimentLogResponse.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 3:
      var value = new proto.bosdyn.api.log_status.LogStatus;
      reader.readMessage(value,proto.bosdyn.api.log_status.LogStatus.deserializeBinaryFromReader);
      msg.setLogStatus(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setEndTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.log_status.UpdateExperimentLogResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.log_status.UpdateExperimentLogResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.log_status.UpdateExperimentLogResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.log_status.UpdateExperimentLogResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      bosdyn_api_header_pb.ResponseHeader.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getLogStatus();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.bosdyn.api.log_status.LogStatus.serializeBinaryToWriter
    );
  }
  f = message.getEndTime();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.bosdyn.api.log_status.UpdateExperimentLogResponse.Status = {
  STATUS_UNKNOWN: 0,
  STATUS_OK: 1,
  STATUS_ID_NOT_FOUND: 2,
  STATUS_LOG_TERMINATED: 3
};

/**
 * optional bosdyn.api.ResponseHeader header = 1;
 * @return {?proto.bosdyn.api.ResponseHeader}
 */
proto.bosdyn.api.log_status.UpdateExperimentLogResponse.prototype.getHeader = function() {
  return /** @type{?proto.bosdyn.api.ResponseHeader} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_header_pb.ResponseHeader, 1));
};


/**
 * @param {?proto.bosdyn.api.ResponseHeader|undefined} value
 * @return {!proto.bosdyn.api.log_status.UpdateExperimentLogResponse} returns this
*/
proto.bosdyn.api.log_status.UpdateExperimentLogResponse.prototype.setHeader = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.log_status.UpdateExperimentLogResponse} returns this
 */
proto.bosdyn.api.log_status.UpdateExperimentLogResponse.prototype.clearHeader = function() {
  return this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.log_status.UpdateExperimentLogResponse.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Status status = 2;
 * @return {!proto.bosdyn.api.log_status.UpdateExperimentLogResponse.Status}
 */
proto.bosdyn.api.log_status.UpdateExperimentLogResponse.prototype.getStatus = function() {
  return /** @type {!proto.bosdyn.api.log_status.UpdateExperimentLogResponse.Status} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.bosdyn.api.log_status.UpdateExperimentLogResponse.Status} value
 * @return {!proto.bosdyn.api.log_status.UpdateExperimentLogResponse} returns this
 */
proto.bosdyn.api.log_status.UpdateExperimentLogResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional LogStatus log_status = 3;
 * @return {?proto.bosdyn.api.log_status.LogStatus}
 */
proto.bosdyn.api.log_status.UpdateExperimentLogResponse.prototype.getLogStatus = function() {
  return /** @type{?proto.bosdyn.api.log_status.LogStatus} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.log_status.LogStatus, 3));
};


/**
 * @param {?proto.bosdyn.api.log_status.LogStatus|undefined} value
 * @return {!proto.bosdyn.api.log_status.UpdateExperimentLogResponse} returns this
*/
proto.bosdyn.api.log_status.UpdateExperimentLogResponse.prototype.setLogStatus = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.log_status.UpdateExperimentLogResponse} returns this
 */
proto.bosdyn.api.log_status.UpdateExperimentLogResponse.prototype.clearLogStatus = function() {
  return this.setLogStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.log_status.UpdateExperimentLogResponse.prototype.hasLogStatus = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional google.protobuf.Timestamp end_time = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.bosdyn.api.log_status.UpdateExperimentLogResponse.prototype.getEndTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.bosdyn.api.log_status.UpdateExperimentLogResponse} returns this
*/
proto.bosdyn.api.log_status.UpdateExperimentLogResponse.prototype.setEndTime = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.log_status.UpdateExperimentLogResponse} returns this
 */
proto.bosdyn.api.log_status.UpdateExperimentLogResponse.prototype.clearEndTime = function() {
  return this.setEndTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.log_status.UpdateExperimentLogResponse.prototype.hasEndTime = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.log_status.TerminateLogRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.log_status.TerminateLogRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.log_status.TerminateLogRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.log_status.TerminateLogRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && bosdyn_api_header_pb.RequestHeader.toObject(includeInstance, f),
    id: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.log_status.TerminateLogRequest}
 */
proto.bosdyn.api.log_status.TerminateLogRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.log_status.TerminateLogRequest;
  return proto.bosdyn.api.log_status.TerminateLogRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.log_status.TerminateLogRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.log_status.TerminateLogRequest}
 */
proto.bosdyn.api.log_status.TerminateLogRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new bosdyn_api_header_pb.RequestHeader;
      reader.readMessage(value,bosdyn_api_header_pb.RequestHeader.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.log_status.TerminateLogRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.log_status.TerminateLogRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.log_status.TerminateLogRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.log_status.TerminateLogRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      bosdyn_api_header_pb.RequestHeader.serializeBinaryToWriter
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bosdyn.api.RequestHeader header = 1;
 * @return {?proto.bosdyn.api.RequestHeader}
 */
proto.bosdyn.api.log_status.TerminateLogRequest.prototype.getHeader = function() {
  return /** @type{?proto.bosdyn.api.RequestHeader} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_header_pb.RequestHeader, 1));
};


/**
 * @param {?proto.bosdyn.api.RequestHeader|undefined} value
 * @return {!proto.bosdyn.api.log_status.TerminateLogRequest} returns this
*/
proto.bosdyn.api.log_status.TerminateLogRequest.prototype.setHeader = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.log_status.TerminateLogRequest} returns this
 */
proto.bosdyn.api.log_status.TerminateLogRequest.prototype.clearHeader = function() {
  return this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.log_status.TerminateLogRequest.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string id = 2;
 * @return {string}
 */
proto.bosdyn.api.log_status.TerminateLogRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.bosdyn.api.log_status.TerminateLogRequest} returns this
 */
proto.bosdyn.api.log_status.TerminateLogRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.log_status.TerminateLogResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.log_status.TerminateLogResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.log_status.TerminateLogResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.log_status.TerminateLogResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && bosdyn_api_header_pb.ResponseHeader.toObject(includeInstance, f),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0),
    logStatus: (f = msg.getLogStatus()) && proto.bosdyn.api.log_status.LogStatus.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.log_status.TerminateLogResponse}
 */
proto.bosdyn.api.log_status.TerminateLogResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.log_status.TerminateLogResponse;
  return proto.bosdyn.api.log_status.TerminateLogResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.log_status.TerminateLogResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.log_status.TerminateLogResponse}
 */
proto.bosdyn.api.log_status.TerminateLogResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new bosdyn_api_header_pb.ResponseHeader;
      reader.readMessage(value,bosdyn_api_header_pb.ResponseHeader.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 2:
      var value = /** @type {!proto.bosdyn.api.log_status.TerminateLogResponse.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 3:
      var value = new proto.bosdyn.api.log_status.LogStatus;
      reader.readMessage(value,proto.bosdyn.api.log_status.LogStatus.deserializeBinaryFromReader);
      msg.setLogStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.log_status.TerminateLogResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.log_status.TerminateLogResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.log_status.TerminateLogResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.log_status.TerminateLogResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      bosdyn_api_header_pb.ResponseHeader.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getLogStatus();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.bosdyn.api.log_status.LogStatus.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.bosdyn.api.log_status.TerminateLogResponse.Status = {
  STATUS_UNKNOWN: 0,
  STATUS_OK: 1,
  STATUS_ID_NOT_FOUND: 2
};

/**
 * optional bosdyn.api.ResponseHeader header = 1;
 * @return {?proto.bosdyn.api.ResponseHeader}
 */
proto.bosdyn.api.log_status.TerminateLogResponse.prototype.getHeader = function() {
  return /** @type{?proto.bosdyn.api.ResponseHeader} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_header_pb.ResponseHeader, 1));
};


/**
 * @param {?proto.bosdyn.api.ResponseHeader|undefined} value
 * @return {!proto.bosdyn.api.log_status.TerminateLogResponse} returns this
*/
proto.bosdyn.api.log_status.TerminateLogResponse.prototype.setHeader = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.log_status.TerminateLogResponse} returns this
 */
proto.bosdyn.api.log_status.TerminateLogResponse.prototype.clearHeader = function() {
  return this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.log_status.TerminateLogResponse.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Status status = 2;
 * @return {!proto.bosdyn.api.log_status.TerminateLogResponse.Status}
 */
proto.bosdyn.api.log_status.TerminateLogResponse.prototype.getStatus = function() {
  return /** @type {!proto.bosdyn.api.log_status.TerminateLogResponse.Status} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.bosdyn.api.log_status.TerminateLogResponse.Status} value
 * @return {!proto.bosdyn.api.log_status.TerminateLogResponse} returns this
 */
proto.bosdyn.api.log_status.TerminateLogResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional LogStatus log_status = 3;
 * @return {?proto.bosdyn.api.log_status.LogStatus}
 */
proto.bosdyn.api.log_status.TerminateLogResponse.prototype.getLogStatus = function() {
  return /** @type{?proto.bosdyn.api.log_status.LogStatus} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.log_status.LogStatus, 3));
};


/**
 * @param {?proto.bosdyn.api.log_status.LogStatus|undefined} value
 * @return {!proto.bosdyn.api.log_status.TerminateLogResponse} returns this
*/
proto.bosdyn.api.log_status.TerminateLogResponse.prototype.setLogStatus = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.log_status.TerminateLogResponse} returns this
 */
proto.bosdyn.api.log_status.TerminateLogResponse.prototype.clearLogStatus = function() {
  return this.setLogStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.log_status.TerminateLogResponse.prototype.hasLogStatus = function() {
  return jspb.Message.getField(this, 3) != null;
};


goog.object.extend(exports, proto.bosdyn.api.log_status);
