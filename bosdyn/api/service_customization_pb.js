// source: bosdyn/api/service_customization.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
goog.object.extend(proto, google_protobuf_wrappers_pb);
var bosdyn_api_image_geometry_pb = require('../../bosdyn/api/image_geometry_pb.js');
goog.object.extend(proto, bosdyn_api_image_geometry_pb);
var bosdyn_api_units_pb = require('../../bosdyn/api/units_pb.js');
goog.object.extend(proto, bosdyn_api_units_pb);
goog.exportSymbol('proto.bosdyn.api.BoolParam', null, global);
goog.exportSymbol('proto.bosdyn.api.BoolParam.Spec', null, global);
goog.exportSymbol('proto.bosdyn.api.CustomParam', null, global);
goog.exportSymbol('proto.bosdyn.api.CustomParam.Spec', null, global);
goog.exportSymbol('proto.bosdyn.api.CustomParam.Spec.SpecCase', null, global);
goog.exportSymbol('proto.bosdyn.api.CustomParam.ValueCase', null, global);
goog.exportSymbol('proto.bosdyn.api.CustomParamCollection', null, global);
goog.exportSymbol('proto.bosdyn.api.CustomParamError', null, global);
goog.exportSymbol('proto.bosdyn.api.CustomParamError.Status', null, global);
goog.exportSymbol('proto.bosdyn.api.DictParam', null, global);
goog.exportSymbol('proto.bosdyn.api.DictParam.ChildSpec', null, global);
goog.exportSymbol('proto.bosdyn.api.DictParam.Spec', null, global);
goog.exportSymbol('proto.bosdyn.api.DoubleParam', null, global);
goog.exportSymbol('proto.bosdyn.api.DoubleParam.Spec', null, global);
goog.exportSymbol('proto.bosdyn.api.Int64Param', null, global);
goog.exportSymbol('proto.bosdyn.api.Int64Param.Spec', null, global);
goog.exportSymbol('proto.bosdyn.api.ListParam', null, global);
goog.exportSymbol('proto.bosdyn.api.ListParam.Spec', null, global);
goog.exportSymbol('proto.bosdyn.api.OneOfParam', null, global);
goog.exportSymbol('proto.bosdyn.api.OneOfParam.ChildSpec', null, global);
goog.exportSymbol('proto.bosdyn.api.OneOfParam.Spec', null, global);
goog.exportSymbol('proto.bosdyn.api.RegionOfInterestParam', null, global);
goog.exportSymbol('proto.bosdyn.api.RegionOfInterestParam.ServiceAndSource', null, global);
goog.exportSymbol('proto.bosdyn.api.RegionOfInterestParam.Spec', null, global);
goog.exportSymbol('proto.bosdyn.api.StringParam', null, global);
goog.exportSymbol('proto.bosdyn.api.StringParam.Spec', null, global);
goog.exportSymbol('proto.bosdyn.api.UserInterfaceInfo', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.CustomParam = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.bosdyn.api.CustomParam.oneofGroups_);
};
goog.inherits(proto.bosdyn.api.CustomParam, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.CustomParam.displayName = 'proto.bosdyn.api.CustomParam';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.CustomParam.Spec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.bosdyn.api.CustomParam.Spec.oneofGroups_);
};
goog.inherits(proto.bosdyn.api.CustomParam.Spec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.CustomParam.Spec.displayName = 'proto.bosdyn.api.CustomParam.Spec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.UserInterfaceInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.UserInterfaceInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.UserInterfaceInfo.displayName = 'proto.bosdyn.api.UserInterfaceInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.CustomParamCollection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.CustomParamCollection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.CustomParamCollection.displayName = 'proto.bosdyn.api.CustomParamCollection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.DictParam = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.DictParam, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.DictParam.displayName = 'proto.bosdyn.api.DictParam';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.DictParam.ChildSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.DictParam.ChildSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.DictParam.ChildSpec.displayName = 'proto.bosdyn.api.DictParam.ChildSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.DictParam.Spec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.DictParam.Spec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.DictParam.Spec.displayName = 'proto.bosdyn.api.DictParam.Spec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.OneOfParam = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.OneOfParam, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.OneOfParam.displayName = 'proto.bosdyn.api.OneOfParam';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.OneOfParam.ChildSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.OneOfParam.ChildSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.OneOfParam.ChildSpec.displayName = 'proto.bosdyn.api.OneOfParam.ChildSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.OneOfParam.Spec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.OneOfParam.Spec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.OneOfParam.Spec.displayName = 'proto.bosdyn.api.OneOfParam.Spec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.ListParam = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bosdyn.api.ListParam.repeatedFields_, null);
};
goog.inherits(proto.bosdyn.api.ListParam, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.ListParam.displayName = 'proto.bosdyn.api.ListParam';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.ListParam.Spec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.ListParam.Spec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.ListParam.Spec.displayName = 'proto.bosdyn.api.ListParam.Spec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.Int64Param = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.Int64Param, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.Int64Param.displayName = 'proto.bosdyn.api.Int64Param';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.Int64Param.Spec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.Int64Param.Spec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.Int64Param.Spec.displayName = 'proto.bosdyn.api.Int64Param.Spec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.DoubleParam = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.DoubleParam, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.DoubleParam.displayName = 'proto.bosdyn.api.DoubleParam';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.DoubleParam.Spec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.DoubleParam.Spec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.DoubleParam.Spec.displayName = 'proto.bosdyn.api.DoubleParam.Spec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.StringParam = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.StringParam, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.StringParam.displayName = 'proto.bosdyn.api.StringParam';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.StringParam.Spec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bosdyn.api.StringParam.Spec.repeatedFields_, null);
};
goog.inherits(proto.bosdyn.api.StringParam.Spec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.StringParam.Spec.displayName = 'proto.bosdyn.api.StringParam.Spec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.BoolParam = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.BoolParam, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.BoolParam.displayName = 'proto.bosdyn.api.BoolParam';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.BoolParam.Spec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.BoolParam.Spec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.BoolParam.Spec.displayName = 'proto.bosdyn.api.BoolParam.Spec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.RegionOfInterestParam = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.RegionOfInterestParam, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.RegionOfInterestParam.displayName = 'proto.bosdyn.api.RegionOfInterestParam';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.RegionOfInterestParam.ServiceAndSource = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.RegionOfInterestParam.ServiceAndSource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.RegionOfInterestParam.ServiceAndSource.displayName = 'proto.bosdyn.api.RegionOfInterestParam.ServiceAndSource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.RegionOfInterestParam.Spec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.RegionOfInterestParam.Spec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.RegionOfInterestParam.Spec.displayName = 'proto.bosdyn.api.RegionOfInterestParam.Spec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.CustomParamError = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bosdyn.api.CustomParamError.repeatedFields_, null);
};
goog.inherits(proto.bosdyn.api.CustomParamError, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.CustomParamError.displayName = 'proto.bosdyn.api.CustomParamError';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.bosdyn.api.CustomParam.oneofGroups_ = [[1,2,3,4,5,6,7,8]];

/**
 * @enum {number}
 */
proto.bosdyn.api.CustomParam.ValueCase = {
  VALUE_NOT_SET: 0,
  DICT_VALUE: 1,
  LIST_VALUE: 2,
  INT_VALUE: 3,
  DOUBLE_VALUE: 4,
  STRING_VALUE: 5,
  ROI_VALUE: 6,
  BOOL_VALUE: 7,
  ONE_OF_VALUE: 8
};

/**
 * @return {proto.bosdyn.api.CustomParam.ValueCase}
 */
proto.bosdyn.api.CustomParam.prototype.getValueCase = function() {
  return /** @type {proto.bosdyn.api.CustomParam.ValueCase} */(jspb.Message.computeOneofCase(this, proto.bosdyn.api.CustomParam.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.CustomParam.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.CustomParam.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.CustomParam} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.CustomParam.toObject = function(includeInstance, msg) {
  var f, obj = {
    dictValue: (f = msg.getDictValue()) && proto.bosdyn.api.DictParam.toObject(includeInstance, f),
    listValue: (f = msg.getListValue()) && proto.bosdyn.api.ListParam.toObject(includeInstance, f),
    intValue: (f = msg.getIntValue()) && proto.bosdyn.api.Int64Param.toObject(includeInstance, f),
    doubleValue: (f = msg.getDoubleValue()) && proto.bosdyn.api.DoubleParam.toObject(includeInstance, f),
    stringValue: (f = msg.getStringValue()) && proto.bosdyn.api.StringParam.toObject(includeInstance, f),
    roiValue: (f = msg.getRoiValue()) && proto.bosdyn.api.RegionOfInterestParam.toObject(includeInstance, f),
    boolValue: (f = msg.getBoolValue()) && proto.bosdyn.api.BoolParam.toObject(includeInstance, f),
    oneOfValue: (f = msg.getOneOfValue()) && proto.bosdyn.api.OneOfParam.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.CustomParam}
 */
proto.bosdyn.api.CustomParam.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.CustomParam;
  return proto.bosdyn.api.CustomParam.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.CustomParam} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.CustomParam}
 */
proto.bosdyn.api.CustomParam.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.bosdyn.api.DictParam;
      reader.readMessage(value,proto.bosdyn.api.DictParam.deserializeBinaryFromReader);
      msg.setDictValue(value);
      break;
    case 2:
      var value = new proto.bosdyn.api.ListParam;
      reader.readMessage(value,proto.bosdyn.api.ListParam.deserializeBinaryFromReader);
      msg.setListValue(value);
      break;
    case 3:
      var value = new proto.bosdyn.api.Int64Param;
      reader.readMessage(value,proto.bosdyn.api.Int64Param.deserializeBinaryFromReader);
      msg.setIntValue(value);
      break;
    case 4:
      var value = new proto.bosdyn.api.DoubleParam;
      reader.readMessage(value,proto.bosdyn.api.DoubleParam.deserializeBinaryFromReader);
      msg.setDoubleValue(value);
      break;
    case 5:
      var value = new proto.bosdyn.api.StringParam;
      reader.readMessage(value,proto.bosdyn.api.StringParam.deserializeBinaryFromReader);
      msg.setStringValue(value);
      break;
    case 6:
      var value = new proto.bosdyn.api.RegionOfInterestParam;
      reader.readMessage(value,proto.bosdyn.api.RegionOfInterestParam.deserializeBinaryFromReader);
      msg.setRoiValue(value);
      break;
    case 7:
      var value = new proto.bosdyn.api.BoolParam;
      reader.readMessage(value,proto.bosdyn.api.BoolParam.deserializeBinaryFromReader);
      msg.setBoolValue(value);
      break;
    case 8:
      var value = new proto.bosdyn.api.OneOfParam;
      reader.readMessage(value,proto.bosdyn.api.OneOfParam.deserializeBinaryFromReader);
      msg.setOneOfValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.CustomParam.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.CustomParam.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.CustomParam} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.CustomParam.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDictValue();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.bosdyn.api.DictParam.serializeBinaryToWriter
    );
  }
  f = message.getListValue();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.bosdyn.api.ListParam.serializeBinaryToWriter
    );
  }
  f = message.getIntValue();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.bosdyn.api.Int64Param.serializeBinaryToWriter
    );
  }
  f = message.getDoubleValue();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.bosdyn.api.DoubleParam.serializeBinaryToWriter
    );
  }
  f = message.getStringValue();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.bosdyn.api.StringParam.serializeBinaryToWriter
    );
  }
  f = message.getRoiValue();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.bosdyn.api.RegionOfInterestParam.serializeBinaryToWriter
    );
  }
  f = message.getBoolValue();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.bosdyn.api.BoolParam.serializeBinaryToWriter
    );
  }
  f = message.getOneOfValue();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.bosdyn.api.OneOfParam.serializeBinaryToWriter
    );
  }
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.bosdyn.api.CustomParam.Spec.oneofGroups_ = [[1,2,3,4,5,6,7,12]];

/**
 * @enum {number}
 */
proto.bosdyn.api.CustomParam.Spec.SpecCase = {
  SPEC_NOT_SET: 0,
  DICT_SPEC: 1,
  LIST_SPEC: 2,
  INT_SPEC: 3,
  DOUBLE_SPEC: 4,
  STRING_SPEC: 5,
  ROI_SPEC: 6,
  BOOL_SPEC: 7,
  ONE_OF_SPEC: 12
};

/**
 * @return {proto.bosdyn.api.CustomParam.Spec.SpecCase}
 */
proto.bosdyn.api.CustomParam.Spec.prototype.getSpecCase = function() {
  return /** @type {proto.bosdyn.api.CustomParam.Spec.SpecCase} */(jspb.Message.computeOneofCase(this, proto.bosdyn.api.CustomParam.Spec.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.CustomParam.Spec.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.CustomParam.Spec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.CustomParam.Spec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.CustomParam.Spec.toObject = function(includeInstance, msg) {
  var f, obj = {
    dictSpec: (f = msg.getDictSpec()) && proto.bosdyn.api.DictParam.Spec.toObject(includeInstance, f),
    listSpec: (f = msg.getListSpec()) && proto.bosdyn.api.ListParam.Spec.toObject(includeInstance, f),
    intSpec: (f = msg.getIntSpec()) && proto.bosdyn.api.Int64Param.Spec.toObject(includeInstance, f),
    doubleSpec: (f = msg.getDoubleSpec()) && proto.bosdyn.api.DoubleParam.Spec.toObject(includeInstance, f),
    stringSpec: (f = msg.getStringSpec()) && proto.bosdyn.api.StringParam.Spec.toObject(includeInstance, f),
    roiSpec: (f = msg.getRoiSpec()) && proto.bosdyn.api.RegionOfInterestParam.Spec.toObject(includeInstance, f),
    boolSpec: (f = msg.getBoolSpec()) && proto.bosdyn.api.BoolParam.Spec.toObject(includeInstance, f),
    oneOfSpec: (f = msg.getOneOfSpec()) && proto.bosdyn.api.OneOfParam.Spec.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.CustomParam.Spec}
 */
proto.bosdyn.api.CustomParam.Spec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.CustomParam.Spec;
  return proto.bosdyn.api.CustomParam.Spec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.CustomParam.Spec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.CustomParam.Spec}
 */
proto.bosdyn.api.CustomParam.Spec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.bosdyn.api.DictParam.Spec;
      reader.readMessage(value,proto.bosdyn.api.DictParam.Spec.deserializeBinaryFromReader);
      msg.setDictSpec(value);
      break;
    case 2:
      var value = new proto.bosdyn.api.ListParam.Spec;
      reader.readMessage(value,proto.bosdyn.api.ListParam.Spec.deserializeBinaryFromReader);
      msg.setListSpec(value);
      break;
    case 3:
      var value = new proto.bosdyn.api.Int64Param.Spec;
      reader.readMessage(value,proto.bosdyn.api.Int64Param.Spec.deserializeBinaryFromReader);
      msg.setIntSpec(value);
      break;
    case 4:
      var value = new proto.bosdyn.api.DoubleParam.Spec;
      reader.readMessage(value,proto.bosdyn.api.DoubleParam.Spec.deserializeBinaryFromReader);
      msg.setDoubleSpec(value);
      break;
    case 5:
      var value = new proto.bosdyn.api.StringParam.Spec;
      reader.readMessage(value,proto.bosdyn.api.StringParam.Spec.deserializeBinaryFromReader);
      msg.setStringSpec(value);
      break;
    case 6:
      var value = new proto.bosdyn.api.RegionOfInterestParam.Spec;
      reader.readMessage(value,proto.bosdyn.api.RegionOfInterestParam.Spec.deserializeBinaryFromReader);
      msg.setRoiSpec(value);
      break;
    case 7:
      var value = new proto.bosdyn.api.BoolParam.Spec;
      reader.readMessage(value,proto.bosdyn.api.BoolParam.Spec.deserializeBinaryFromReader);
      msg.setBoolSpec(value);
      break;
    case 12:
      var value = new proto.bosdyn.api.OneOfParam.Spec;
      reader.readMessage(value,proto.bosdyn.api.OneOfParam.Spec.deserializeBinaryFromReader);
      msg.setOneOfSpec(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.CustomParam.Spec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.CustomParam.Spec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.CustomParam.Spec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.CustomParam.Spec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDictSpec();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.bosdyn.api.DictParam.Spec.serializeBinaryToWriter
    );
  }
  f = message.getListSpec();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.bosdyn.api.ListParam.Spec.serializeBinaryToWriter
    );
  }
  f = message.getIntSpec();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.bosdyn.api.Int64Param.Spec.serializeBinaryToWriter
    );
  }
  f = message.getDoubleSpec();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.bosdyn.api.DoubleParam.Spec.serializeBinaryToWriter
    );
  }
  f = message.getStringSpec();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.bosdyn.api.StringParam.Spec.serializeBinaryToWriter
    );
  }
  f = message.getRoiSpec();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.bosdyn.api.RegionOfInterestParam.Spec.serializeBinaryToWriter
    );
  }
  f = message.getBoolSpec();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.bosdyn.api.BoolParam.Spec.serializeBinaryToWriter
    );
  }
  f = message.getOneOfSpec();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.bosdyn.api.OneOfParam.Spec.serializeBinaryToWriter
    );
  }
};


/**
 * optional DictParam.Spec dict_spec = 1;
 * @return {?proto.bosdyn.api.DictParam.Spec}
 */
proto.bosdyn.api.CustomParam.Spec.prototype.getDictSpec = function() {
  return /** @type{?proto.bosdyn.api.DictParam.Spec} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.DictParam.Spec, 1));
};


/**
 * @param {?proto.bosdyn.api.DictParam.Spec|undefined} value
 * @return {!proto.bosdyn.api.CustomParam.Spec} returns this
*/
proto.bosdyn.api.CustomParam.Spec.prototype.setDictSpec = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.bosdyn.api.CustomParam.Spec.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.CustomParam.Spec} returns this
 */
proto.bosdyn.api.CustomParam.Spec.prototype.clearDictSpec = function() {
  return this.setDictSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.CustomParam.Spec.prototype.hasDictSpec = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ListParam.Spec list_spec = 2;
 * @return {?proto.bosdyn.api.ListParam.Spec}
 */
proto.bosdyn.api.CustomParam.Spec.prototype.getListSpec = function() {
  return /** @type{?proto.bosdyn.api.ListParam.Spec} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.ListParam.Spec, 2));
};


/**
 * @param {?proto.bosdyn.api.ListParam.Spec|undefined} value
 * @return {!proto.bosdyn.api.CustomParam.Spec} returns this
*/
proto.bosdyn.api.CustomParam.Spec.prototype.setListSpec = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.bosdyn.api.CustomParam.Spec.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.CustomParam.Spec} returns this
 */
proto.bosdyn.api.CustomParam.Spec.prototype.clearListSpec = function() {
  return this.setListSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.CustomParam.Spec.prototype.hasListSpec = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Int64Param.Spec int_spec = 3;
 * @return {?proto.bosdyn.api.Int64Param.Spec}
 */
proto.bosdyn.api.CustomParam.Spec.prototype.getIntSpec = function() {
  return /** @type{?proto.bosdyn.api.Int64Param.Spec} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.Int64Param.Spec, 3));
};


/**
 * @param {?proto.bosdyn.api.Int64Param.Spec|undefined} value
 * @return {!proto.bosdyn.api.CustomParam.Spec} returns this
*/
proto.bosdyn.api.CustomParam.Spec.prototype.setIntSpec = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.bosdyn.api.CustomParam.Spec.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.CustomParam.Spec} returns this
 */
proto.bosdyn.api.CustomParam.Spec.prototype.clearIntSpec = function() {
  return this.setIntSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.CustomParam.Spec.prototype.hasIntSpec = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional DoubleParam.Spec double_spec = 4;
 * @return {?proto.bosdyn.api.DoubleParam.Spec}
 */
proto.bosdyn.api.CustomParam.Spec.prototype.getDoubleSpec = function() {
  return /** @type{?proto.bosdyn.api.DoubleParam.Spec} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.DoubleParam.Spec, 4));
};


/**
 * @param {?proto.bosdyn.api.DoubleParam.Spec|undefined} value
 * @return {!proto.bosdyn.api.CustomParam.Spec} returns this
*/
proto.bosdyn.api.CustomParam.Spec.prototype.setDoubleSpec = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.bosdyn.api.CustomParam.Spec.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.CustomParam.Spec} returns this
 */
proto.bosdyn.api.CustomParam.Spec.prototype.clearDoubleSpec = function() {
  return this.setDoubleSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.CustomParam.Spec.prototype.hasDoubleSpec = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional StringParam.Spec string_spec = 5;
 * @return {?proto.bosdyn.api.StringParam.Spec}
 */
proto.bosdyn.api.CustomParam.Spec.prototype.getStringSpec = function() {
  return /** @type{?proto.bosdyn.api.StringParam.Spec} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.StringParam.Spec, 5));
};


/**
 * @param {?proto.bosdyn.api.StringParam.Spec|undefined} value
 * @return {!proto.bosdyn.api.CustomParam.Spec} returns this
*/
proto.bosdyn.api.CustomParam.Spec.prototype.setStringSpec = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.bosdyn.api.CustomParam.Spec.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.CustomParam.Spec} returns this
 */
proto.bosdyn.api.CustomParam.Spec.prototype.clearStringSpec = function() {
  return this.setStringSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.CustomParam.Spec.prototype.hasStringSpec = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional RegionOfInterestParam.Spec roi_spec = 6;
 * @return {?proto.bosdyn.api.RegionOfInterestParam.Spec}
 */
proto.bosdyn.api.CustomParam.Spec.prototype.getRoiSpec = function() {
  return /** @type{?proto.bosdyn.api.RegionOfInterestParam.Spec} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.RegionOfInterestParam.Spec, 6));
};


/**
 * @param {?proto.bosdyn.api.RegionOfInterestParam.Spec|undefined} value
 * @return {!proto.bosdyn.api.CustomParam.Spec} returns this
*/
proto.bosdyn.api.CustomParam.Spec.prototype.setRoiSpec = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.bosdyn.api.CustomParam.Spec.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.CustomParam.Spec} returns this
 */
proto.bosdyn.api.CustomParam.Spec.prototype.clearRoiSpec = function() {
  return this.setRoiSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.CustomParam.Spec.prototype.hasRoiSpec = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional BoolParam.Spec bool_spec = 7;
 * @return {?proto.bosdyn.api.BoolParam.Spec}
 */
proto.bosdyn.api.CustomParam.Spec.prototype.getBoolSpec = function() {
  return /** @type{?proto.bosdyn.api.BoolParam.Spec} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.BoolParam.Spec, 7));
};


/**
 * @param {?proto.bosdyn.api.BoolParam.Spec|undefined} value
 * @return {!proto.bosdyn.api.CustomParam.Spec} returns this
*/
proto.bosdyn.api.CustomParam.Spec.prototype.setBoolSpec = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.bosdyn.api.CustomParam.Spec.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.CustomParam.Spec} returns this
 */
proto.bosdyn.api.CustomParam.Spec.prototype.clearBoolSpec = function() {
  return this.setBoolSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.CustomParam.Spec.prototype.hasBoolSpec = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional OneOfParam.Spec one_of_spec = 12;
 * @return {?proto.bosdyn.api.OneOfParam.Spec}
 */
proto.bosdyn.api.CustomParam.Spec.prototype.getOneOfSpec = function() {
  return /** @type{?proto.bosdyn.api.OneOfParam.Spec} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.OneOfParam.Spec, 12));
};


/**
 * @param {?proto.bosdyn.api.OneOfParam.Spec|undefined} value
 * @return {!proto.bosdyn.api.CustomParam.Spec} returns this
*/
proto.bosdyn.api.CustomParam.Spec.prototype.setOneOfSpec = function(value) {
  return jspb.Message.setOneofWrapperField(this, 12, proto.bosdyn.api.CustomParam.Spec.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.CustomParam.Spec} returns this
 */
proto.bosdyn.api.CustomParam.Spec.prototype.clearOneOfSpec = function() {
  return this.setOneOfSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.CustomParam.Spec.prototype.hasOneOfSpec = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional DictParam dict_value = 1;
 * @return {?proto.bosdyn.api.DictParam}
 */
proto.bosdyn.api.CustomParam.prototype.getDictValue = function() {
  return /** @type{?proto.bosdyn.api.DictParam} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.DictParam, 1));
};


/**
 * @param {?proto.bosdyn.api.DictParam|undefined} value
 * @return {!proto.bosdyn.api.CustomParam} returns this
*/
proto.bosdyn.api.CustomParam.prototype.setDictValue = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.bosdyn.api.CustomParam.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.CustomParam} returns this
 */
proto.bosdyn.api.CustomParam.prototype.clearDictValue = function() {
  return this.setDictValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.CustomParam.prototype.hasDictValue = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ListParam list_value = 2;
 * @return {?proto.bosdyn.api.ListParam}
 */
proto.bosdyn.api.CustomParam.prototype.getListValue = function() {
  return /** @type{?proto.bosdyn.api.ListParam} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.ListParam, 2));
};


/**
 * @param {?proto.bosdyn.api.ListParam|undefined} value
 * @return {!proto.bosdyn.api.CustomParam} returns this
*/
proto.bosdyn.api.CustomParam.prototype.setListValue = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.bosdyn.api.CustomParam.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.CustomParam} returns this
 */
proto.bosdyn.api.CustomParam.prototype.clearListValue = function() {
  return this.setListValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.CustomParam.prototype.hasListValue = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Int64Param int_value = 3;
 * @return {?proto.bosdyn.api.Int64Param}
 */
proto.bosdyn.api.CustomParam.prototype.getIntValue = function() {
  return /** @type{?proto.bosdyn.api.Int64Param} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.Int64Param, 3));
};


/**
 * @param {?proto.bosdyn.api.Int64Param|undefined} value
 * @return {!proto.bosdyn.api.CustomParam} returns this
*/
proto.bosdyn.api.CustomParam.prototype.setIntValue = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.bosdyn.api.CustomParam.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.CustomParam} returns this
 */
proto.bosdyn.api.CustomParam.prototype.clearIntValue = function() {
  return this.setIntValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.CustomParam.prototype.hasIntValue = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional DoubleParam double_value = 4;
 * @return {?proto.bosdyn.api.DoubleParam}
 */
proto.bosdyn.api.CustomParam.prototype.getDoubleValue = function() {
  return /** @type{?proto.bosdyn.api.DoubleParam} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.DoubleParam, 4));
};


/**
 * @param {?proto.bosdyn.api.DoubleParam|undefined} value
 * @return {!proto.bosdyn.api.CustomParam} returns this
*/
proto.bosdyn.api.CustomParam.prototype.setDoubleValue = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.bosdyn.api.CustomParam.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.CustomParam} returns this
 */
proto.bosdyn.api.CustomParam.prototype.clearDoubleValue = function() {
  return this.setDoubleValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.CustomParam.prototype.hasDoubleValue = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional StringParam string_value = 5;
 * @return {?proto.bosdyn.api.StringParam}
 */
proto.bosdyn.api.CustomParam.prototype.getStringValue = function() {
  return /** @type{?proto.bosdyn.api.StringParam} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.StringParam, 5));
};


/**
 * @param {?proto.bosdyn.api.StringParam|undefined} value
 * @return {!proto.bosdyn.api.CustomParam} returns this
*/
proto.bosdyn.api.CustomParam.prototype.setStringValue = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.bosdyn.api.CustomParam.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.CustomParam} returns this
 */
proto.bosdyn.api.CustomParam.prototype.clearStringValue = function() {
  return this.setStringValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.CustomParam.prototype.hasStringValue = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional RegionOfInterestParam roi_value = 6;
 * @return {?proto.bosdyn.api.RegionOfInterestParam}
 */
proto.bosdyn.api.CustomParam.prototype.getRoiValue = function() {
  return /** @type{?proto.bosdyn.api.RegionOfInterestParam} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.RegionOfInterestParam, 6));
};


/**
 * @param {?proto.bosdyn.api.RegionOfInterestParam|undefined} value
 * @return {!proto.bosdyn.api.CustomParam} returns this
*/
proto.bosdyn.api.CustomParam.prototype.setRoiValue = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.bosdyn.api.CustomParam.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.CustomParam} returns this
 */
proto.bosdyn.api.CustomParam.prototype.clearRoiValue = function() {
  return this.setRoiValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.CustomParam.prototype.hasRoiValue = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional BoolParam bool_value = 7;
 * @return {?proto.bosdyn.api.BoolParam}
 */
proto.bosdyn.api.CustomParam.prototype.getBoolValue = function() {
  return /** @type{?proto.bosdyn.api.BoolParam} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.BoolParam, 7));
};


/**
 * @param {?proto.bosdyn.api.BoolParam|undefined} value
 * @return {!proto.bosdyn.api.CustomParam} returns this
*/
proto.bosdyn.api.CustomParam.prototype.setBoolValue = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.bosdyn.api.CustomParam.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.CustomParam} returns this
 */
proto.bosdyn.api.CustomParam.prototype.clearBoolValue = function() {
  return this.setBoolValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.CustomParam.prototype.hasBoolValue = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional OneOfParam one_of_value = 8;
 * @return {?proto.bosdyn.api.OneOfParam}
 */
proto.bosdyn.api.CustomParam.prototype.getOneOfValue = function() {
  return /** @type{?proto.bosdyn.api.OneOfParam} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.OneOfParam, 8));
};


/**
 * @param {?proto.bosdyn.api.OneOfParam|undefined} value
 * @return {!proto.bosdyn.api.CustomParam} returns this
*/
proto.bosdyn.api.CustomParam.prototype.setOneOfValue = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.bosdyn.api.CustomParam.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.CustomParam} returns this
 */
proto.bosdyn.api.CustomParam.prototype.clearOneOfValue = function() {
  return this.setOneOfValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.CustomParam.prototype.hasOneOfValue = function() {
  return jspb.Message.getField(this, 8) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.UserInterfaceInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.UserInterfaceInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.UserInterfaceInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.UserInterfaceInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    displayName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    displayOrder: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.UserInterfaceInfo}
 */
proto.bosdyn.api.UserInterfaceInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.UserInterfaceInfo;
  return proto.bosdyn.api.UserInterfaceInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.UserInterfaceInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.UserInterfaceInfo}
 */
proto.bosdyn.api.UserInterfaceInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplayName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDisplayOrder(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.UserInterfaceInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.UserInterfaceInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.UserInterfaceInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.UserInterfaceInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDisplayName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDisplayOrder();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional string display_name = 1;
 * @return {string}
 */
proto.bosdyn.api.UserInterfaceInfo.prototype.getDisplayName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bosdyn.api.UserInterfaceInfo} returns this
 */
proto.bosdyn.api.UserInterfaceInfo.prototype.setDisplayName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.bosdyn.api.UserInterfaceInfo.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.bosdyn.api.UserInterfaceInfo} returns this
 */
proto.bosdyn.api.UserInterfaceInfo.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 display_order = 3;
 * @return {number}
 */
proto.bosdyn.api.UserInterfaceInfo.prototype.getDisplayOrder = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.bosdyn.api.UserInterfaceInfo} returns this
 */
proto.bosdyn.api.UserInterfaceInfo.prototype.setDisplayOrder = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.CustomParamCollection.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.CustomParamCollection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.CustomParamCollection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.CustomParamCollection.toObject = function(includeInstance, msg) {
  var f, obj = {
    specs: (f = msg.getSpecs()) && proto.bosdyn.api.DictParam.Spec.toObject(includeInstance, f),
    values: (f = msg.getValues()) && proto.bosdyn.api.DictParam.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.CustomParamCollection}
 */
proto.bosdyn.api.CustomParamCollection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.CustomParamCollection;
  return proto.bosdyn.api.CustomParamCollection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.CustomParamCollection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.CustomParamCollection}
 */
proto.bosdyn.api.CustomParamCollection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.bosdyn.api.DictParam.Spec;
      reader.readMessage(value,proto.bosdyn.api.DictParam.Spec.deserializeBinaryFromReader);
      msg.setSpecs(value);
      break;
    case 2:
      var value = new proto.bosdyn.api.DictParam;
      reader.readMessage(value,proto.bosdyn.api.DictParam.deserializeBinaryFromReader);
      msg.setValues(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.CustomParamCollection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.CustomParamCollection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.CustomParamCollection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.CustomParamCollection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSpecs();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.bosdyn.api.DictParam.Spec.serializeBinaryToWriter
    );
  }
  f = message.getValues();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.bosdyn.api.DictParam.serializeBinaryToWriter
    );
  }
};


/**
 * optional DictParam.Spec specs = 1;
 * @return {?proto.bosdyn.api.DictParam.Spec}
 */
proto.bosdyn.api.CustomParamCollection.prototype.getSpecs = function() {
  return /** @type{?proto.bosdyn.api.DictParam.Spec} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.DictParam.Spec, 1));
};


/**
 * @param {?proto.bosdyn.api.DictParam.Spec|undefined} value
 * @return {!proto.bosdyn.api.CustomParamCollection} returns this
*/
proto.bosdyn.api.CustomParamCollection.prototype.setSpecs = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.CustomParamCollection} returns this
 */
proto.bosdyn.api.CustomParamCollection.prototype.clearSpecs = function() {
  return this.setSpecs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.CustomParamCollection.prototype.hasSpecs = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional DictParam values = 2;
 * @return {?proto.bosdyn.api.DictParam}
 */
proto.bosdyn.api.CustomParamCollection.prototype.getValues = function() {
  return /** @type{?proto.bosdyn.api.DictParam} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.DictParam, 2));
};


/**
 * @param {?proto.bosdyn.api.DictParam|undefined} value
 * @return {!proto.bosdyn.api.CustomParamCollection} returns this
*/
proto.bosdyn.api.CustomParamCollection.prototype.setValues = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.CustomParamCollection} returns this
 */
proto.bosdyn.api.CustomParamCollection.prototype.clearValues = function() {
  return this.setValues(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.CustomParamCollection.prototype.hasValues = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.DictParam.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.DictParam.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.DictParam} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.DictParam.toObject = function(includeInstance, msg) {
  var f, obj = {
    valuesMap: (f = msg.getValuesMap()) ? f.toObject(includeInstance, proto.bosdyn.api.CustomParam.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.DictParam}
 */
proto.bosdyn.api.DictParam.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.DictParam;
  return proto.bosdyn.api.DictParam.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.DictParam} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.DictParam}
 */
proto.bosdyn.api.DictParam.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getValuesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.bosdyn.api.CustomParam.deserializeBinaryFromReader, "", new proto.bosdyn.api.CustomParam());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.DictParam.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.DictParam.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.DictParam} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.DictParam.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValuesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.bosdyn.api.CustomParam.serializeBinaryToWriter);
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.DictParam.ChildSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.DictParam.ChildSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.DictParam.ChildSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.DictParam.ChildSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    spec: (f = msg.getSpec()) && proto.bosdyn.api.CustomParam.Spec.toObject(includeInstance, f),
    uiInfo: (f = msg.getUiInfo()) && proto.bosdyn.api.UserInterfaceInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.DictParam.ChildSpec}
 */
proto.bosdyn.api.DictParam.ChildSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.DictParam.ChildSpec;
  return proto.bosdyn.api.DictParam.ChildSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.DictParam.ChildSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.DictParam.ChildSpec}
 */
proto.bosdyn.api.DictParam.ChildSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.bosdyn.api.CustomParam.Spec;
      reader.readMessage(value,proto.bosdyn.api.CustomParam.Spec.deserializeBinaryFromReader);
      msg.setSpec(value);
      break;
    case 2:
      var value = new proto.bosdyn.api.UserInterfaceInfo;
      reader.readMessage(value,proto.bosdyn.api.UserInterfaceInfo.deserializeBinaryFromReader);
      msg.setUiInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.DictParam.ChildSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.DictParam.ChildSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.DictParam.ChildSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.DictParam.ChildSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSpec();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.bosdyn.api.CustomParam.Spec.serializeBinaryToWriter
    );
  }
  f = message.getUiInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.bosdyn.api.UserInterfaceInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional CustomParam.Spec spec = 1;
 * @return {?proto.bosdyn.api.CustomParam.Spec}
 */
proto.bosdyn.api.DictParam.ChildSpec.prototype.getSpec = function() {
  return /** @type{?proto.bosdyn.api.CustomParam.Spec} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.CustomParam.Spec, 1));
};


/**
 * @param {?proto.bosdyn.api.CustomParam.Spec|undefined} value
 * @return {!proto.bosdyn.api.DictParam.ChildSpec} returns this
*/
proto.bosdyn.api.DictParam.ChildSpec.prototype.setSpec = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.DictParam.ChildSpec} returns this
 */
proto.bosdyn.api.DictParam.ChildSpec.prototype.clearSpec = function() {
  return this.setSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.DictParam.ChildSpec.prototype.hasSpec = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional UserInterfaceInfo ui_info = 2;
 * @return {?proto.bosdyn.api.UserInterfaceInfo}
 */
proto.bosdyn.api.DictParam.ChildSpec.prototype.getUiInfo = function() {
  return /** @type{?proto.bosdyn.api.UserInterfaceInfo} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.UserInterfaceInfo, 2));
};


/**
 * @param {?proto.bosdyn.api.UserInterfaceInfo|undefined} value
 * @return {!proto.bosdyn.api.DictParam.ChildSpec} returns this
*/
proto.bosdyn.api.DictParam.ChildSpec.prototype.setUiInfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.DictParam.ChildSpec} returns this
 */
proto.bosdyn.api.DictParam.ChildSpec.prototype.clearUiInfo = function() {
  return this.setUiInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.DictParam.ChildSpec.prototype.hasUiInfo = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.DictParam.Spec.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.DictParam.Spec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.DictParam.Spec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.DictParam.Spec.toObject = function(includeInstance, msg) {
  var f, obj = {
    specsMap: (f = msg.getSpecsMap()) ? f.toObject(includeInstance, proto.bosdyn.api.DictParam.ChildSpec.toObject) : [],
    isHiddenByDefault: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.DictParam.Spec}
 */
proto.bosdyn.api.DictParam.Spec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.DictParam.Spec;
  return proto.bosdyn.api.DictParam.Spec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.DictParam.Spec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.DictParam.Spec}
 */
proto.bosdyn.api.DictParam.Spec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = msg.getSpecsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.bosdyn.api.DictParam.ChildSpec.deserializeBinaryFromReader, "", new proto.bosdyn.api.DictParam.ChildSpec());
         });
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsHiddenByDefault(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.DictParam.Spec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.DictParam.Spec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.DictParam.Spec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.DictParam.Spec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSpecsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.bosdyn.api.DictParam.ChildSpec.serializeBinaryToWriter);
  }
  f = message.getIsHiddenByDefault();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * map<string, ChildSpec> specs = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.bosdyn.api.DictParam.ChildSpec>}
 */
proto.bosdyn.api.DictParam.Spec.prototype.getSpecsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.bosdyn.api.DictParam.ChildSpec>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      proto.bosdyn.api.DictParam.ChildSpec));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.bosdyn.api.DictParam.Spec} returns this
 */
proto.bosdyn.api.DictParam.Spec.prototype.clearSpecsMap = function() {
  this.getSpecsMap().clear();
  return this;};


/**
 * optional bool is_hidden_by_default = 3;
 * @return {boolean}
 */
proto.bosdyn.api.DictParam.Spec.prototype.getIsHiddenByDefault = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.bosdyn.api.DictParam.Spec} returns this
 */
proto.bosdyn.api.DictParam.Spec.prototype.setIsHiddenByDefault = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * map<string, CustomParam> values = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.bosdyn.api.CustomParam>}
 */
proto.bosdyn.api.DictParam.prototype.getValuesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.bosdyn.api.CustomParam>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.bosdyn.api.CustomParam));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.bosdyn.api.DictParam} returns this
 */
proto.bosdyn.api.DictParam.prototype.clearValuesMap = function() {
  this.getValuesMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.OneOfParam.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.OneOfParam.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.OneOfParam} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.OneOfParam.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, ""),
    valuesMap: (f = msg.getValuesMap()) ? f.toObject(includeInstance, proto.bosdyn.api.DictParam.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.OneOfParam}
 */
proto.bosdyn.api.OneOfParam.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.OneOfParam;
  return proto.bosdyn.api.OneOfParam.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.OneOfParam} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.OneOfParam}
 */
proto.bosdyn.api.OneOfParam.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 3:
      var value = msg.getValuesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.bosdyn.api.DictParam.deserializeBinaryFromReader, "", new proto.bosdyn.api.DictParam());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.OneOfParam.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.OneOfParam.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.OneOfParam} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.OneOfParam.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValuesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.bosdyn.api.DictParam.serializeBinaryToWriter);
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.OneOfParam.ChildSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.OneOfParam.ChildSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.OneOfParam.ChildSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.OneOfParam.ChildSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    spec: (f = msg.getSpec()) && proto.bosdyn.api.DictParam.Spec.toObject(includeInstance, f),
    uiInfo: (f = msg.getUiInfo()) && proto.bosdyn.api.UserInterfaceInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.OneOfParam.ChildSpec}
 */
proto.bosdyn.api.OneOfParam.ChildSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.OneOfParam.ChildSpec;
  return proto.bosdyn.api.OneOfParam.ChildSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.OneOfParam.ChildSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.OneOfParam.ChildSpec}
 */
proto.bosdyn.api.OneOfParam.ChildSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.bosdyn.api.DictParam.Spec;
      reader.readMessage(value,proto.bosdyn.api.DictParam.Spec.deserializeBinaryFromReader);
      msg.setSpec(value);
      break;
    case 2:
      var value = new proto.bosdyn.api.UserInterfaceInfo;
      reader.readMessage(value,proto.bosdyn.api.UserInterfaceInfo.deserializeBinaryFromReader);
      msg.setUiInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.OneOfParam.ChildSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.OneOfParam.ChildSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.OneOfParam.ChildSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.OneOfParam.ChildSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSpec();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.bosdyn.api.DictParam.Spec.serializeBinaryToWriter
    );
  }
  f = message.getUiInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.bosdyn.api.UserInterfaceInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional DictParam.Spec spec = 1;
 * @return {?proto.bosdyn.api.DictParam.Spec}
 */
proto.bosdyn.api.OneOfParam.ChildSpec.prototype.getSpec = function() {
  return /** @type{?proto.bosdyn.api.DictParam.Spec} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.DictParam.Spec, 1));
};


/**
 * @param {?proto.bosdyn.api.DictParam.Spec|undefined} value
 * @return {!proto.bosdyn.api.OneOfParam.ChildSpec} returns this
*/
proto.bosdyn.api.OneOfParam.ChildSpec.prototype.setSpec = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.OneOfParam.ChildSpec} returns this
 */
proto.bosdyn.api.OneOfParam.ChildSpec.prototype.clearSpec = function() {
  return this.setSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.OneOfParam.ChildSpec.prototype.hasSpec = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional UserInterfaceInfo ui_info = 2;
 * @return {?proto.bosdyn.api.UserInterfaceInfo}
 */
proto.bosdyn.api.OneOfParam.ChildSpec.prototype.getUiInfo = function() {
  return /** @type{?proto.bosdyn.api.UserInterfaceInfo} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.UserInterfaceInfo, 2));
};


/**
 * @param {?proto.bosdyn.api.UserInterfaceInfo|undefined} value
 * @return {!proto.bosdyn.api.OneOfParam.ChildSpec} returns this
*/
proto.bosdyn.api.OneOfParam.ChildSpec.prototype.setUiInfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.OneOfParam.ChildSpec} returns this
 */
proto.bosdyn.api.OneOfParam.ChildSpec.prototype.clearUiInfo = function() {
  return this.setUiInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.OneOfParam.ChildSpec.prototype.hasUiInfo = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.OneOfParam.Spec.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.OneOfParam.Spec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.OneOfParam.Spec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.OneOfParam.Spec.toObject = function(includeInstance, msg) {
  var f, obj = {
    specsMap: (f = msg.getSpecsMap()) ? f.toObject(includeInstance, proto.bosdyn.api.OneOfParam.ChildSpec.toObject) : [],
    defaultKey: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.OneOfParam.Spec}
 */
proto.bosdyn.api.OneOfParam.Spec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.OneOfParam.Spec;
  return proto.bosdyn.api.OneOfParam.Spec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.OneOfParam.Spec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.OneOfParam.Spec}
 */
proto.bosdyn.api.OneOfParam.Spec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getSpecsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.bosdyn.api.OneOfParam.ChildSpec.deserializeBinaryFromReader, "", new proto.bosdyn.api.OneOfParam.ChildSpec());
         });
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDefaultKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.OneOfParam.Spec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.OneOfParam.Spec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.OneOfParam.Spec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.OneOfParam.Spec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSpecsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.bosdyn.api.OneOfParam.ChildSpec.serializeBinaryToWriter);
  }
  f = message.getDefaultKey();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * map<string, ChildSpec> specs = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.bosdyn.api.OneOfParam.ChildSpec>}
 */
proto.bosdyn.api.OneOfParam.Spec.prototype.getSpecsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.bosdyn.api.OneOfParam.ChildSpec>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.bosdyn.api.OneOfParam.ChildSpec));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.bosdyn.api.OneOfParam.Spec} returns this
 */
proto.bosdyn.api.OneOfParam.Spec.prototype.clearSpecsMap = function() {
  this.getSpecsMap().clear();
  return this;};


/**
 * optional string default_key = 2;
 * @return {string}
 */
proto.bosdyn.api.OneOfParam.Spec.prototype.getDefaultKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.bosdyn.api.OneOfParam.Spec} returns this
 */
proto.bosdyn.api.OneOfParam.Spec.prototype.setDefaultKey = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.bosdyn.api.OneOfParam.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bosdyn.api.OneOfParam} returns this
 */
proto.bosdyn.api.OneOfParam.prototype.setKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * map<string, DictParam> values = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.bosdyn.api.DictParam>}
 */
proto.bosdyn.api.OneOfParam.prototype.getValuesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.bosdyn.api.DictParam>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      proto.bosdyn.api.DictParam));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.bosdyn.api.OneOfParam} returns this
 */
proto.bosdyn.api.OneOfParam.prototype.clearValuesMap = function() {
  this.getValuesMap().clear();
  return this;};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bosdyn.api.ListParam.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.ListParam.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.ListParam.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.ListParam} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.ListParam.toObject = function(includeInstance, msg) {
  var f, obj = {
    valuesList: jspb.Message.toObjectList(msg.getValuesList(),
    proto.bosdyn.api.CustomParam.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.ListParam}
 */
proto.bosdyn.api.ListParam.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.ListParam;
  return proto.bosdyn.api.ListParam.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.ListParam} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.ListParam}
 */
proto.bosdyn.api.ListParam.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.bosdyn.api.CustomParam;
      reader.readMessage(value,proto.bosdyn.api.CustomParam.deserializeBinaryFromReader);
      msg.addValues(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.ListParam.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.ListParam.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.ListParam} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.ListParam.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValuesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.bosdyn.api.CustomParam.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.ListParam.Spec.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.ListParam.Spec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.ListParam.Spec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.ListParam.Spec.toObject = function(includeInstance, msg) {
  var f, obj = {
    elementSpec: (f = msg.getElementSpec()) && proto.bosdyn.api.CustomParam.Spec.toObject(includeInstance, f),
    minNumberOfValues: (f = msg.getMinNumberOfValues()) && google_protobuf_wrappers_pb.Int64Value.toObject(includeInstance, f),
    maxNumberOfValues: (f = msg.getMaxNumberOfValues()) && google_protobuf_wrappers_pb.Int64Value.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.ListParam.Spec}
 */
proto.bosdyn.api.ListParam.Spec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.ListParam.Spec;
  return proto.bosdyn.api.ListParam.Spec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.ListParam.Spec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.ListParam.Spec}
 */
proto.bosdyn.api.ListParam.Spec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.bosdyn.api.CustomParam.Spec;
      reader.readMessage(value,proto.bosdyn.api.CustomParam.Spec.deserializeBinaryFromReader);
      msg.setElementSpec(value);
      break;
    case 3:
      var value = new google_protobuf_wrappers_pb.Int64Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int64Value.deserializeBinaryFromReader);
      msg.setMinNumberOfValues(value);
      break;
    case 4:
      var value = new google_protobuf_wrappers_pb.Int64Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int64Value.deserializeBinaryFromReader);
      msg.setMaxNumberOfValues(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.ListParam.Spec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.ListParam.Spec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.ListParam.Spec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.ListParam.Spec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getElementSpec();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.bosdyn.api.CustomParam.Spec.serializeBinaryToWriter
    );
  }
  f = message.getMinNumberOfValues();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_wrappers_pb.Int64Value.serializeBinaryToWriter
    );
  }
  f = message.getMaxNumberOfValues();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_wrappers_pb.Int64Value.serializeBinaryToWriter
    );
  }
};


/**
 * optional CustomParam.Spec element_spec = 1;
 * @return {?proto.bosdyn.api.CustomParam.Spec}
 */
proto.bosdyn.api.ListParam.Spec.prototype.getElementSpec = function() {
  return /** @type{?proto.bosdyn.api.CustomParam.Spec} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.CustomParam.Spec, 1));
};


/**
 * @param {?proto.bosdyn.api.CustomParam.Spec|undefined} value
 * @return {!proto.bosdyn.api.ListParam.Spec} returns this
*/
proto.bosdyn.api.ListParam.Spec.prototype.setElementSpec = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.ListParam.Spec} returns this
 */
proto.bosdyn.api.ListParam.Spec.prototype.clearElementSpec = function() {
  return this.setElementSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.ListParam.Spec.prototype.hasElementSpec = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Int64Value min_number_of_values = 3;
 * @return {?proto.google.protobuf.Int64Value}
 */
proto.bosdyn.api.ListParam.Spec.prototype.getMinNumberOfValues = function() {
  return /** @type{?proto.google.protobuf.Int64Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int64Value, 3));
};


/**
 * @param {?proto.google.protobuf.Int64Value|undefined} value
 * @return {!proto.bosdyn.api.ListParam.Spec} returns this
*/
proto.bosdyn.api.ListParam.Spec.prototype.setMinNumberOfValues = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.ListParam.Spec} returns this
 */
proto.bosdyn.api.ListParam.Spec.prototype.clearMinNumberOfValues = function() {
  return this.setMinNumberOfValues(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.ListParam.Spec.prototype.hasMinNumberOfValues = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional google.protobuf.Int64Value max_number_of_values = 4;
 * @return {?proto.google.protobuf.Int64Value}
 */
proto.bosdyn.api.ListParam.Spec.prototype.getMaxNumberOfValues = function() {
  return /** @type{?proto.google.protobuf.Int64Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int64Value, 4));
};


/**
 * @param {?proto.google.protobuf.Int64Value|undefined} value
 * @return {!proto.bosdyn.api.ListParam.Spec} returns this
*/
proto.bosdyn.api.ListParam.Spec.prototype.setMaxNumberOfValues = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.ListParam.Spec} returns this
 */
proto.bosdyn.api.ListParam.Spec.prototype.clearMaxNumberOfValues = function() {
  return this.setMaxNumberOfValues(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.ListParam.Spec.prototype.hasMaxNumberOfValues = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated CustomParam values = 1;
 * @return {!Array<!proto.bosdyn.api.CustomParam>}
 */
proto.bosdyn.api.ListParam.prototype.getValuesList = function() {
  return /** @type{!Array<!proto.bosdyn.api.CustomParam>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.bosdyn.api.CustomParam, 1));
};


/**
 * @param {!Array<!proto.bosdyn.api.CustomParam>} value
 * @return {!proto.bosdyn.api.ListParam} returns this
*/
proto.bosdyn.api.ListParam.prototype.setValuesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.bosdyn.api.CustomParam=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bosdyn.api.CustomParam}
 */
proto.bosdyn.api.ListParam.prototype.addValues = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.bosdyn.api.CustomParam, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bosdyn.api.ListParam} returns this
 */
proto.bosdyn.api.ListParam.prototype.clearValuesList = function() {
  return this.setValuesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.Int64Param.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.Int64Param.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.Int64Param} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.Int64Param.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.Int64Param}
 */
proto.bosdyn.api.Int64Param.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.Int64Param;
  return proto.bosdyn.api.Int64Param.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.Int64Param} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.Int64Param}
 */
proto.bosdyn.api.Int64Param.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.Int64Param.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.Int64Param.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.Int64Param} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.Int64Param.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.Int64Param.Spec.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.Int64Param.Spec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.Int64Param.Spec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.Int64Param.Spec.toObject = function(includeInstance, msg) {
  var f, obj = {
    defaultValue: (f = msg.getDefaultValue()) && google_protobuf_wrappers_pb.Int64Value.toObject(includeInstance, f),
    units: (f = msg.getUnits()) && bosdyn_api_units_pb.Units.toObject(includeInstance, f),
    minValue: (f = msg.getMinValue()) && google_protobuf_wrappers_pb.Int64Value.toObject(includeInstance, f),
    maxValue: (f = msg.getMaxValue()) && google_protobuf_wrappers_pb.Int64Value.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.Int64Param.Spec}
 */
proto.bosdyn.api.Int64Param.Spec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.Int64Param.Spec;
  return proto.bosdyn.api.Int64Param.Spec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.Int64Param.Spec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.Int64Param.Spec}
 */
proto.bosdyn.api.Int64Param.Spec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new google_protobuf_wrappers_pb.Int64Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int64Value.deserializeBinaryFromReader);
      msg.setDefaultValue(value);
      break;
    case 3:
      var value = new bosdyn_api_units_pb.Units;
      reader.readMessage(value,bosdyn_api_units_pb.Units.deserializeBinaryFromReader);
      msg.setUnits(value);
      break;
    case 4:
      var value = new google_protobuf_wrappers_pb.Int64Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int64Value.deserializeBinaryFromReader);
      msg.setMinValue(value);
      break;
    case 5:
      var value = new google_protobuf_wrappers_pb.Int64Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int64Value.deserializeBinaryFromReader);
      msg.setMaxValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.Int64Param.Spec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.Int64Param.Spec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.Int64Param.Spec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.Int64Param.Spec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDefaultValue();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_wrappers_pb.Int64Value.serializeBinaryToWriter
    );
  }
  f = message.getUnits();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      bosdyn_api_units_pb.Units.serializeBinaryToWriter
    );
  }
  f = message.getMinValue();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_wrappers_pb.Int64Value.serializeBinaryToWriter
    );
  }
  f = message.getMaxValue();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_wrappers_pb.Int64Value.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Int64Value default_value = 2;
 * @return {?proto.google.protobuf.Int64Value}
 */
proto.bosdyn.api.Int64Param.Spec.prototype.getDefaultValue = function() {
  return /** @type{?proto.google.protobuf.Int64Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int64Value, 2));
};


/**
 * @param {?proto.google.protobuf.Int64Value|undefined} value
 * @return {!proto.bosdyn.api.Int64Param.Spec} returns this
*/
proto.bosdyn.api.Int64Param.Spec.prototype.setDefaultValue = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.Int64Param.Spec} returns this
 */
proto.bosdyn.api.Int64Param.Spec.prototype.clearDefaultValue = function() {
  return this.setDefaultValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.Int64Param.Spec.prototype.hasDefaultValue = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Units units = 3;
 * @return {?proto.bosdyn.api.Units}
 */
proto.bosdyn.api.Int64Param.Spec.prototype.getUnits = function() {
  return /** @type{?proto.bosdyn.api.Units} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_units_pb.Units, 3));
};


/**
 * @param {?proto.bosdyn.api.Units|undefined} value
 * @return {!proto.bosdyn.api.Int64Param.Spec} returns this
*/
proto.bosdyn.api.Int64Param.Spec.prototype.setUnits = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.Int64Param.Spec} returns this
 */
proto.bosdyn.api.Int64Param.Spec.prototype.clearUnits = function() {
  return this.setUnits(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.Int64Param.Spec.prototype.hasUnits = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional google.protobuf.Int64Value min_value = 4;
 * @return {?proto.google.protobuf.Int64Value}
 */
proto.bosdyn.api.Int64Param.Spec.prototype.getMinValue = function() {
  return /** @type{?proto.google.protobuf.Int64Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int64Value, 4));
};


/**
 * @param {?proto.google.protobuf.Int64Value|undefined} value
 * @return {!proto.bosdyn.api.Int64Param.Spec} returns this
*/
proto.bosdyn.api.Int64Param.Spec.prototype.setMinValue = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.Int64Param.Spec} returns this
 */
proto.bosdyn.api.Int64Param.Spec.prototype.clearMinValue = function() {
  return this.setMinValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.Int64Param.Spec.prototype.hasMinValue = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional google.protobuf.Int64Value max_value = 5;
 * @return {?proto.google.protobuf.Int64Value}
 */
proto.bosdyn.api.Int64Param.Spec.prototype.getMaxValue = function() {
  return /** @type{?proto.google.protobuf.Int64Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int64Value, 5));
};


/**
 * @param {?proto.google.protobuf.Int64Value|undefined} value
 * @return {!proto.bosdyn.api.Int64Param.Spec} returns this
*/
proto.bosdyn.api.Int64Param.Spec.prototype.setMaxValue = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.Int64Param.Spec} returns this
 */
proto.bosdyn.api.Int64Param.Spec.prototype.clearMaxValue = function() {
  return this.setMaxValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.Int64Param.Spec.prototype.hasMaxValue = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional int64 value = 1;
 * @return {number}
 */
proto.bosdyn.api.Int64Param.prototype.getValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.bosdyn.api.Int64Param} returns this
 */
proto.bosdyn.api.Int64Param.prototype.setValue = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.DoubleParam.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.DoubleParam.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.DoubleParam} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.DoubleParam.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.DoubleParam}
 */
proto.bosdyn.api.DoubleParam.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.DoubleParam;
  return proto.bosdyn.api.DoubleParam.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.DoubleParam} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.DoubleParam}
 */
proto.bosdyn.api.DoubleParam.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.DoubleParam.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.DoubleParam.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.DoubleParam} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.DoubleParam.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.DoubleParam.Spec.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.DoubleParam.Spec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.DoubleParam.Spec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.DoubleParam.Spec.toObject = function(includeInstance, msg) {
  var f, obj = {
    defaultValue: (f = msg.getDefaultValue()) && google_protobuf_wrappers_pb.DoubleValue.toObject(includeInstance, f),
    units: (f = msg.getUnits()) && bosdyn_api_units_pb.Units.toObject(includeInstance, f),
    minValue: (f = msg.getMinValue()) && google_protobuf_wrappers_pb.DoubleValue.toObject(includeInstance, f),
    maxValue: (f = msg.getMaxValue()) && google_protobuf_wrappers_pb.DoubleValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.DoubleParam.Spec}
 */
proto.bosdyn.api.DoubleParam.Spec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.DoubleParam.Spec;
  return proto.bosdyn.api.DoubleParam.Spec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.DoubleParam.Spec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.DoubleParam.Spec}
 */
proto.bosdyn.api.DoubleParam.Spec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new google_protobuf_wrappers_pb.DoubleValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.DoubleValue.deserializeBinaryFromReader);
      msg.setDefaultValue(value);
      break;
    case 3:
      var value = new bosdyn_api_units_pb.Units;
      reader.readMessage(value,bosdyn_api_units_pb.Units.deserializeBinaryFromReader);
      msg.setUnits(value);
      break;
    case 4:
      var value = new google_protobuf_wrappers_pb.DoubleValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.DoubleValue.deserializeBinaryFromReader);
      msg.setMinValue(value);
      break;
    case 5:
      var value = new google_protobuf_wrappers_pb.DoubleValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.DoubleValue.deserializeBinaryFromReader);
      msg.setMaxValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.DoubleParam.Spec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.DoubleParam.Spec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.DoubleParam.Spec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.DoubleParam.Spec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDefaultValue();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_wrappers_pb.DoubleValue.serializeBinaryToWriter
    );
  }
  f = message.getUnits();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      bosdyn_api_units_pb.Units.serializeBinaryToWriter
    );
  }
  f = message.getMinValue();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_wrappers_pb.DoubleValue.serializeBinaryToWriter
    );
  }
  f = message.getMaxValue();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_wrappers_pb.DoubleValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.DoubleValue default_value = 2;
 * @return {?proto.google.protobuf.DoubleValue}
 */
proto.bosdyn.api.DoubleParam.Spec.prototype.getDefaultValue = function() {
  return /** @type{?proto.google.protobuf.DoubleValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.DoubleValue, 2));
};


/**
 * @param {?proto.google.protobuf.DoubleValue|undefined} value
 * @return {!proto.bosdyn.api.DoubleParam.Spec} returns this
*/
proto.bosdyn.api.DoubleParam.Spec.prototype.setDefaultValue = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.DoubleParam.Spec} returns this
 */
proto.bosdyn.api.DoubleParam.Spec.prototype.clearDefaultValue = function() {
  return this.setDefaultValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.DoubleParam.Spec.prototype.hasDefaultValue = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Units units = 3;
 * @return {?proto.bosdyn.api.Units}
 */
proto.bosdyn.api.DoubleParam.Spec.prototype.getUnits = function() {
  return /** @type{?proto.bosdyn.api.Units} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_units_pb.Units, 3));
};


/**
 * @param {?proto.bosdyn.api.Units|undefined} value
 * @return {!proto.bosdyn.api.DoubleParam.Spec} returns this
*/
proto.bosdyn.api.DoubleParam.Spec.prototype.setUnits = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.DoubleParam.Spec} returns this
 */
proto.bosdyn.api.DoubleParam.Spec.prototype.clearUnits = function() {
  return this.setUnits(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.DoubleParam.Spec.prototype.hasUnits = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional google.protobuf.DoubleValue min_value = 4;
 * @return {?proto.google.protobuf.DoubleValue}
 */
proto.bosdyn.api.DoubleParam.Spec.prototype.getMinValue = function() {
  return /** @type{?proto.google.protobuf.DoubleValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.DoubleValue, 4));
};


/**
 * @param {?proto.google.protobuf.DoubleValue|undefined} value
 * @return {!proto.bosdyn.api.DoubleParam.Spec} returns this
*/
proto.bosdyn.api.DoubleParam.Spec.prototype.setMinValue = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.DoubleParam.Spec} returns this
 */
proto.bosdyn.api.DoubleParam.Spec.prototype.clearMinValue = function() {
  return this.setMinValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.DoubleParam.Spec.prototype.hasMinValue = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional google.protobuf.DoubleValue max_value = 5;
 * @return {?proto.google.protobuf.DoubleValue}
 */
proto.bosdyn.api.DoubleParam.Spec.prototype.getMaxValue = function() {
  return /** @type{?proto.google.protobuf.DoubleValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.DoubleValue, 5));
};


/**
 * @param {?proto.google.protobuf.DoubleValue|undefined} value
 * @return {!proto.bosdyn.api.DoubleParam.Spec} returns this
*/
proto.bosdyn.api.DoubleParam.Spec.prototype.setMaxValue = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.DoubleParam.Spec} returns this
 */
proto.bosdyn.api.DoubleParam.Spec.prototype.clearMaxValue = function() {
  return this.setMaxValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.DoubleParam.Spec.prototype.hasMaxValue = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional double value = 1;
 * @return {number}
 */
proto.bosdyn.api.DoubleParam.prototype.getValue = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.bosdyn.api.DoubleParam} returns this
 */
proto.bosdyn.api.DoubleParam.prototype.setValue = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.StringParam.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.StringParam.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.StringParam} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.StringParam.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.StringParam}
 */
proto.bosdyn.api.StringParam.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.StringParam;
  return proto.bosdyn.api.StringParam.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.StringParam} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.StringParam}
 */
proto.bosdyn.api.StringParam.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.StringParam.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.StringParam.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.StringParam} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.StringParam.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bosdyn.api.StringParam.Spec.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.StringParam.Spec.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.StringParam.Spec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.StringParam.Spec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.StringParam.Spec.toObject = function(includeInstance, msg) {
  var f, obj = {
    optionsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    editable: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    defaultValue: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.StringParam.Spec}
 */
proto.bosdyn.api.StringParam.Spec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.StringParam.Spec;
  return proto.bosdyn.api.StringParam.Spec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.StringParam.Spec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.StringParam.Spec}
 */
proto.bosdyn.api.StringParam.Spec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addOptions(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEditable(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDefaultValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.StringParam.Spec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.StringParam.Spec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.StringParam.Spec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.StringParam.Spec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOptionsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getEditable();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getDefaultValue();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * repeated string options = 1;
 * @return {!Array<string>}
 */
proto.bosdyn.api.StringParam.Spec.prototype.getOptionsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.bosdyn.api.StringParam.Spec} returns this
 */
proto.bosdyn.api.StringParam.Spec.prototype.setOptionsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.bosdyn.api.StringParam.Spec} returns this
 */
proto.bosdyn.api.StringParam.Spec.prototype.addOptions = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bosdyn.api.StringParam.Spec} returns this
 */
proto.bosdyn.api.StringParam.Spec.prototype.clearOptionsList = function() {
  return this.setOptionsList([]);
};


/**
 * optional bool editable = 2;
 * @return {boolean}
 */
proto.bosdyn.api.StringParam.Spec.prototype.getEditable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.bosdyn.api.StringParam.Spec} returns this
 */
proto.bosdyn.api.StringParam.Spec.prototype.setEditable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional string default_value = 3;
 * @return {string}
 */
proto.bosdyn.api.StringParam.Spec.prototype.getDefaultValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.bosdyn.api.StringParam.Spec} returns this
 */
proto.bosdyn.api.StringParam.Spec.prototype.setDefaultValue = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string value = 1;
 * @return {string}
 */
proto.bosdyn.api.StringParam.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bosdyn.api.StringParam} returns this
 */
proto.bosdyn.api.StringParam.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.BoolParam.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.BoolParam.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.BoolParam} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.BoolParam.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.BoolParam}
 */
proto.bosdyn.api.BoolParam.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.BoolParam;
  return proto.bosdyn.api.BoolParam.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.BoolParam} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.BoolParam}
 */
proto.bosdyn.api.BoolParam.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.BoolParam.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.BoolParam.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.BoolParam} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.BoolParam.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.BoolParam.Spec.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.BoolParam.Spec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.BoolParam.Spec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.BoolParam.Spec.toObject = function(includeInstance, msg) {
  var f, obj = {
    defaultValue: (f = msg.getDefaultValue()) && google_protobuf_wrappers_pb.BoolValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.BoolParam.Spec}
 */
proto.bosdyn.api.BoolParam.Spec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.BoolParam.Spec;
  return proto.bosdyn.api.BoolParam.Spec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.BoolParam.Spec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.BoolParam.Spec}
 */
proto.bosdyn.api.BoolParam.Spec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_wrappers_pb.BoolValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.BoolValue.deserializeBinaryFromReader);
      msg.setDefaultValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.BoolParam.Spec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.BoolParam.Spec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.BoolParam.Spec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.BoolParam.Spec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDefaultValue();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_wrappers_pb.BoolValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.BoolValue default_value = 1;
 * @return {?proto.google.protobuf.BoolValue}
 */
proto.bosdyn.api.BoolParam.Spec.prototype.getDefaultValue = function() {
  return /** @type{?proto.google.protobuf.BoolValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.BoolValue, 1));
};


/**
 * @param {?proto.google.protobuf.BoolValue|undefined} value
 * @return {!proto.bosdyn.api.BoolParam.Spec} returns this
*/
proto.bosdyn.api.BoolParam.Spec.prototype.setDefaultValue = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.BoolParam.Spec} returns this
 */
proto.bosdyn.api.BoolParam.Spec.prototype.clearDefaultValue = function() {
  return this.setDefaultValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.BoolParam.Spec.prototype.hasDefaultValue = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool value = 1;
 * @return {boolean}
 */
proto.bosdyn.api.BoolParam.prototype.getValue = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.bosdyn.api.BoolParam} returns this
 */
proto.bosdyn.api.BoolParam.prototype.setValue = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.RegionOfInterestParam.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.RegionOfInterestParam.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.RegionOfInterestParam} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.RegionOfInterestParam.toObject = function(includeInstance, msg) {
  var f, obj = {
    area: (f = msg.getArea()) && bosdyn_api_image_geometry_pb.AreaI.toObject(includeInstance, f),
    serviceAndSource: (f = msg.getServiceAndSource()) && proto.bosdyn.api.RegionOfInterestParam.ServiceAndSource.toObject(includeInstance, f),
    imageCols: jspb.Message.getFieldWithDefault(msg, 3, 0),
    imageRows: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.RegionOfInterestParam}
 */
proto.bosdyn.api.RegionOfInterestParam.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.RegionOfInterestParam;
  return proto.bosdyn.api.RegionOfInterestParam.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.RegionOfInterestParam} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.RegionOfInterestParam}
 */
proto.bosdyn.api.RegionOfInterestParam.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new bosdyn_api_image_geometry_pb.AreaI;
      reader.readMessage(value,bosdyn_api_image_geometry_pb.AreaI.deserializeBinaryFromReader);
      msg.setArea(value);
      break;
    case 2:
      var value = new proto.bosdyn.api.RegionOfInterestParam.ServiceAndSource;
      reader.readMessage(value,proto.bosdyn.api.RegionOfInterestParam.ServiceAndSource.deserializeBinaryFromReader);
      msg.setServiceAndSource(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setImageCols(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setImageRows(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.RegionOfInterestParam.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.RegionOfInterestParam.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.RegionOfInterestParam} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.RegionOfInterestParam.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getArea();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      bosdyn_api_image_geometry_pb.AreaI.serializeBinaryToWriter
    );
  }
  f = message.getServiceAndSource();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.bosdyn.api.RegionOfInterestParam.ServiceAndSource.serializeBinaryToWriter
    );
  }
  f = message.getImageCols();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getImageRows();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.RegionOfInterestParam.ServiceAndSource.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.RegionOfInterestParam.ServiceAndSource.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.RegionOfInterestParam.ServiceAndSource} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.RegionOfInterestParam.ServiceAndSource.toObject = function(includeInstance, msg) {
  var f, obj = {
    service: jspb.Message.getFieldWithDefault(msg, 1, ""),
    source: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.RegionOfInterestParam.ServiceAndSource}
 */
proto.bosdyn.api.RegionOfInterestParam.ServiceAndSource.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.RegionOfInterestParam.ServiceAndSource;
  return proto.bosdyn.api.RegionOfInterestParam.ServiceAndSource.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.RegionOfInterestParam.ServiceAndSource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.RegionOfInterestParam.ServiceAndSource}
 */
proto.bosdyn.api.RegionOfInterestParam.ServiceAndSource.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setService(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.RegionOfInterestParam.ServiceAndSource.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.RegionOfInterestParam.ServiceAndSource.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.RegionOfInterestParam.ServiceAndSource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.RegionOfInterestParam.ServiceAndSource.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getService();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string service = 1;
 * @return {string}
 */
proto.bosdyn.api.RegionOfInterestParam.ServiceAndSource.prototype.getService = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bosdyn.api.RegionOfInterestParam.ServiceAndSource} returns this
 */
proto.bosdyn.api.RegionOfInterestParam.ServiceAndSource.prototype.setService = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string source = 2;
 * @return {string}
 */
proto.bosdyn.api.RegionOfInterestParam.ServiceAndSource.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.bosdyn.api.RegionOfInterestParam.ServiceAndSource} returns this
 */
proto.bosdyn.api.RegionOfInterestParam.ServiceAndSource.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.RegionOfInterestParam.Spec.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.RegionOfInterestParam.Spec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.RegionOfInterestParam.Spec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.RegionOfInterestParam.Spec.toObject = function(includeInstance, msg) {
  var f, obj = {
    serviceAndSource: (f = msg.getServiceAndSource()) && proto.bosdyn.api.RegionOfInterestParam.ServiceAndSource.toObject(includeInstance, f),
    defaultArea: (f = msg.getDefaultArea()) && bosdyn_api_image_geometry_pb.AreaI.toObject(includeInstance, f),
    allowsRectangle: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.RegionOfInterestParam.Spec}
 */
proto.bosdyn.api.RegionOfInterestParam.Spec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.RegionOfInterestParam.Spec;
  return proto.bosdyn.api.RegionOfInterestParam.Spec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.RegionOfInterestParam.Spec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.RegionOfInterestParam.Spec}
 */
proto.bosdyn.api.RegionOfInterestParam.Spec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.bosdyn.api.RegionOfInterestParam.ServiceAndSource;
      reader.readMessage(value,proto.bosdyn.api.RegionOfInterestParam.ServiceAndSource.deserializeBinaryFromReader);
      msg.setServiceAndSource(value);
      break;
    case 2:
      var value = new bosdyn_api_image_geometry_pb.AreaI;
      reader.readMessage(value,bosdyn_api_image_geometry_pb.AreaI.deserializeBinaryFromReader);
      msg.setDefaultArea(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllowsRectangle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.RegionOfInterestParam.Spec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.RegionOfInterestParam.Spec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.RegionOfInterestParam.Spec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.RegionOfInterestParam.Spec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getServiceAndSource();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.bosdyn.api.RegionOfInterestParam.ServiceAndSource.serializeBinaryToWriter
    );
  }
  f = message.getDefaultArea();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      bosdyn_api_image_geometry_pb.AreaI.serializeBinaryToWriter
    );
  }
  f = message.getAllowsRectangle();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional ServiceAndSource service_and_source = 1;
 * @return {?proto.bosdyn.api.RegionOfInterestParam.ServiceAndSource}
 */
proto.bosdyn.api.RegionOfInterestParam.Spec.prototype.getServiceAndSource = function() {
  return /** @type{?proto.bosdyn.api.RegionOfInterestParam.ServiceAndSource} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.RegionOfInterestParam.ServiceAndSource, 1));
};


/**
 * @param {?proto.bosdyn.api.RegionOfInterestParam.ServiceAndSource|undefined} value
 * @return {!proto.bosdyn.api.RegionOfInterestParam.Spec} returns this
*/
proto.bosdyn.api.RegionOfInterestParam.Spec.prototype.setServiceAndSource = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.RegionOfInterestParam.Spec} returns this
 */
proto.bosdyn.api.RegionOfInterestParam.Spec.prototype.clearServiceAndSource = function() {
  return this.setServiceAndSource(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.RegionOfInterestParam.Spec.prototype.hasServiceAndSource = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional AreaI default_area = 2;
 * @return {?proto.bosdyn.api.AreaI}
 */
proto.bosdyn.api.RegionOfInterestParam.Spec.prototype.getDefaultArea = function() {
  return /** @type{?proto.bosdyn.api.AreaI} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_image_geometry_pb.AreaI, 2));
};


/**
 * @param {?proto.bosdyn.api.AreaI|undefined} value
 * @return {!proto.bosdyn.api.RegionOfInterestParam.Spec} returns this
*/
proto.bosdyn.api.RegionOfInterestParam.Spec.prototype.setDefaultArea = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.RegionOfInterestParam.Spec} returns this
 */
proto.bosdyn.api.RegionOfInterestParam.Spec.prototype.clearDefaultArea = function() {
  return this.setDefaultArea(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.RegionOfInterestParam.Spec.prototype.hasDefaultArea = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool allows_rectangle = 3;
 * @return {boolean}
 */
proto.bosdyn.api.RegionOfInterestParam.Spec.prototype.getAllowsRectangle = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.bosdyn.api.RegionOfInterestParam.Spec} returns this
 */
proto.bosdyn.api.RegionOfInterestParam.Spec.prototype.setAllowsRectangle = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional AreaI area = 1;
 * @return {?proto.bosdyn.api.AreaI}
 */
proto.bosdyn.api.RegionOfInterestParam.prototype.getArea = function() {
  return /** @type{?proto.bosdyn.api.AreaI} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_image_geometry_pb.AreaI, 1));
};


/**
 * @param {?proto.bosdyn.api.AreaI|undefined} value
 * @return {!proto.bosdyn.api.RegionOfInterestParam} returns this
*/
proto.bosdyn.api.RegionOfInterestParam.prototype.setArea = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.RegionOfInterestParam} returns this
 */
proto.bosdyn.api.RegionOfInterestParam.prototype.clearArea = function() {
  return this.setArea(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.RegionOfInterestParam.prototype.hasArea = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ServiceAndSource service_and_source = 2;
 * @return {?proto.bosdyn.api.RegionOfInterestParam.ServiceAndSource}
 */
proto.bosdyn.api.RegionOfInterestParam.prototype.getServiceAndSource = function() {
  return /** @type{?proto.bosdyn.api.RegionOfInterestParam.ServiceAndSource} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.RegionOfInterestParam.ServiceAndSource, 2));
};


/**
 * @param {?proto.bosdyn.api.RegionOfInterestParam.ServiceAndSource|undefined} value
 * @return {!proto.bosdyn.api.RegionOfInterestParam} returns this
*/
proto.bosdyn.api.RegionOfInterestParam.prototype.setServiceAndSource = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.RegionOfInterestParam} returns this
 */
proto.bosdyn.api.RegionOfInterestParam.prototype.clearServiceAndSource = function() {
  return this.setServiceAndSource(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.RegionOfInterestParam.prototype.hasServiceAndSource = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 image_cols = 3;
 * @return {number}
 */
proto.bosdyn.api.RegionOfInterestParam.prototype.getImageCols = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.bosdyn.api.RegionOfInterestParam} returns this
 */
proto.bosdyn.api.RegionOfInterestParam.prototype.setImageCols = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 image_rows = 4;
 * @return {number}
 */
proto.bosdyn.api.RegionOfInterestParam.prototype.getImageRows = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.bosdyn.api.RegionOfInterestParam} returns this
 */
proto.bosdyn.api.RegionOfInterestParam.prototype.setImageRows = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bosdyn.api.CustomParamError.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.CustomParamError.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.CustomParamError.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.CustomParamError} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.CustomParamError.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 4, 0),
    errorMessagesList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.CustomParamError}
 */
proto.bosdyn.api.CustomParamError.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.CustomParamError;
  return proto.bosdyn.api.CustomParamError.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.CustomParamError} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.CustomParamError}
 */
proto.bosdyn.api.CustomParamError.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 4:
      var value = /** @type {!proto.bosdyn.api.CustomParamError.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addErrorMessages(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.CustomParamError.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.CustomParamError.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.CustomParamError} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.CustomParamError.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getErrorMessagesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.bosdyn.api.CustomParamError.Status = {
  STATUS_UNKNOWN: 0,
  STATUS_OK: 1,
  STATUS_INVALID_COMBINATION: 2,
  STATUS_UNSUPPORTED_PARAMETER: 3,
  STATUS_INVALID_VALUE: 4,
  STATUS_INVALID_TYPE: 5
};

/**
 * optional Status status = 4;
 * @return {!proto.bosdyn.api.CustomParamError.Status}
 */
proto.bosdyn.api.CustomParamError.prototype.getStatus = function() {
  return /** @type {!proto.bosdyn.api.CustomParamError.Status} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.bosdyn.api.CustomParamError.Status} value
 * @return {!proto.bosdyn.api.CustomParamError} returns this
 */
proto.bosdyn.api.CustomParamError.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * repeated string error_messages = 5;
 * @return {!Array<string>}
 */
proto.bosdyn.api.CustomParamError.prototype.getErrorMessagesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.bosdyn.api.CustomParamError} returns this
 */
proto.bosdyn.api.CustomParamError.prototype.setErrorMessagesList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.bosdyn.api.CustomParamError} returns this
 */
proto.bosdyn.api.CustomParamError.prototype.addErrorMessages = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bosdyn.api.CustomParamError} returns this
 */
proto.bosdyn.api.CustomParamError.prototype.clearErrorMessagesList = function() {
  return this.setErrorMessagesList([]);
};


goog.object.extend(exports, proto.bosdyn.api);
