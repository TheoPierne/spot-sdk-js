// source: bosdyn/api/manipulation_api.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var bosdyn_api_geometry_pb = require('../../bosdyn/api/geometry_pb.js');
goog.object.extend(proto, bosdyn_api_geometry_pb);
var bosdyn_api_header_pb = require('../../bosdyn/api/header_pb.js');
goog.object.extend(proto, bosdyn_api_header_pb);
var bosdyn_api_image_pb = require('../../bosdyn/api/image_pb.js');
goog.object.extend(proto, bosdyn_api_image_pb);
var bosdyn_api_lease_pb = require('../../bosdyn/api/lease_pb.js');
goog.object.extend(proto, bosdyn_api_lease_pb);
var bosdyn_api_robot_state_pb = require('../../bosdyn/api/robot_state_pb.js');
goog.object.extend(proto, bosdyn_api_robot_state_pb);
var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
goog.object.extend(proto, google_protobuf_wrappers_pb);
goog.exportSymbol('proto.bosdyn.api.AllowableOrientation', null, global);
goog.exportSymbol('proto.bosdyn.api.AllowableOrientation.ConstraintCase', null, global);
goog.exportSymbol('proto.bosdyn.api.ApiGraspOverride', null, global);
goog.exportSymbol('proto.bosdyn.api.ApiGraspOverride.Override', null, global);
goog.exportSymbol('proto.bosdyn.api.ApiGraspOverrideRequest', null, global);
goog.exportSymbol('proto.bosdyn.api.ApiGraspOverrideResponse', null, global);
goog.exportSymbol('proto.bosdyn.api.ApiGraspedCarryStateOverride', null, global);
goog.exportSymbol('proto.bosdyn.api.GraspParams', null, global);
goog.exportSymbol('proto.bosdyn.api.GraspPositionConstraint', null, global);
goog.exportSymbol('proto.bosdyn.api.ManipulationApiFeedbackRequest', null, global);
goog.exportSymbol('proto.bosdyn.api.ManipulationApiFeedbackResponse', null, global);
goog.exportSymbol('proto.bosdyn.api.ManipulationApiRequest', null, global);
goog.exportSymbol('proto.bosdyn.api.ManipulationApiRequest.ManipulationCmdCase', null, global);
goog.exportSymbol('proto.bosdyn.api.ManipulationApiResponse', null, global);
goog.exportSymbol('proto.bosdyn.api.ManipulationCameraSource', null, global);
goog.exportSymbol('proto.bosdyn.api.ManipulationFeedbackState', null, global);
goog.exportSymbol('proto.bosdyn.api.PickObject', null, global);
goog.exportSymbol('proto.bosdyn.api.PickObjectExecutePlan', null, global);
goog.exportSymbol('proto.bosdyn.api.PickObjectInImage', null, global);
goog.exportSymbol('proto.bosdyn.api.PickObjectRayInWorld', null, global);
goog.exportSymbol('proto.bosdyn.api.RotationWithTolerance', null, global);
goog.exportSymbol('proto.bosdyn.api.SqueezeGrasp', null, global);
goog.exportSymbol('proto.bosdyn.api.VectorAlignmentWithTolerance', null, global);
goog.exportSymbol('proto.bosdyn.api.WalkGazeMode', null, global);
goog.exportSymbol('proto.bosdyn.api.WalkToObjectInImage', null, global);
goog.exportSymbol('proto.bosdyn.api.WalkToObjectRayInWorld', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.WalkToObjectRayInWorld = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.WalkToObjectRayInWorld, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.WalkToObjectRayInWorld.displayName = 'proto.bosdyn.api.WalkToObjectRayInWorld';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.WalkToObjectInImage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.WalkToObjectInImage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.WalkToObjectInImage.displayName = 'proto.bosdyn.api.WalkToObjectInImage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.PickObjectRayInWorld = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.PickObjectRayInWorld, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.PickObjectRayInWorld.displayName = 'proto.bosdyn.api.PickObjectRayInWorld';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.PickObjectExecutePlan = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.PickObjectExecutePlan, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.PickObjectExecutePlan.displayName = 'proto.bosdyn.api.PickObjectExecutePlan';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.PickObject = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.PickObject, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.PickObject.displayName = 'proto.bosdyn.api.PickObject';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.PickObjectInImage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.PickObjectInImage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.PickObjectInImage.displayName = 'proto.bosdyn.api.PickObjectInImage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.GraspParams = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bosdyn.api.GraspParams.repeatedFields_, null);
};
goog.inherits(proto.bosdyn.api.GraspParams, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.GraspParams.displayName = 'proto.bosdyn.api.GraspParams';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.AllowableOrientation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.bosdyn.api.AllowableOrientation.oneofGroups_);
};
goog.inherits(proto.bosdyn.api.AllowableOrientation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.AllowableOrientation.displayName = 'proto.bosdyn.api.AllowableOrientation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.RotationWithTolerance = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.RotationWithTolerance, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.RotationWithTolerance.displayName = 'proto.bosdyn.api.RotationWithTolerance';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.VectorAlignmentWithTolerance = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.VectorAlignmentWithTolerance, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.VectorAlignmentWithTolerance.displayName = 'proto.bosdyn.api.VectorAlignmentWithTolerance';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.SqueezeGrasp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.SqueezeGrasp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.SqueezeGrasp.displayName = 'proto.bosdyn.api.SqueezeGrasp';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.ManipulationApiFeedbackRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.ManipulationApiFeedbackRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.ManipulationApiFeedbackRequest.displayName = 'proto.bosdyn.api.ManipulationApiFeedbackRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.ManipulationApiFeedbackResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.ManipulationApiFeedbackResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.ManipulationApiFeedbackResponse.displayName = 'proto.bosdyn.api.ManipulationApiFeedbackResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.ManipulationApiResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.ManipulationApiResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.ManipulationApiResponse.displayName = 'proto.bosdyn.api.ManipulationApiResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.ManipulationApiRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.bosdyn.api.ManipulationApiRequest.oneofGroups_);
};
goog.inherits(proto.bosdyn.api.ManipulationApiRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.ManipulationApiRequest.displayName = 'proto.bosdyn.api.ManipulationApiRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.ApiGraspOverride = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.ApiGraspOverride, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.ApiGraspOverride.displayName = 'proto.bosdyn.api.ApiGraspOverride';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.ApiGraspedCarryStateOverride = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.ApiGraspedCarryStateOverride, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.ApiGraspedCarryStateOverride.displayName = 'proto.bosdyn.api.ApiGraspedCarryStateOverride';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.ApiGraspOverrideRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.ApiGraspOverrideRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.ApiGraspOverrideRequest.displayName = 'proto.bosdyn.api.ApiGraspOverrideRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.ApiGraspOverrideResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.ApiGraspOverrideResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.ApiGraspOverrideResponse.displayName = 'proto.bosdyn.api.ApiGraspOverrideResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.WalkToObjectRayInWorld.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.WalkToObjectRayInWorld.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.WalkToObjectRayInWorld} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.WalkToObjectRayInWorld.toObject = function(includeInstance, msg) {
  var f, obj = {
    rayStartRtFrame: (f = msg.getRayStartRtFrame()) && bosdyn_api_geometry_pb.Vec3.toObject(includeInstance, f),
    rayEndRtFrame: (f = msg.getRayEndRtFrame()) && bosdyn_api_geometry_pb.Vec3.toObject(includeInstance, f),
    frameName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    offsetDistance: (f = msg.getOffsetDistance()) && google_protobuf_wrappers_pb.FloatValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.WalkToObjectRayInWorld}
 */
proto.bosdyn.api.WalkToObjectRayInWorld.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.WalkToObjectRayInWorld;
  return proto.bosdyn.api.WalkToObjectRayInWorld.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.WalkToObjectRayInWorld} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.WalkToObjectRayInWorld}
 */
proto.bosdyn.api.WalkToObjectRayInWorld.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new bosdyn_api_geometry_pb.Vec3;
      reader.readMessage(value,bosdyn_api_geometry_pb.Vec3.deserializeBinaryFromReader);
      msg.setRayStartRtFrame(value);
      break;
    case 2:
      var value = new bosdyn_api_geometry_pb.Vec3;
      reader.readMessage(value,bosdyn_api_geometry_pb.Vec3.deserializeBinaryFromReader);
      msg.setRayEndRtFrame(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFrameName(value);
      break;
    case 4:
      var value = new google_protobuf_wrappers_pb.FloatValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.FloatValue.deserializeBinaryFromReader);
      msg.setOffsetDistance(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.WalkToObjectRayInWorld.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.WalkToObjectRayInWorld.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.WalkToObjectRayInWorld} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.WalkToObjectRayInWorld.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRayStartRtFrame();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      bosdyn_api_geometry_pb.Vec3.serializeBinaryToWriter
    );
  }
  f = message.getRayEndRtFrame();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      bosdyn_api_geometry_pb.Vec3.serializeBinaryToWriter
    );
  }
  f = message.getFrameName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getOffsetDistance();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_wrappers_pb.FloatValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional Vec3 ray_start_rt_frame = 1;
 * @return {?proto.bosdyn.api.Vec3}
 */
proto.bosdyn.api.WalkToObjectRayInWorld.prototype.getRayStartRtFrame = function() {
  return /** @type{?proto.bosdyn.api.Vec3} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_geometry_pb.Vec3, 1));
};


/**
 * @param {?proto.bosdyn.api.Vec3|undefined} value
 * @return {!proto.bosdyn.api.WalkToObjectRayInWorld} returns this
*/
proto.bosdyn.api.WalkToObjectRayInWorld.prototype.setRayStartRtFrame = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.WalkToObjectRayInWorld} returns this
 */
proto.bosdyn.api.WalkToObjectRayInWorld.prototype.clearRayStartRtFrame = function() {
  return this.setRayStartRtFrame(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.WalkToObjectRayInWorld.prototype.hasRayStartRtFrame = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Vec3 ray_end_rt_frame = 2;
 * @return {?proto.bosdyn.api.Vec3}
 */
proto.bosdyn.api.WalkToObjectRayInWorld.prototype.getRayEndRtFrame = function() {
  return /** @type{?proto.bosdyn.api.Vec3} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_geometry_pb.Vec3, 2));
};


/**
 * @param {?proto.bosdyn.api.Vec3|undefined} value
 * @return {!proto.bosdyn.api.WalkToObjectRayInWorld} returns this
*/
proto.bosdyn.api.WalkToObjectRayInWorld.prototype.setRayEndRtFrame = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.WalkToObjectRayInWorld} returns this
 */
proto.bosdyn.api.WalkToObjectRayInWorld.prototype.clearRayEndRtFrame = function() {
  return this.setRayEndRtFrame(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.WalkToObjectRayInWorld.prototype.hasRayEndRtFrame = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string frame_name = 3;
 * @return {string}
 */
proto.bosdyn.api.WalkToObjectRayInWorld.prototype.getFrameName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.bosdyn.api.WalkToObjectRayInWorld} returns this
 */
proto.bosdyn.api.WalkToObjectRayInWorld.prototype.setFrameName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional google.protobuf.FloatValue offset_distance = 4;
 * @return {?proto.google.protobuf.FloatValue}
 */
proto.bosdyn.api.WalkToObjectRayInWorld.prototype.getOffsetDistance = function() {
  return /** @type{?proto.google.protobuf.FloatValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.FloatValue, 4));
};


/**
 * @param {?proto.google.protobuf.FloatValue|undefined} value
 * @return {!proto.bosdyn.api.WalkToObjectRayInWorld} returns this
*/
proto.bosdyn.api.WalkToObjectRayInWorld.prototype.setOffsetDistance = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.WalkToObjectRayInWorld} returns this
 */
proto.bosdyn.api.WalkToObjectRayInWorld.prototype.clearOffsetDistance = function() {
  return this.setOffsetDistance(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.WalkToObjectRayInWorld.prototype.hasOffsetDistance = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.WalkToObjectInImage.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.WalkToObjectInImage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.WalkToObjectInImage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.WalkToObjectInImage.toObject = function(includeInstance, msg) {
  var f, obj = {
    pixelXy: (f = msg.getPixelXy()) && bosdyn_api_geometry_pb.Vec2.toObject(includeInstance, f),
    transformsSnapshotForCamera: (f = msg.getTransformsSnapshotForCamera()) && bosdyn_api_geometry_pb.FrameTreeSnapshot.toObject(includeInstance, f),
    frameNameImageSensor: jspb.Message.getFieldWithDefault(msg, 3, ""),
    cameraModel: (f = msg.getCameraModel()) && bosdyn_api_image_pb.ImageSource.PinholeModel.toObject(includeInstance, f),
    offsetDistance: (f = msg.getOffsetDistance()) && google_protobuf_wrappers_pb.FloatValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.WalkToObjectInImage}
 */
proto.bosdyn.api.WalkToObjectInImage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.WalkToObjectInImage;
  return proto.bosdyn.api.WalkToObjectInImage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.WalkToObjectInImage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.WalkToObjectInImage}
 */
proto.bosdyn.api.WalkToObjectInImage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new bosdyn_api_geometry_pb.Vec2;
      reader.readMessage(value,bosdyn_api_geometry_pb.Vec2.deserializeBinaryFromReader);
      msg.setPixelXy(value);
      break;
    case 2:
      var value = new bosdyn_api_geometry_pb.FrameTreeSnapshot;
      reader.readMessage(value,bosdyn_api_geometry_pb.FrameTreeSnapshot.deserializeBinaryFromReader);
      msg.setTransformsSnapshotForCamera(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFrameNameImageSensor(value);
      break;
    case 4:
      var value = new bosdyn_api_image_pb.ImageSource.PinholeModel;
      reader.readMessage(value,bosdyn_api_image_pb.ImageSource.PinholeModel.deserializeBinaryFromReader);
      msg.setCameraModel(value);
      break;
    case 5:
      var value = new google_protobuf_wrappers_pb.FloatValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.FloatValue.deserializeBinaryFromReader);
      msg.setOffsetDistance(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.WalkToObjectInImage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.WalkToObjectInImage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.WalkToObjectInImage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.WalkToObjectInImage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPixelXy();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      bosdyn_api_geometry_pb.Vec2.serializeBinaryToWriter
    );
  }
  f = message.getTransformsSnapshotForCamera();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      bosdyn_api_geometry_pb.FrameTreeSnapshot.serializeBinaryToWriter
    );
  }
  f = message.getFrameNameImageSensor();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCameraModel();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      bosdyn_api_image_pb.ImageSource.PinholeModel.serializeBinaryToWriter
    );
  }
  f = message.getOffsetDistance();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_wrappers_pb.FloatValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional Vec2 pixel_xy = 1;
 * @return {?proto.bosdyn.api.Vec2}
 */
proto.bosdyn.api.WalkToObjectInImage.prototype.getPixelXy = function() {
  return /** @type{?proto.bosdyn.api.Vec2} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_geometry_pb.Vec2, 1));
};


/**
 * @param {?proto.bosdyn.api.Vec2|undefined} value
 * @return {!proto.bosdyn.api.WalkToObjectInImage} returns this
*/
proto.bosdyn.api.WalkToObjectInImage.prototype.setPixelXy = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.WalkToObjectInImage} returns this
 */
proto.bosdyn.api.WalkToObjectInImage.prototype.clearPixelXy = function() {
  return this.setPixelXy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.WalkToObjectInImage.prototype.hasPixelXy = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional FrameTreeSnapshot transforms_snapshot_for_camera = 2;
 * @return {?proto.bosdyn.api.FrameTreeSnapshot}
 */
proto.bosdyn.api.WalkToObjectInImage.prototype.getTransformsSnapshotForCamera = function() {
  return /** @type{?proto.bosdyn.api.FrameTreeSnapshot} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_geometry_pb.FrameTreeSnapshot, 2));
};


/**
 * @param {?proto.bosdyn.api.FrameTreeSnapshot|undefined} value
 * @return {!proto.bosdyn.api.WalkToObjectInImage} returns this
*/
proto.bosdyn.api.WalkToObjectInImage.prototype.setTransformsSnapshotForCamera = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.WalkToObjectInImage} returns this
 */
proto.bosdyn.api.WalkToObjectInImage.prototype.clearTransformsSnapshotForCamera = function() {
  return this.setTransformsSnapshotForCamera(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.WalkToObjectInImage.prototype.hasTransformsSnapshotForCamera = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string frame_name_image_sensor = 3;
 * @return {string}
 */
proto.bosdyn.api.WalkToObjectInImage.prototype.getFrameNameImageSensor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.bosdyn.api.WalkToObjectInImage} returns this
 */
proto.bosdyn.api.WalkToObjectInImage.prototype.setFrameNameImageSensor = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional ImageSource.PinholeModel camera_model = 4;
 * @return {?proto.bosdyn.api.ImageSource.PinholeModel}
 */
proto.bosdyn.api.WalkToObjectInImage.prototype.getCameraModel = function() {
  return /** @type{?proto.bosdyn.api.ImageSource.PinholeModel} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_image_pb.ImageSource.PinholeModel, 4));
};


/**
 * @param {?proto.bosdyn.api.ImageSource.PinholeModel|undefined} value
 * @return {!proto.bosdyn.api.WalkToObjectInImage} returns this
*/
proto.bosdyn.api.WalkToObjectInImage.prototype.setCameraModel = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.WalkToObjectInImage} returns this
 */
proto.bosdyn.api.WalkToObjectInImage.prototype.clearCameraModel = function() {
  return this.setCameraModel(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.WalkToObjectInImage.prototype.hasCameraModel = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional google.protobuf.FloatValue offset_distance = 5;
 * @return {?proto.google.protobuf.FloatValue}
 */
proto.bosdyn.api.WalkToObjectInImage.prototype.getOffsetDistance = function() {
  return /** @type{?proto.google.protobuf.FloatValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.FloatValue, 5));
};


/**
 * @param {?proto.google.protobuf.FloatValue|undefined} value
 * @return {!proto.bosdyn.api.WalkToObjectInImage} returns this
*/
proto.bosdyn.api.WalkToObjectInImage.prototype.setOffsetDistance = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.WalkToObjectInImage} returns this
 */
proto.bosdyn.api.WalkToObjectInImage.prototype.clearOffsetDistance = function() {
  return this.setOffsetDistance(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.WalkToObjectInImage.prototype.hasOffsetDistance = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.PickObjectRayInWorld.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.PickObjectRayInWorld.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.PickObjectRayInWorld} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.PickObjectRayInWorld.toObject = function(includeInstance, msg) {
  var f, obj = {
    rayStartRtFrame: (f = msg.getRayStartRtFrame()) && bosdyn_api_geometry_pb.Vec3.toObject(includeInstance, f),
    rayEndRtFrame: (f = msg.getRayEndRtFrame()) && bosdyn_api_geometry_pb.Vec3.toObject(includeInstance, f),
    frameName: jspb.Message.getFieldWithDefault(msg, 6, ""),
    graspParams: (f = msg.getGraspParams()) && proto.bosdyn.api.GraspParams.toObject(includeInstance, f),
    walkGazeMode: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.PickObjectRayInWorld}
 */
proto.bosdyn.api.PickObjectRayInWorld.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.PickObjectRayInWorld;
  return proto.bosdyn.api.PickObjectRayInWorld.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.PickObjectRayInWorld} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.PickObjectRayInWorld}
 */
proto.bosdyn.api.PickObjectRayInWorld.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new bosdyn_api_geometry_pb.Vec3;
      reader.readMessage(value,bosdyn_api_geometry_pb.Vec3.deserializeBinaryFromReader);
      msg.setRayStartRtFrame(value);
      break;
    case 2:
      var value = new bosdyn_api_geometry_pb.Vec3;
      reader.readMessage(value,bosdyn_api_geometry_pb.Vec3.deserializeBinaryFromReader);
      msg.setRayEndRtFrame(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setFrameName(value);
      break;
    case 10:
      var value = new proto.bosdyn.api.GraspParams;
      reader.readMessage(value,proto.bosdyn.api.GraspParams.deserializeBinaryFromReader);
      msg.setGraspParams(value);
      break;
    case 4:
      var value = /** @type {!proto.bosdyn.api.WalkGazeMode} */ (reader.readEnum());
      msg.setWalkGazeMode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.PickObjectRayInWorld.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.PickObjectRayInWorld.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.PickObjectRayInWorld} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.PickObjectRayInWorld.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRayStartRtFrame();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      bosdyn_api_geometry_pb.Vec3.serializeBinaryToWriter
    );
  }
  f = message.getRayEndRtFrame();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      bosdyn_api_geometry_pb.Vec3.serializeBinaryToWriter
    );
  }
  f = message.getFrameName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getGraspParams();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.bosdyn.api.GraspParams.serializeBinaryToWriter
    );
  }
  f = message.getWalkGazeMode();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * optional Vec3 ray_start_rt_frame = 1;
 * @return {?proto.bosdyn.api.Vec3}
 */
proto.bosdyn.api.PickObjectRayInWorld.prototype.getRayStartRtFrame = function() {
  return /** @type{?proto.bosdyn.api.Vec3} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_geometry_pb.Vec3, 1));
};


/**
 * @param {?proto.bosdyn.api.Vec3|undefined} value
 * @return {!proto.bosdyn.api.PickObjectRayInWorld} returns this
*/
proto.bosdyn.api.PickObjectRayInWorld.prototype.setRayStartRtFrame = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.PickObjectRayInWorld} returns this
 */
proto.bosdyn.api.PickObjectRayInWorld.prototype.clearRayStartRtFrame = function() {
  return this.setRayStartRtFrame(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.PickObjectRayInWorld.prototype.hasRayStartRtFrame = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Vec3 ray_end_rt_frame = 2;
 * @return {?proto.bosdyn.api.Vec3}
 */
proto.bosdyn.api.PickObjectRayInWorld.prototype.getRayEndRtFrame = function() {
  return /** @type{?proto.bosdyn.api.Vec3} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_geometry_pb.Vec3, 2));
};


/**
 * @param {?proto.bosdyn.api.Vec3|undefined} value
 * @return {!proto.bosdyn.api.PickObjectRayInWorld} returns this
*/
proto.bosdyn.api.PickObjectRayInWorld.prototype.setRayEndRtFrame = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.PickObjectRayInWorld} returns this
 */
proto.bosdyn.api.PickObjectRayInWorld.prototype.clearRayEndRtFrame = function() {
  return this.setRayEndRtFrame(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.PickObjectRayInWorld.prototype.hasRayEndRtFrame = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string frame_name = 6;
 * @return {string}
 */
proto.bosdyn.api.PickObjectRayInWorld.prototype.getFrameName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.bosdyn.api.PickObjectRayInWorld} returns this
 */
proto.bosdyn.api.PickObjectRayInWorld.prototype.setFrameName = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional GraspParams grasp_params = 10;
 * @return {?proto.bosdyn.api.GraspParams}
 */
proto.bosdyn.api.PickObjectRayInWorld.prototype.getGraspParams = function() {
  return /** @type{?proto.bosdyn.api.GraspParams} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.GraspParams, 10));
};


/**
 * @param {?proto.bosdyn.api.GraspParams|undefined} value
 * @return {!proto.bosdyn.api.PickObjectRayInWorld} returns this
*/
proto.bosdyn.api.PickObjectRayInWorld.prototype.setGraspParams = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.PickObjectRayInWorld} returns this
 */
proto.bosdyn.api.PickObjectRayInWorld.prototype.clearGraspParams = function() {
  return this.setGraspParams(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.PickObjectRayInWorld.prototype.hasGraspParams = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional WalkGazeMode walk_gaze_mode = 4;
 * @return {!proto.bosdyn.api.WalkGazeMode}
 */
proto.bosdyn.api.PickObjectRayInWorld.prototype.getWalkGazeMode = function() {
  return /** @type {!proto.bosdyn.api.WalkGazeMode} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.bosdyn.api.WalkGazeMode} value
 * @return {!proto.bosdyn.api.PickObjectRayInWorld} returns this
 */
proto.bosdyn.api.PickObjectRayInWorld.prototype.setWalkGazeMode = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.PickObjectExecutePlan.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.PickObjectExecutePlan.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.PickObjectExecutePlan} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.PickObjectExecutePlan.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.PickObjectExecutePlan}
 */
proto.bosdyn.api.PickObjectExecutePlan.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.PickObjectExecutePlan;
  return proto.bosdyn.api.PickObjectExecutePlan.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.PickObjectExecutePlan} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.PickObjectExecutePlan}
 */
proto.bosdyn.api.PickObjectExecutePlan.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.PickObjectExecutePlan.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.PickObjectExecutePlan.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.PickObjectExecutePlan} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.PickObjectExecutePlan.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.PickObject.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.PickObject.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.PickObject} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.PickObject.toObject = function(includeInstance, msg) {
  var f, obj = {
    frameName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    objectRtFrame: (f = msg.getObjectRtFrame()) && bosdyn_api_geometry_pb.Vec3.toObject(includeInstance, f),
    graspParams: (f = msg.getGraspParams()) && proto.bosdyn.api.GraspParams.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.PickObject}
 */
proto.bosdyn.api.PickObject.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.PickObject;
  return proto.bosdyn.api.PickObject.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.PickObject} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.PickObject}
 */
proto.bosdyn.api.PickObject.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFrameName(value);
      break;
    case 2:
      var value = new bosdyn_api_geometry_pb.Vec3;
      reader.readMessage(value,bosdyn_api_geometry_pb.Vec3.deserializeBinaryFromReader);
      msg.setObjectRtFrame(value);
      break;
    case 3:
      var value = new proto.bosdyn.api.GraspParams;
      reader.readMessage(value,proto.bosdyn.api.GraspParams.deserializeBinaryFromReader);
      msg.setGraspParams(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.PickObject.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.PickObject.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.PickObject} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.PickObject.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFrameName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getObjectRtFrame();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      bosdyn_api_geometry_pb.Vec3.serializeBinaryToWriter
    );
  }
  f = message.getGraspParams();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.bosdyn.api.GraspParams.serializeBinaryToWriter
    );
  }
};


/**
 * optional string frame_name = 1;
 * @return {string}
 */
proto.bosdyn.api.PickObject.prototype.getFrameName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bosdyn.api.PickObject} returns this
 */
proto.bosdyn.api.PickObject.prototype.setFrameName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Vec3 object_rt_frame = 2;
 * @return {?proto.bosdyn.api.Vec3}
 */
proto.bosdyn.api.PickObject.prototype.getObjectRtFrame = function() {
  return /** @type{?proto.bosdyn.api.Vec3} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_geometry_pb.Vec3, 2));
};


/**
 * @param {?proto.bosdyn.api.Vec3|undefined} value
 * @return {!proto.bosdyn.api.PickObject} returns this
*/
proto.bosdyn.api.PickObject.prototype.setObjectRtFrame = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.PickObject} returns this
 */
proto.bosdyn.api.PickObject.prototype.clearObjectRtFrame = function() {
  return this.setObjectRtFrame(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.PickObject.prototype.hasObjectRtFrame = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional GraspParams grasp_params = 3;
 * @return {?proto.bosdyn.api.GraspParams}
 */
proto.bosdyn.api.PickObject.prototype.getGraspParams = function() {
  return /** @type{?proto.bosdyn.api.GraspParams} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.GraspParams, 3));
};


/**
 * @param {?proto.bosdyn.api.GraspParams|undefined} value
 * @return {!proto.bosdyn.api.PickObject} returns this
*/
proto.bosdyn.api.PickObject.prototype.setGraspParams = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.PickObject} returns this
 */
proto.bosdyn.api.PickObject.prototype.clearGraspParams = function() {
  return this.setGraspParams(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.PickObject.prototype.hasGraspParams = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.PickObjectInImage.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.PickObjectInImage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.PickObjectInImage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.PickObjectInImage.toObject = function(includeInstance, msg) {
  var f, obj = {
    pixelXy: (f = msg.getPixelXy()) && bosdyn_api_geometry_pb.Vec2.toObject(includeInstance, f),
    transformsSnapshotForCamera: (f = msg.getTransformsSnapshotForCamera()) && bosdyn_api_geometry_pb.FrameTreeSnapshot.toObject(includeInstance, f),
    frameNameImageSensor: jspb.Message.getFieldWithDefault(msg, 3, ""),
    cameraModel: (f = msg.getCameraModel()) && bosdyn_api_image_pb.ImageSource.PinholeModel.toObject(includeInstance, f),
    graspParams: (f = msg.getGraspParams()) && proto.bosdyn.api.GraspParams.toObject(includeInstance, f),
    walkGazeMode: jspb.Message.getFieldWithDefault(msg, 9, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.PickObjectInImage}
 */
proto.bosdyn.api.PickObjectInImage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.PickObjectInImage;
  return proto.bosdyn.api.PickObjectInImage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.PickObjectInImage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.PickObjectInImage}
 */
proto.bosdyn.api.PickObjectInImage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new bosdyn_api_geometry_pb.Vec2;
      reader.readMessage(value,bosdyn_api_geometry_pb.Vec2.deserializeBinaryFromReader);
      msg.setPixelXy(value);
      break;
    case 2:
      var value = new bosdyn_api_geometry_pb.FrameTreeSnapshot;
      reader.readMessage(value,bosdyn_api_geometry_pb.FrameTreeSnapshot.deserializeBinaryFromReader);
      msg.setTransformsSnapshotForCamera(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFrameNameImageSensor(value);
      break;
    case 4:
      var value = new bosdyn_api_image_pb.ImageSource.PinholeModel;
      reader.readMessage(value,bosdyn_api_image_pb.ImageSource.PinholeModel.deserializeBinaryFromReader);
      msg.setCameraModel(value);
      break;
    case 10:
      var value = new proto.bosdyn.api.GraspParams;
      reader.readMessage(value,proto.bosdyn.api.GraspParams.deserializeBinaryFromReader);
      msg.setGraspParams(value);
      break;
    case 9:
      var value = /** @type {!proto.bosdyn.api.WalkGazeMode} */ (reader.readEnum());
      msg.setWalkGazeMode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.PickObjectInImage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.PickObjectInImage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.PickObjectInImage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.PickObjectInImage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPixelXy();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      bosdyn_api_geometry_pb.Vec2.serializeBinaryToWriter
    );
  }
  f = message.getTransformsSnapshotForCamera();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      bosdyn_api_geometry_pb.FrameTreeSnapshot.serializeBinaryToWriter
    );
  }
  f = message.getFrameNameImageSensor();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCameraModel();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      bosdyn_api_image_pb.ImageSource.PinholeModel.serializeBinaryToWriter
    );
  }
  f = message.getGraspParams();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.bosdyn.api.GraspParams.serializeBinaryToWriter
    );
  }
  f = message.getWalkGazeMode();
  if (f !== 0.0) {
    writer.writeEnum(
      9,
      f
    );
  }
};


/**
 * optional Vec2 pixel_xy = 1;
 * @return {?proto.bosdyn.api.Vec2}
 */
proto.bosdyn.api.PickObjectInImage.prototype.getPixelXy = function() {
  return /** @type{?proto.bosdyn.api.Vec2} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_geometry_pb.Vec2, 1));
};


/**
 * @param {?proto.bosdyn.api.Vec2|undefined} value
 * @return {!proto.bosdyn.api.PickObjectInImage} returns this
*/
proto.bosdyn.api.PickObjectInImage.prototype.setPixelXy = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.PickObjectInImage} returns this
 */
proto.bosdyn.api.PickObjectInImage.prototype.clearPixelXy = function() {
  return this.setPixelXy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.PickObjectInImage.prototype.hasPixelXy = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional FrameTreeSnapshot transforms_snapshot_for_camera = 2;
 * @return {?proto.bosdyn.api.FrameTreeSnapshot}
 */
proto.bosdyn.api.PickObjectInImage.prototype.getTransformsSnapshotForCamera = function() {
  return /** @type{?proto.bosdyn.api.FrameTreeSnapshot} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_geometry_pb.FrameTreeSnapshot, 2));
};


/**
 * @param {?proto.bosdyn.api.FrameTreeSnapshot|undefined} value
 * @return {!proto.bosdyn.api.PickObjectInImage} returns this
*/
proto.bosdyn.api.PickObjectInImage.prototype.setTransformsSnapshotForCamera = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.PickObjectInImage} returns this
 */
proto.bosdyn.api.PickObjectInImage.prototype.clearTransformsSnapshotForCamera = function() {
  return this.setTransformsSnapshotForCamera(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.PickObjectInImage.prototype.hasTransformsSnapshotForCamera = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string frame_name_image_sensor = 3;
 * @return {string}
 */
proto.bosdyn.api.PickObjectInImage.prototype.getFrameNameImageSensor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.bosdyn.api.PickObjectInImage} returns this
 */
proto.bosdyn.api.PickObjectInImage.prototype.setFrameNameImageSensor = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional ImageSource.PinholeModel camera_model = 4;
 * @return {?proto.bosdyn.api.ImageSource.PinholeModel}
 */
proto.bosdyn.api.PickObjectInImage.prototype.getCameraModel = function() {
  return /** @type{?proto.bosdyn.api.ImageSource.PinholeModel} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_image_pb.ImageSource.PinholeModel, 4));
};


/**
 * @param {?proto.bosdyn.api.ImageSource.PinholeModel|undefined} value
 * @return {!proto.bosdyn.api.PickObjectInImage} returns this
*/
proto.bosdyn.api.PickObjectInImage.prototype.setCameraModel = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.PickObjectInImage} returns this
 */
proto.bosdyn.api.PickObjectInImage.prototype.clearCameraModel = function() {
  return this.setCameraModel(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.PickObjectInImage.prototype.hasCameraModel = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional GraspParams grasp_params = 10;
 * @return {?proto.bosdyn.api.GraspParams}
 */
proto.bosdyn.api.PickObjectInImage.prototype.getGraspParams = function() {
  return /** @type{?proto.bosdyn.api.GraspParams} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.GraspParams, 10));
};


/**
 * @param {?proto.bosdyn.api.GraspParams|undefined} value
 * @return {!proto.bosdyn.api.PickObjectInImage} returns this
*/
proto.bosdyn.api.PickObjectInImage.prototype.setGraspParams = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.PickObjectInImage} returns this
 */
proto.bosdyn.api.PickObjectInImage.prototype.clearGraspParams = function() {
  return this.setGraspParams(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.PickObjectInImage.prototype.hasGraspParams = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional WalkGazeMode walk_gaze_mode = 9;
 * @return {!proto.bosdyn.api.WalkGazeMode}
 */
proto.bosdyn.api.PickObjectInImage.prototype.getWalkGazeMode = function() {
  return /** @type {!proto.bosdyn.api.WalkGazeMode} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {!proto.bosdyn.api.WalkGazeMode} value
 * @return {!proto.bosdyn.api.PickObjectInImage} returns this
 */
proto.bosdyn.api.PickObjectInImage.prototype.setWalkGazeMode = function(value) {
  return jspb.Message.setProto3EnumField(this, 9, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bosdyn.api.GraspParams.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.GraspParams.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.GraspParams.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.GraspParams} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.GraspParams.toObject = function(includeInstance, msg) {
  var f, obj = {
    graspPalmToFingertip: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    graspParamsFrameName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    allowableOrientationList: jspb.Message.toObjectList(msg.getAllowableOrientationList(),
    proto.bosdyn.api.AllowableOrientation.toObject, includeInstance),
    positionConstraint: jspb.Message.getFieldWithDefault(msg, 4, 0),
    manipulationCameraSource: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.GraspParams}
 */
proto.bosdyn.api.GraspParams.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.GraspParams;
  return proto.bosdyn.api.GraspParams.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.GraspParams} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.GraspParams}
 */
proto.bosdyn.api.GraspParams.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setGraspPalmToFingertip(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setGraspParamsFrameName(value);
      break;
    case 3:
      var value = new proto.bosdyn.api.AllowableOrientation;
      reader.readMessage(value,proto.bosdyn.api.AllowableOrientation.deserializeBinaryFromReader);
      msg.addAllowableOrientation(value);
      break;
    case 4:
      var value = /** @type {!proto.bosdyn.api.GraspPositionConstraint} */ (reader.readEnum());
      msg.setPositionConstraint(value);
      break;
    case 5:
      var value = /** @type {!proto.bosdyn.api.ManipulationCameraSource} */ (reader.readEnum());
      msg.setManipulationCameraSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.GraspParams.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.GraspParams.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.GraspParams} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.GraspParams.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGraspPalmToFingertip();
  if (f !== 0.0) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = message.getGraspParamsFrameName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAllowableOrientationList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.bosdyn.api.AllowableOrientation.serializeBinaryToWriter
    );
  }
  f = message.getPositionConstraint();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getManipulationCameraSource();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
};


/**
 * optional float grasp_palm_to_fingertip = 1;
 * @return {number}
 */
proto.bosdyn.api.GraspParams.prototype.getGraspPalmToFingertip = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.bosdyn.api.GraspParams} returns this
 */
proto.bosdyn.api.GraspParams.prototype.setGraspPalmToFingertip = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional string grasp_params_frame_name = 2;
 * @return {string}
 */
proto.bosdyn.api.GraspParams.prototype.getGraspParamsFrameName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.bosdyn.api.GraspParams} returns this
 */
proto.bosdyn.api.GraspParams.prototype.setGraspParamsFrameName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated AllowableOrientation allowable_orientation = 3;
 * @return {!Array<!proto.bosdyn.api.AllowableOrientation>}
 */
proto.bosdyn.api.GraspParams.prototype.getAllowableOrientationList = function() {
  return /** @type{!Array<!proto.bosdyn.api.AllowableOrientation>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.bosdyn.api.AllowableOrientation, 3));
};


/**
 * @param {!Array<!proto.bosdyn.api.AllowableOrientation>} value
 * @return {!proto.bosdyn.api.GraspParams} returns this
*/
proto.bosdyn.api.GraspParams.prototype.setAllowableOrientationList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.bosdyn.api.AllowableOrientation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bosdyn.api.AllowableOrientation}
 */
proto.bosdyn.api.GraspParams.prototype.addAllowableOrientation = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.bosdyn.api.AllowableOrientation, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bosdyn.api.GraspParams} returns this
 */
proto.bosdyn.api.GraspParams.prototype.clearAllowableOrientationList = function() {
  return this.setAllowableOrientationList([]);
};


/**
 * optional GraspPositionConstraint position_constraint = 4;
 * @return {!proto.bosdyn.api.GraspPositionConstraint}
 */
proto.bosdyn.api.GraspParams.prototype.getPositionConstraint = function() {
  return /** @type {!proto.bosdyn.api.GraspPositionConstraint} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.bosdyn.api.GraspPositionConstraint} value
 * @return {!proto.bosdyn.api.GraspParams} returns this
 */
proto.bosdyn.api.GraspParams.prototype.setPositionConstraint = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional ManipulationCameraSource manipulation_camera_source = 5;
 * @return {!proto.bosdyn.api.ManipulationCameraSource}
 */
proto.bosdyn.api.GraspParams.prototype.getManipulationCameraSource = function() {
  return /** @type {!proto.bosdyn.api.ManipulationCameraSource} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.bosdyn.api.ManipulationCameraSource} value
 * @return {!proto.bosdyn.api.GraspParams} returns this
 */
proto.bosdyn.api.GraspParams.prototype.setManipulationCameraSource = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.bosdyn.api.AllowableOrientation.oneofGroups_ = [[1,2,3]];

/**
 * @enum {number}
 */
proto.bosdyn.api.AllowableOrientation.ConstraintCase = {
  CONSTRAINT_NOT_SET: 0,
  ROTATION_WITH_TOLERANCE: 1,
  VECTOR_ALIGNMENT_WITH_TOLERANCE: 2,
  SQUEEZE_GRASP: 3
};

/**
 * @return {proto.bosdyn.api.AllowableOrientation.ConstraintCase}
 */
proto.bosdyn.api.AllowableOrientation.prototype.getConstraintCase = function() {
  return /** @type {proto.bosdyn.api.AllowableOrientation.ConstraintCase} */(jspb.Message.computeOneofCase(this, proto.bosdyn.api.AllowableOrientation.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.AllowableOrientation.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.AllowableOrientation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.AllowableOrientation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.AllowableOrientation.toObject = function(includeInstance, msg) {
  var f, obj = {
    rotationWithTolerance: (f = msg.getRotationWithTolerance()) && proto.bosdyn.api.RotationWithTolerance.toObject(includeInstance, f),
    vectorAlignmentWithTolerance: (f = msg.getVectorAlignmentWithTolerance()) && proto.bosdyn.api.VectorAlignmentWithTolerance.toObject(includeInstance, f),
    squeezeGrasp: (f = msg.getSqueezeGrasp()) && proto.bosdyn.api.SqueezeGrasp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.AllowableOrientation}
 */
proto.bosdyn.api.AllowableOrientation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.AllowableOrientation;
  return proto.bosdyn.api.AllowableOrientation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.AllowableOrientation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.AllowableOrientation}
 */
proto.bosdyn.api.AllowableOrientation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.bosdyn.api.RotationWithTolerance;
      reader.readMessage(value,proto.bosdyn.api.RotationWithTolerance.deserializeBinaryFromReader);
      msg.setRotationWithTolerance(value);
      break;
    case 2:
      var value = new proto.bosdyn.api.VectorAlignmentWithTolerance;
      reader.readMessage(value,proto.bosdyn.api.VectorAlignmentWithTolerance.deserializeBinaryFromReader);
      msg.setVectorAlignmentWithTolerance(value);
      break;
    case 3:
      var value = new proto.bosdyn.api.SqueezeGrasp;
      reader.readMessage(value,proto.bosdyn.api.SqueezeGrasp.deserializeBinaryFromReader);
      msg.setSqueezeGrasp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.AllowableOrientation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.AllowableOrientation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.AllowableOrientation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.AllowableOrientation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRotationWithTolerance();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.bosdyn.api.RotationWithTolerance.serializeBinaryToWriter
    );
  }
  f = message.getVectorAlignmentWithTolerance();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.bosdyn.api.VectorAlignmentWithTolerance.serializeBinaryToWriter
    );
  }
  f = message.getSqueezeGrasp();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.bosdyn.api.SqueezeGrasp.serializeBinaryToWriter
    );
  }
};


/**
 * optional RotationWithTolerance rotation_with_tolerance = 1;
 * @return {?proto.bosdyn.api.RotationWithTolerance}
 */
proto.bosdyn.api.AllowableOrientation.prototype.getRotationWithTolerance = function() {
  return /** @type{?proto.bosdyn.api.RotationWithTolerance} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.RotationWithTolerance, 1));
};


/**
 * @param {?proto.bosdyn.api.RotationWithTolerance|undefined} value
 * @return {!proto.bosdyn.api.AllowableOrientation} returns this
*/
proto.bosdyn.api.AllowableOrientation.prototype.setRotationWithTolerance = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.bosdyn.api.AllowableOrientation.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.AllowableOrientation} returns this
 */
proto.bosdyn.api.AllowableOrientation.prototype.clearRotationWithTolerance = function() {
  return this.setRotationWithTolerance(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.AllowableOrientation.prototype.hasRotationWithTolerance = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional VectorAlignmentWithTolerance vector_alignment_with_tolerance = 2;
 * @return {?proto.bosdyn.api.VectorAlignmentWithTolerance}
 */
proto.bosdyn.api.AllowableOrientation.prototype.getVectorAlignmentWithTolerance = function() {
  return /** @type{?proto.bosdyn.api.VectorAlignmentWithTolerance} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.VectorAlignmentWithTolerance, 2));
};


/**
 * @param {?proto.bosdyn.api.VectorAlignmentWithTolerance|undefined} value
 * @return {!proto.bosdyn.api.AllowableOrientation} returns this
*/
proto.bosdyn.api.AllowableOrientation.prototype.setVectorAlignmentWithTolerance = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.bosdyn.api.AllowableOrientation.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.AllowableOrientation} returns this
 */
proto.bosdyn.api.AllowableOrientation.prototype.clearVectorAlignmentWithTolerance = function() {
  return this.setVectorAlignmentWithTolerance(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.AllowableOrientation.prototype.hasVectorAlignmentWithTolerance = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional SqueezeGrasp squeeze_grasp = 3;
 * @return {?proto.bosdyn.api.SqueezeGrasp}
 */
proto.bosdyn.api.AllowableOrientation.prototype.getSqueezeGrasp = function() {
  return /** @type{?proto.bosdyn.api.SqueezeGrasp} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.SqueezeGrasp, 3));
};


/**
 * @param {?proto.bosdyn.api.SqueezeGrasp|undefined} value
 * @return {!proto.bosdyn.api.AllowableOrientation} returns this
*/
proto.bosdyn.api.AllowableOrientation.prototype.setSqueezeGrasp = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.bosdyn.api.AllowableOrientation.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.AllowableOrientation} returns this
 */
proto.bosdyn.api.AllowableOrientation.prototype.clearSqueezeGrasp = function() {
  return this.setSqueezeGrasp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.AllowableOrientation.prototype.hasSqueezeGrasp = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.RotationWithTolerance.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.RotationWithTolerance.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.RotationWithTolerance} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.RotationWithTolerance.toObject = function(includeInstance, msg) {
  var f, obj = {
    rotationEwrtFrame: (f = msg.getRotationEwrtFrame()) && bosdyn_api_geometry_pb.Quaternion.toObject(includeInstance, f),
    thresholdRadians: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.RotationWithTolerance}
 */
proto.bosdyn.api.RotationWithTolerance.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.RotationWithTolerance;
  return proto.bosdyn.api.RotationWithTolerance.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.RotationWithTolerance} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.RotationWithTolerance}
 */
proto.bosdyn.api.RotationWithTolerance.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new bosdyn_api_geometry_pb.Quaternion;
      reader.readMessage(value,bosdyn_api_geometry_pb.Quaternion.deserializeBinaryFromReader);
      msg.setRotationEwrtFrame(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setThresholdRadians(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.RotationWithTolerance.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.RotationWithTolerance.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.RotationWithTolerance} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.RotationWithTolerance.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRotationEwrtFrame();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      bosdyn_api_geometry_pb.Quaternion.serializeBinaryToWriter
    );
  }
  f = message.getThresholdRadians();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
};


/**
 * optional Quaternion rotation_ewrt_frame = 1;
 * @return {?proto.bosdyn.api.Quaternion}
 */
proto.bosdyn.api.RotationWithTolerance.prototype.getRotationEwrtFrame = function() {
  return /** @type{?proto.bosdyn.api.Quaternion} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_geometry_pb.Quaternion, 1));
};


/**
 * @param {?proto.bosdyn.api.Quaternion|undefined} value
 * @return {!proto.bosdyn.api.RotationWithTolerance} returns this
*/
proto.bosdyn.api.RotationWithTolerance.prototype.setRotationEwrtFrame = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.RotationWithTolerance} returns this
 */
proto.bosdyn.api.RotationWithTolerance.prototype.clearRotationEwrtFrame = function() {
  return this.setRotationEwrtFrame(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.RotationWithTolerance.prototype.hasRotationEwrtFrame = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional float threshold_radians = 2;
 * @return {number}
 */
proto.bosdyn.api.RotationWithTolerance.prototype.getThresholdRadians = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.bosdyn.api.RotationWithTolerance} returns this
 */
proto.bosdyn.api.RotationWithTolerance.prototype.setThresholdRadians = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.VectorAlignmentWithTolerance.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.VectorAlignmentWithTolerance.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.VectorAlignmentWithTolerance} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.VectorAlignmentWithTolerance.toObject = function(includeInstance, msg) {
  var f, obj = {
    axisOnGripperEwrtGripper: (f = msg.getAxisOnGripperEwrtGripper()) && bosdyn_api_geometry_pb.Vec3.toObject(includeInstance, f),
    axisToAlignWithEwrtFrame: (f = msg.getAxisToAlignWithEwrtFrame()) && bosdyn_api_geometry_pb.Vec3.toObject(includeInstance, f),
    thresholdRadians: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.VectorAlignmentWithTolerance}
 */
proto.bosdyn.api.VectorAlignmentWithTolerance.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.VectorAlignmentWithTolerance;
  return proto.bosdyn.api.VectorAlignmentWithTolerance.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.VectorAlignmentWithTolerance} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.VectorAlignmentWithTolerance}
 */
proto.bosdyn.api.VectorAlignmentWithTolerance.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new bosdyn_api_geometry_pb.Vec3;
      reader.readMessage(value,bosdyn_api_geometry_pb.Vec3.deserializeBinaryFromReader);
      msg.setAxisOnGripperEwrtGripper(value);
      break;
    case 2:
      var value = new bosdyn_api_geometry_pb.Vec3;
      reader.readMessage(value,bosdyn_api_geometry_pb.Vec3.deserializeBinaryFromReader);
      msg.setAxisToAlignWithEwrtFrame(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setThresholdRadians(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.VectorAlignmentWithTolerance.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.VectorAlignmentWithTolerance.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.VectorAlignmentWithTolerance} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.VectorAlignmentWithTolerance.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAxisOnGripperEwrtGripper();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      bosdyn_api_geometry_pb.Vec3.serializeBinaryToWriter
    );
  }
  f = message.getAxisToAlignWithEwrtFrame();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      bosdyn_api_geometry_pb.Vec3.serializeBinaryToWriter
    );
  }
  f = message.getThresholdRadians();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
};


/**
 * optional Vec3 axis_on_gripper_ewrt_gripper = 1;
 * @return {?proto.bosdyn.api.Vec3}
 */
proto.bosdyn.api.VectorAlignmentWithTolerance.prototype.getAxisOnGripperEwrtGripper = function() {
  return /** @type{?proto.bosdyn.api.Vec3} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_geometry_pb.Vec3, 1));
};


/**
 * @param {?proto.bosdyn.api.Vec3|undefined} value
 * @return {!proto.bosdyn.api.VectorAlignmentWithTolerance} returns this
*/
proto.bosdyn.api.VectorAlignmentWithTolerance.prototype.setAxisOnGripperEwrtGripper = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.VectorAlignmentWithTolerance} returns this
 */
proto.bosdyn.api.VectorAlignmentWithTolerance.prototype.clearAxisOnGripperEwrtGripper = function() {
  return this.setAxisOnGripperEwrtGripper(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.VectorAlignmentWithTolerance.prototype.hasAxisOnGripperEwrtGripper = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Vec3 axis_to_align_with_ewrt_frame = 2;
 * @return {?proto.bosdyn.api.Vec3}
 */
proto.bosdyn.api.VectorAlignmentWithTolerance.prototype.getAxisToAlignWithEwrtFrame = function() {
  return /** @type{?proto.bosdyn.api.Vec3} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_geometry_pb.Vec3, 2));
};


/**
 * @param {?proto.bosdyn.api.Vec3|undefined} value
 * @return {!proto.bosdyn.api.VectorAlignmentWithTolerance} returns this
*/
proto.bosdyn.api.VectorAlignmentWithTolerance.prototype.setAxisToAlignWithEwrtFrame = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.VectorAlignmentWithTolerance} returns this
 */
proto.bosdyn.api.VectorAlignmentWithTolerance.prototype.clearAxisToAlignWithEwrtFrame = function() {
  return this.setAxisToAlignWithEwrtFrame(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.VectorAlignmentWithTolerance.prototype.hasAxisToAlignWithEwrtFrame = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional float threshold_radians = 3;
 * @return {number}
 */
proto.bosdyn.api.VectorAlignmentWithTolerance.prototype.getThresholdRadians = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.bosdyn.api.VectorAlignmentWithTolerance} returns this
 */
proto.bosdyn.api.VectorAlignmentWithTolerance.prototype.setThresholdRadians = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.SqueezeGrasp.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.SqueezeGrasp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.SqueezeGrasp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.SqueezeGrasp.toObject = function(includeInstance, msg) {
  var f, obj = {
    squeezeGraspDisallowed: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.SqueezeGrasp}
 */
proto.bosdyn.api.SqueezeGrasp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.SqueezeGrasp;
  return proto.bosdyn.api.SqueezeGrasp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.SqueezeGrasp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.SqueezeGrasp}
 */
proto.bosdyn.api.SqueezeGrasp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSqueezeGraspDisallowed(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.SqueezeGrasp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.SqueezeGrasp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.SqueezeGrasp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.SqueezeGrasp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSqueezeGraspDisallowed();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool squeeze_grasp_disallowed = 1;
 * @return {boolean}
 */
proto.bosdyn.api.SqueezeGrasp.prototype.getSqueezeGraspDisallowed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.bosdyn.api.SqueezeGrasp} returns this
 */
proto.bosdyn.api.SqueezeGrasp.prototype.setSqueezeGraspDisallowed = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.ManipulationApiFeedbackRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.ManipulationApiFeedbackRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.ManipulationApiFeedbackRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.ManipulationApiFeedbackRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && bosdyn_api_header_pb.RequestHeader.toObject(includeInstance, f),
    manipulationCmdId: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.ManipulationApiFeedbackRequest}
 */
proto.bosdyn.api.ManipulationApiFeedbackRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.ManipulationApiFeedbackRequest;
  return proto.bosdyn.api.ManipulationApiFeedbackRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.ManipulationApiFeedbackRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.ManipulationApiFeedbackRequest}
 */
proto.bosdyn.api.ManipulationApiFeedbackRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new bosdyn_api_header_pb.RequestHeader;
      reader.readMessage(value,bosdyn_api_header_pb.RequestHeader.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setManipulationCmdId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.ManipulationApiFeedbackRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.ManipulationApiFeedbackRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.ManipulationApiFeedbackRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.ManipulationApiFeedbackRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      bosdyn_api_header_pb.RequestHeader.serializeBinaryToWriter
    );
  }
  f = message.getManipulationCmdId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional RequestHeader header = 1;
 * @return {?proto.bosdyn.api.RequestHeader}
 */
proto.bosdyn.api.ManipulationApiFeedbackRequest.prototype.getHeader = function() {
  return /** @type{?proto.bosdyn.api.RequestHeader} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_header_pb.RequestHeader, 1));
};


/**
 * @param {?proto.bosdyn.api.RequestHeader|undefined} value
 * @return {!proto.bosdyn.api.ManipulationApiFeedbackRequest} returns this
*/
proto.bosdyn.api.ManipulationApiFeedbackRequest.prototype.setHeader = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.ManipulationApiFeedbackRequest} returns this
 */
proto.bosdyn.api.ManipulationApiFeedbackRequest.prototype.clearHeader = function() {
  return this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.ManipulationApiFeedbackRequest.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 manipulation_cmd_id = 2;
 * @return {number}
 */
proto.bosdyn.api.ManipulationApiFeedbackRequest.prototype.getManipulationCmdId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.bosdyn.api.ManipulationApiFeedbackRequest} returns this
 */
proto.bosdyn.api.ManipulationApiFeedbackRequest.prototype.setManipulationCmdId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.ManipulationApiFeedbackResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.ManipulationApiFeedbackResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.ManipulationApiFeedbackResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.ManipulationApiFeedbackResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && bosdyn_api_header_pb.ResponseHeader.toObject(includeInstance, f),
    manipulationCmdId: jspb.Message.getFieldWithDefault(msg, 4, 0),
    currentState: jspb.Message.getFieldWithDefault(msg, 2, 0),
    transformsSnapshotManipulationData: (f = msg.getTransformsSnapshotManipulationData()) && bosdyn_api_geometry_pb.FrameTreeSnapshot.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.ManipulationApiFeedbackResponse}
 */
proto.bosdyn.api.ManipulationApiFeedbackResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.ManipulationApiFeedbackResponse;
  return proto.bosdyn.api.ManipulationApiFeedbackResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.ManipulationApiFeedbackResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.ManipulationApiFeedbackResponse}
 */
proto.bosdyn.api.ManipulationApiFeedbackResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new bosdyn_api_header_pb.ResponseHeader;
      reader.readMessage(value,bosdyn_api_header_pb.ResponseHeader.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setManipulationCmdId(value);
      break;
    case 2:
      var value = /** @type {!proto.bosdyn.api.ManipulationFeedbackState} */ (reader.readEnum());
      msg.setCurrentState(value);
      break;
    case 3:
      var value = new bosdyn_api_geometry_pb.FrameTreeSnapshot;
      reader.readMessage(value,bosdyn_api_geometry_pb.FrameTreeSnapshot.deserializeBinaryFromReader);
      msg.setTransformsSnapshotManipulationData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.ManipulationApiFeedbackResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.ManipulationApiFeedbackResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.ManipulationApiFeedbackResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.ManipulationApiFeedbackResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      bosdyn_api_header_pb.ResponseHeader.serializeBinaryToWriter
    );
  }
  f = message.getManipulationCmdId();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getCurrentState();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getTransformsSnapshotManipulationData();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      bosdyn_api_geometry_pb.FrameTreeSnapshot.serializeBinaryToWriter
    );
  }
};


/**
 * optional ResponseHeader header = 1;
 * @return {?proto.bosdyn.api.ResponseHeader}
 */
proto.bosdyn.api.ManipulationApiFeedbackResponse.prototype.getHeader = function() {
  return /** @type{?proto.bosdyn.api.ResponseHeader} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_header_pb.ResponseHeader, 1));
};


/**
 * @param {?proto.bosdyn.api.ResponseHeader|undefined} value
 * @return {!proto.bosdyn.api.ManipulationApiFeedbackResponse} returns this
*/
proto.bosdyn.api.ManipulationApiFeedbackResponse.prototype.setHeader = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.ManipulationApiFeedbackResponse} returns this
 */
proto.bosdyn.api.ManipulationApiFeedbackResponse.prototype.clearHeader = function() {
  return this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.ManipulationApiFeedbackResponse.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 manipulation_cmd_id = 4;
 * @return {number}
 */
proto.bosdyn.api.ManipulationApiFeedbackResponse.prototype.getManipulationCmdId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.bosdyn.api.ManipulationApiFeedbackResponse} returns this
 */
proto.bosdyn.api.ManipulationApiFeedbackResponse.prototype.setManipulationCmdId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional ManipulationFeedbackState current_state = 2;
 * @return {!proto.bosdyn.api.ManipulationFeedbackState}
 */
proto.bosdyn.api.ManipulationApiFeedbackResponse.prototype.getCurrentState = function() {
  return /** @type {!proto.bosdyn.api.ManipulationFeedbackState} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.bosdyn.api.ManipulationFeedbackState} value
 * @return {!proto.bosdyn.api.ManipulationApiFeedbackResponse} returns this
 */
proto.bosdyn.api.ManipulationApiFeedbackResponse.prototype.setCurrentState = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional FrameTreeSnapshot transforms_snapshot_manipulation_data = 3;
 * @return {?proto.bosdyn.api.FrameTreeSnapshot}
 */
proto.bosdyn.api.ManipulationApiFeedbackResponse.prototype.getTransformsSnapshotManipulationData = function() {
  return /** @type{?proto.bosdyn.api.FrameTreeSnapshot} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_geometry_pb.FrameTreeSnapshot, 3));
};


/**
 * @param {?proto.bosdyn.api.FrameTreeSnapshot|undefined} value
 * @return {!proto.bosdyn.api.ManipulationApiFeedbackResponse} returns this
*/
proto.bosdyn.api.ManipulationApiFeedbackResponse.prototype.setTransformsSnapshotManipulationData = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.ManipulationApiFeedbackResponse} returns this
 */
proto.bosdyn.api.ManipulationApiFeedbackResponse.prototype.clearTransformsSnapshotManipulationData = function() {
  return this.setTransformsSnapshotManipulationData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.ManipulationApiFeedbackResponse.prototype.hasTransformsSnapshotManipulationData = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.ManipulationApiResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.ManipulationApiResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.ManipulationApiResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.ManipulationApiResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && bosdyn_api_header_pb.ResponseHeader.toObject(includeInstance, f),
    manipulationCmdId: jspb.Message.getFieldWithDefault(msg, 5, 0),
    leaseUseResult: (f = msg.getLeaseUseResult()) && bosdyn_api_lease_pb.LeaseUseResult.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.ManipulationApiResponse}
 */
proto.bosdyn.api.ManipulationApiResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.ManipulationApiResponse;
  return proto.bosdyn.api.ManipulationApiResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.ManipulationApiResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.ManipulationApiResponse}
 */
proto.bosdyn.api.ManipulationApiResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new bosdyn_api_header_pb.ResponseHeader;
      reader.readMessage(value,bosdyn_api_header_pb.ResponseHeader.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setManipulationCmdId(value);
      break;
    case 6:
      var value = new bosdyn_api_lease_pb.LeaseUseResult;
      reader.readMessage(value,bosdyn_api_lease_pb.LeaseUseResult.deserializeBinaryFromReader);
      msg.setLeaseUseResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.ManipulationApiResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.ManipulationApiResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.ManipulationApiResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.ManipulationApiResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      bosdyn_api_header_pb.ResponseHeader.serializeBinaryToWriter
    );
  }
  f = message.getManipulationCmdId();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getLeaseUseResult();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      bosdyn_api_lease_pb.LeaseUseResult.serializeBinaryToWriter
    );
  }
};


/**
 * optional ResponseHeader header = 1;
 * @return {?proto.bosdyn.api.ResponseHeader}
 */
proto.bosdyn.api.ManipulationApiResponse.prototype.getHeader = function() {
  return /** @type{?proto.bosdyn.api.ResponseHeader} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_header_pb.ResponseHeader, 1));
};


/**
 * @param {?proto.bosdyn.api.ResponseHeader|undefined} value
 * @return {!proto.bosdyn.api.ManipulationApiResponse} returns this
*/
proto.bosdyn.api.ManipulationApiResponse.prototype.setHeader = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.ManipulationApiResponse} returns this
 */
proto.bosdyn.api.ManipulationApiResponse.prototype.clearHeader = function() {
  return this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.ManipulationApiResponse.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 manipulation_cmd_id = 5;
 * @return {number}
 */
proto.bosdyn.api.ManipulationApiResponse.prototype.getManipulationCmdId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.bosdyn.api.ManipulationApiResponse} returns this
 */
proto.bosdyn.api.ManipulationApiResponse.prototype.setManipulationCmdId = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional LeaseUseResult lease_use_result = 6;
 * @return {?proto.bosdyn.api.LeaseUseResult}
 */
proto.bosdyn.api.ManipulationApiResponse.prototype.getLeaseUseResult = function() {
  return /** @type{?proto.bosdyn.api.LeaseUseResult} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_lease_pb.LeaseUseResult, 6));
};


/**
 * @param {?proto.bosdyn.api.LeaseUseResult|undefined} value
 * @return {!proto.bosdyn.api.ManipulationApiResponse} returns this
*/
proto.bosdyn.api.ManipulationApiResponse.prototype.setLeaseUseResult = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.ManipulationApiResponse} returns this
 */
proto.bosdyn.api.ManipulationApiResponse.prototype.clearLeaseUseResult = function() {
  return this.setLeaseUseResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.ManipulationApiResponse.prototype.hasLeaseUseResult = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.bosdyn.api.ManipulationApiRequest.oneofGroups_ = [[12,13,10,11,4,14]];

/**
 * @enum {number}
 */
proto.bosdyn.api.ManipulationApiRequest.ManipulationCmdCase = {
  MANIPULATION_CMD_NOT_SET: 0,
  WALK_TO_OBJECT_RAY_IN_WORLD: 12,
  WALK_TO_OBJECT_IN_IMAGE: 13,
  PICK_OBJECT: 10,
  PICK_OBJECT_IN_IMAGE: 11,
  PICK_OBJECT_RAY_IN_WORLD: 4,
  PICK_OBJECT_EXECUTE_PLAN: 14
};

/**
 * @return {proto.bosdyn.api.ManipulationApiRequest.ManipulationCmdCase}
 */
proto.bosdyn.api.ManipulationApiRequest.prototype.getManipulationCmdCase = function() {
  return /** @type {proto.bosdyn.api.ManipulationApiRequest.ManipulationCmdCase} */(jspb.Message.computeOneofCase(this, proto.bosdyn.api.ManipulationApiRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.ManipulationApiRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.ManipulationApiRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.ManipulationApiRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.ManipulationApiRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && bosdyn_api_header_pb.RequestHeader.toObject(includeInstance, f),
    lease: (f = msg.getLease()) && bosdyn_api_lease_pb.Lease.toObject(includeInstance, f),
    walkToObjectRayInWorld: (f = msg.getWalkToObjectRayInWorld()) && proto.bosdyn.api.WalkToObjectRayInWorld.toObject(includeInstance, f),
    walkToObjectInImage: (f = msg.getWalkToObjectInImage()) && proto.bosdyn.api.WalkToObjectInImage.toObject(includeInstance, f),
    pickObject: (f = msg.getPickObject()) && proto.bosdyn.api.PickObject.toObject(includeInstance, f),
    pickObjectInImage: (f = msg.getPickObjectInImage()) && proto.bosdyn.api.PickObjectInImage.toObject(includeInstance, f),
    pickObjectRayInWorld: (f = msg.getPickObjectRayInWorld()) && proto.bosdyn.api.PickObjectRayInWorld.toObject(includeInstance, f),
    pickObjectExecutePlan: (f = msg.getPickObjectExecutePlan()) && proto.bosdyn.api.PickObjectExecutePlan.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.ManipulationApiRequest}
 */
proto.bosdyn.api.ManipulationApiRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.ManipulationApiRequest;
  return proto.bosdyn.api.ManipulationApiRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.ManipulationApiRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.ManipulationApiRequest}
 */
proto.bosdyn.api.ManipulationApiRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new bosdyn_api_header_pb.RequestHeader;
      reader.readMessage(value,bosdyn_api_header_pb.RequestHeader.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 2:
      var value = new bosdyn_api_lease_pb.Lease;
      reader.readMessage(value,bosdyn_api_lease_pb.Lease.deserializeBinaryFromReader);
      msg.setLease(value);
      break;
    case 12:
      var value = new proto.bosdyn.api.WalkToObjectRayInWorld;
      reader.readMessage(value,proto.bosdyn.api.WalkToObjectRayInWorld.deserializeBinaryFromReader);
      msg.setWalkToObjectRayInWorld(value);
      break;
    case 13:
      var value = new proto.bosdyn.api.WalkToObjectInImage;
      reader.readMessage(value,proto.bosdyn.api.WalkToObjectInImage.deserializeBinaryFromReader);
      msg.setWalkToObjectInImage(value);
      break;
    case 10:
      var value = new proto.bosdyn.api.PickObject;
      reader.readMessage(value,proto.bosdyn.api.PickObject.deserializeBinaryFromReader);
      msg.setPickObject(value);
      break;
    case 11:
      var value = new proto.bosdyn.api.PickObjectInImage;
      reader.readMessage(value,proto.bosdyn.api.PickObjectInImage.deserializeBinaryFromReader);
      msg.setPickObjectInImage(value);
      break;
    case 4:
      var value = new proto.bosdyn.api.PickObjectRayInWorld;
      reader.readMessage(value,proto.bosdyn.api.PickObjectRayInWorld.deserializeBinaryFromReader);
      msg.setPickObjectRayInWorld(value);
      break;
    case 14:
      var value = new proto.bosdyn.api.PickObjectExecutePlan;
      reader.readMessage(value,proto.bosdyn.api.PickObjectExecutePlan.deserializeBinaryFromReader);
      msg.setPickObjectExecutePlan(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.ManipulationApiRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.ManipulationApiRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.ManipulationApiRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.ManipulationApiRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      bosdyn_api_header_pb.RequestHeader.serializeBinaryToWriter
    );
  }
  f = message.getLease();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      bosdyn_api_lease_pb.Lease.serializeBinaryToWriter
    );
  }
  f = message.getWalkToObjectRayInWorld();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.bosdyn.api.WalkToObjectRayInWorld.serializeBinaryToWriter
    );
  }
  f = message.getWalkToObjectInImage();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.bosdyn.api.WalkToObjectInImage.serializeBinaryToWriter
    );
  }
  f = message.getPickObject();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.bosdyn.api.PickObject.serializeBinaryToWriter
    );
  }
  f = message.getPickObjectInImage();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.bosdyn.api.PickObjectInImage.serializeBinaryToWriter
    );
  }
  f = message.getPickObjectRayInWorld();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.bosdyn.api.PickObjectRayInWorld.serializeBinaryToWriter
    );
  }
  f = message.getPickObjectExecutePlan();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.bosdyn.api.PickObjectExecutePlan.serializeBinaryToWriter
    );
  }
};


/**
 * optional RequestHeader header = 1;
 * @return {?proto.bosdyn.api.RequestHeader}
 */
proto.bosdyn.api.ManipulationApiRequest.prototype.getHeader = function() {
  return /** @type{?proto.bosdyn.api.RequestHeader} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_header_pb.RequestHeader, 1));
};


/**
 * @param {?proto.bosdyn.api.RequestHeader|undefined} value
 * @return {!proto.bosdyn.api.ManipulationApiRequest} returns this
*/
proto.bosdyn.api.ManipulationApiRequest.prototype.setHeader = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.ManipulationApiRequest} returns this
 */
proto.bosdyn.api.ManipulationApiRequest.prototype.clearHeader = function() {
  return this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.ManipulationApiRequest.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Lease lease = 2;
 * @return {?proto.bosdyn.api.Lease}
 */
proto.bosdyn.api.ManipulationApiRequest.prototype.getLease = function() {
  return /** @type{?proto.bosdyn.api.Lease} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_lease_pb.Lease, 2));
};


/**
 * @param {?proto.bosdyn.api.Lease|undefined} value
 * @return {!proto.bosdyn.api.ManipulationApiRequest} returns this
*/
proto.bosdyn.api.ManipulationApiRequest.prototype.setLease = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.ManipulationApiRequest} returns this
 */
proto.bosdyn.api.ManipulationApiRequest.prototype.clearLease = function() {
  return this.setLease(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.ManipulationApiRequest.prototype.hasLease = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional WalkToObjectRayInWorld walk_to_object_ray_in_world = 12;
 * @return {?proto.bosdyn.api.WalkToObjectRayInWorld}
 */
proto.bosdyn.api.ManipulationApiRequest.prototype.getWalkToObjectRayInWorld = function() {
  return /** @type{?proto.bosdyn.api.WalkToObjectRayInWorld} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.WalkToObjectRayInWorld, 12));
};


/**
 * @param {?proto.bosdyn.api.WalkToObjectRayInWorld|undefined} value
 * @return {!proto.bosdyn.api.ManipulationApiRequest} returns this
*/
proto.bosdyn.api.ManipulationApiRequest.prototype.setWalkToObjectRayInWorld = function(value) {
  return jspb.Message.setOneofWrapperField(this, 12, proto.bosdyn.api.ManipulationApiRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.ManipulationApiRequest} returns this
 */
proto.bosdyn.api.ManipulationApiRequest.prototype.clearWalkToObjectRayInWorld = function() {
  return this.setWalkToObjectRayInWorld(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.ManipulationApiRequest.prototype.hasWalkToObjectRayInWorld = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional WalkToObjectInImage walk_to_object_in_image = 13;
 * @return {?proto.bosdyn.api.WalkToObjectInImage}
 */
proto.bosdyn.api.ManipulationApiRequest.prototype.getWalkToObjectInImage = function() {
  return /** @type{?proto.bosdyn.api.WalkToObjectInImage} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.WalkToObjectInImage, 13));
};


/**
 * @param {?proto.bosdyn.api.WalkToObjectInImage|undefined} value
 * @return {!proto.bosdyn.api.ManipulationApiRequest} returns this
*/
proto.bosdyn.api.ManipulationApiRequest.prototype.setWalkToObjectInImage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 13, proto.bosdyn.api.ManipulationApiRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.ManipulationApiRequest} returns this
 */
proto.bosdyn.api.ManipulationApiRequest.prototype.clearWalkToObjectInImage = function() {
  return this.setWalkToObjectInImage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.ManipulationApiRequest.prototype.hasWalkToObjectInImage = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional PickObject pick_object = 10;
 * @return {?proto.bosdyn.api.PickObject}
 */
proto.bosdyn.api.ManipulationApiRequest.prototype.getPickObject = function() {
  return /** @type{?proto.bosdyn.api.PickObject} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.PickObject, 10));
};


/**
 * @param {?proto.bosdyn.api.PickObject|undefined} value
 * @return {!proto.bosdyn.api.ManipulationApiRequest} returns this
*/
proto.bosdyn.api.ManipulationApiRequest.prototype.setPickObject = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.bosdyn.api.ManipulationApiRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.ManipulationApiRequest} returns this
 */
proto.bosdyn.api.ManipulationApiRequest.prototype.clearPickObject = function() {
  return this.setPickObject(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.ManipulationApiRequest.prototype.hasPickObject = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional PickObjectInImage pick_object_in_image = 11;
 * @return {?proto.bosdyn.api.PickObjectInImage}
 */
proto.bosdyn.api.ManipulationApiRequest.prototype.getPickObjectInImage = function() {
  return /** @type{?proto.bosdyn.api.PickObjectInImage} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.PickObjectInImage, 11));
};


/**
 * @param {?proto.bosdyn.api.PickObjectInImage|undefined} value
 * @return {!proto.bosdyn.api.ManipulationApiRequest} returns this
*/
proto.bosdyn.api.ManipulationApiRequest.prototype.setPickObjectInImage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 11, proto.bosdyn.api.ManipulationApiRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.ManipulationApiRequest} returns this
 */
proto.bosdyn.api.ManipulationApiRequest.prototype.clearPickObjectInImage = function() {
  return this.setPickObjectInImage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.ManipulationApiRequest.prototype.hasPickObjectInImage = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional PickObjectRayInWorld pick_object_ray_in_world = 4;
 * @return {?proto.bosdyn.api.PickObjectRayInWorld}
 */
proto.bosdyn.api.ManipulationApiRequest.prototype.getPickObjectRayInWorld = function() {
  return /** @type{?proto.bosdyn.api.PickObjectRayInWorld} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.PickObjectRayInWorld, 4));
};


/**
 * @param {?proto.bosdyn.api.PickObjectRayInWorld|undefined} value
 * @return {!proto.bosdyn.api.ManipulationApiRequest} returns this
*/
proto.bosdyn.api.ManipulationApiRequest.prototype.setPickObjectRayInWorld = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.bosdyn.api.ManipulationApiRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.ManipulationApiRequest} returns this
 */
proto.bosdyn.api.ManipulationApiRequest.prototype.clearPickObjectRayInWorld = function() {
  return this.setPickObjectRayInWorld(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.ManipulationApiRequest.prototype.hasPickObjectRayInWorld = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional PickObjectExecutePlan pick_object_execute_plan = 14;
 * @return {?proto.bosdyn.api.PickObjectExecutePlan}
 */
proto.bosdyn.api.ManipulationApiRequest.prototype.getPickObjectExecutePlan = function() {
  return /** @type{?proto.bosdyn.api.PickObjectExecutePlan} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.PickObjectExecutePlan, 14));
};


/**
 * @param {?proto.bosdyn.api.PickObjectExecutePlan|undefined} value
 * @return {!proto.bosdyn.api.ManipulationApiRequest} returns this
*/
proto.bosdyn.api.ManipulationApiRequest.prototype.setPickObjectExecutePlan = function(value) {
  return jspb.Message.setOneofWrapperField(this, 14, proto.bosdyn.api.ManipulationApiRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.ManipulationApiRequest} returns this
 */
proto.bosdyn.api.ManipulationApiRequest.prototype.clearPickObjectExecutePlan = function() {
  return this.setPickObjectExecutePlan(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.ManipulationApiRequest.prototype.hasPickObjectExecutePlan = function() {
  return jspb.Message.getField(this, 14) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.ApiGraspOverride.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.ApiGraspOverride.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.ApiGraspOverride} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.ApiGraspOverride.toObject = function(includeInstance, msg) {
  var f, obj = {
    overrideRequest: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.ApiGraspOverride}
 */
proto.bosdyn.api.ApiGraspOverride.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.ApiGraspOverride;
  return proto.bosdyn.api.ApiGraspOverride.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.ApiGraspOverride} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.ApiGraspOverride}
 */
proto.bosdyn.api.ApiGraspOverride.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.bosdyn.api.ApiGraspOverride.Override} */ (reader.readEnum());
      msg.setOverrideRequest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.ApiGraspOverride.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.ApiGraspOverride.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.ApiGraspOverride} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.ApiGraspOverride.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOverrideRequest();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.bosdyn.api.ApiGraspOverride.Override = {
  OVERRIDE_UNKNOWN: 0,
  OVERRIDE_HOLDING: 1,
  OVERRIDE_NOT_HOLDING: 2
};

/**
 * optional Override override_request = 1;
 * @return {!proto.bosdyn.api.ApiGraspOverride.Override}
 */
proto.bosdyn.api.ApiGraspOverride.prototype.getOverrideRequest = function() {
  return /** @type {!proto.bosdyn.api.ApiGraspOverride.Override} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.bosdyn.api.ApiGraspOverride.Override} value
 * @return {!proto.bosdyn.api.ApiGraspOverride} returns this
 */
proto.bosdyn.api.ApiGraspOverride.prototype.setOverrideRequest = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.ApiGraspedCarryStateOverride.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.ApiGraspedCarryStateOverride.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.ApiGraspedCarryStateOverride} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.ApiGraspedCarryStateOverride.toObject = function(includeInstance, msg) {
  var f, obj = {
    overrideRequest: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.ApiGraspedCarryStateOverride}
 */
proto.bosdyn.api.ApiGraspedCarryStateOverride.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.ApiGraspedCarryStateOverride;
  return proto.bosdyn.api.ApiGraspedCarryStateOverride.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.ApiGraspedCarryStateOverride} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.ApiGraspedCarryStateOverride}
 */
proto.bosdyn.api.ApiGraspedCarryStateOverride.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.bosdyn.api.ManipulatorState.CarryState} */ (reader.readEnum());
      msg.setOverrideRequest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.ApiGraspedCarryStateOverride.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.ApiGraspedCarryStateOverride.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.ApiGraspedCarryStateOverride} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.ApiGraspedCarryStateOverride.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOverrideRequest();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * optional ManipulatorState.CarryState override_request = 1;
 * @return {!proto.bosdyn.api.ManipulatorState.CarryState}
 */
proto.bosdyn.api.ApiGraspedCarryStateOverride.prototype.getOverrideRequest = function() {
  return /** @type {!proto.bosdyn.api.ManipulatorState.CarryState} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.bosdyn.api.ManipulatorState.CarryState} value
 * @return {!proto.bosdyn.api.ApiGraspedCarryStateOverride} returns this
 */
proto.bosdyn.api.ApiGraspedCarryStateOverride.prototype.setOverrideRequest = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.ApiGraspOverrideRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.ApiGraspOverrideRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.ApiGraspOverrideRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.ApiGraspOverrideRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && bosdyn_api_header_pb.RequestHeader.toObject(includeInstance, f),
    apiGraspOverride: (f = msg.getApiGraspOverride()) && proto.bosdyn.api.ApiGraspOverride.toObject(includeInstance, f),
    carryStateOverride: (f = msg.getCarryStateOverride()) && proto.bosdyn.api.ApiGraspedCarryStateOverride.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.ApiGraspOverrideRequest}
 */
proto.bosdyn.api.ApiGraspOverrideRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.ApiGraspOverrideRequest;
  return proto.bosdyn.api.ApiGraspOverrideRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.ApiGraspOverrideRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.ApiGraspOverrideRequest}
 */
proto.bosdyn.api.ApiGraspOverrideRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new bosdyn_api_header_pb.RequestHeader;
      reader.readMessage(value,bosdyn_api_header_pb.RequestHeader.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 4:
      var value = new proto.bosdyn.api.ApiGraspOverride;
      reader.readMessage(value,proto.bosdyn.api.ApiGraspOverride.deserializeBinaryFromReader);
      msg.setApiGraspOverride(value);
      break;
    case 2:
      var value = new proto.bosdyn.api.ApiGraspedCarryStateOverride;
      reader.readMessage(value,proto.bosdyn.api.ApiGraspedCarryStateOverride.deserializeBinaryFromReader);
      msg.setCarryStateOverride(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.ApiGraspOverrideRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.ApiGraspOverrideRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.ApiGraspOverrideRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.ApiGraspOverrideRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      bosdyn_api_header_pb.RequestHeader.serializeBinaryToWriter
    );
  }
  f = message.getApiGraspOverride();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.bosdyn.api.ApiGraspOverride.serializeBinaryToWriter
    );
  }
  f = message.getCarryStateOverride();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.bosdyn.api.ApiGraspedCarryStateOverride.serializeBinaryToWriter
    );
  }
};


/**
 * optional RequestHeader header = 1;
 * @return {?proto.bosdyn.api.RequestHeader}
 */
proto.bosdyn.api.ApiGraspOverrideRequest.prototype.getHeader = function() {
  return /** @type{?proto.bosdyn.api.RequestHeader} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_header_pb.RequestHeader, 1));
};


/**
 * @param {?proto.bosdyn.api.RequestHeader|undefined} value
 * @return {!proto.bosdyn.api.ApiGraspOverrideRequest} returns this
*/
proto.bosdyn.api.ApiGraspOverrideRequest.prototype.setHeader = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.ApiGraspOverrideRequest} returns this
 */
proto.bosdyn.api.ApiGraspOverrideRequest.prototype.clearHeader = function() {
  return this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.ApiGraspOverrideRequest.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ApiGraspOverride api_grasp_override = 4;
 * @return {?proto.bosdyn.api.ApiGraspOverride}
 */
proto.bosdyn.api.ApiGraspOverrideRequest.prototype.getApiGraspOverride = function() {
  return /** @type{?proto.bosdyn.api.ApiGraspOverride} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.ApiGraspOverride, 4));
};


/**
 * @param {?proto.bosdyn.api.ApiGraspOverride|undefined} value
 * @return {!proto.bosdyn.api.ApiGraspOverrideRequest} returns this
*/
proto.bosdyn.api.ApiGraspOverrideRequest.prototype.setApiGraspOverride = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.ApiGraspOverrideRequest} returns this
 */
proto.bosdyn.api.ApiGraspOverrideRequest.prototype.clearApiGraspOverride = function() {
  return this.setApiGraspOverride(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.ApiGraspOverrideRequest.prototype.hasApiGraspOverride = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ApiGraspedCarryStateOverride carry_state_override = 2;
 * @return {?proto.bosdyn.api.ApiGraspedCarryStateOverride}
 */
proto.bosdyn.api.ApiGraspOverrideRequest.prototype.getCarryStateOverride = function() {
  return /** @type{?proto.bosdyn.api.ApiGraspedCarryStateOverride} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.ApiGraspedCarryStateOverride, 2));
};


/**
 * @param {?proto.bosdyn.api.ApiGraspedCarryStateOverride|undefined} value
 * @return {!proto.bosdyn.api.ApiGraspOverrideRequest} returns this
*/
proto.bosdyn.api.ApiGraspOverrideRequest.prototype.setCarryStateOverride = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.ApiGraspOverrideRequest} returns this
 */
proto.bosdyn.api.ApiGraspOverrideRequest.prototype.clearCarryStateOverride = function() {
  return this.setCarryStateOverride(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.ApiGraspOverrideRequest.prototype.hasCarryStateOverride = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.ApiGraspOverrideResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.ApiGraspOverrideResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.ApiGraspOverrideResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.ApiGraspOverrideResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && bosdyn_api_header_pb.ResponseHeader.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.ApiGraspOverrideResponse}
 */
proto.bosdyn.api.ApiGraspOverrideResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.ApiGraspOverrideResponse;
  return proto.bosdyn.api.ApiGraspOverrideResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.ApiGraspOverrideResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.ApiGraspOverrideResponse}
 */
proto.bosdyn.api.ApiGraspOverrideResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new bosdyn_api_header_pb.ResponseHeader;
      reader.readMessage(value,bosdyn_api_header_pb.ResponseHeader.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.ApiGraspOverrideResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.ApiGraspOverrideResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.ApiGraspOverrideResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.ApiGraspOverrideResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      bosdyn_api_header_pb.ResponseHeader.serializeBinaryToWriter
    );
  }
};


/**
 * optional ResponseHeader header = 1;
 * @return {?proto.bosdyn.api.ResponseHeader}
 */
proto.bosdyn.api.ApiGraspOverrideResponse.prototype.getHeader = function() {
  return /** @type{?proto.bosdyn.api.ResponseHeader} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_header_pb.ResponseHeader, 1));
};


/**
 * @param {?proto.bosdyn.api.ResponseHeader|undefined} value
 * @return {!proto.bosdyn.api.ApiGraspOverrideResponse} returns this
*/
proto.bosdyn.api.ApiGraspOverrideResponse.prototype.setHeader = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.ApiGraspOverrideResponse} returns this
 */
proto.bosdyn.api.ApiGraspOverrideResponse.prototype.clearHeader = function() {
  return this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.ApiGraspOverrideResponse.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * @enum {number}
 */
proto.bosdyn.api.GraspPositionConstraint = {
  GRASP_POSITION_CONSTRAINT_UNKNOWN: 0,
  GRASP_POSITION_CONSTRAINT_NORMAL: 1,
  GRASP_POSITION_CONSTRAINT_FIXED_AT_USER_POSITION: 2
};

/**
 * @enum {number}
 */
proto.bosdyn.api.ManipulationFeedbackState = {
  MANIP_STATE_UNKNOWN: 0,
  MANIP_STATE_DONE: 1,
  MANIP_STATE_SEARCHING_FOR_GRASP: 2,
  MANIP_STATE_MOVING_TO_GRASP: 3,
  MANIP_STATE_GRASPING_OBJECT: 4,
  MANIP_STATE_PLACING_OBJECT: 5,
  MANIP_STATE_GRASP_SUCCEEDED: 6,
  MANIP_STATE_GRASP_FAILED: 7,
  MANIP_STATE_GRASP_PLANNING_SUCCEEDED: 11,
  MANIP_STATE_GRASP_PLANNING_NO_SOLUTION: 8,
  MANIP_STATE_GRASP_FAILED_TO_RAYCAST_INTO_MAP: 9,
  MANIP_STATE_GRASP_PLANNING_WAITING_DATA_AT_EDGE: 13,
  MANIP_STATE_WALKING_TO_OBJECT: 10,
  MANIP_STATE_ATTEMPTING_RAYCASTING: 12,
  MANIP_STATE_MOVING_TO_PLACE: 14,
  MANIP_STATE_PLACE_FAILED_TO_RAYCAST_INTO_MAP: 15,
  MANIP_STATE_PLACE_SUCCEEDED: 16,
  MANIP_STATE_PLACE_FAILED: 17
};

/**
 * @enum {number}
 */
proto.bosdyn.api.ManipulationCameraSource = {
  MANIPULATION_CAMERA_SOURCE_UNKNOWN: 0,
  MANIPULATION_CAMERA_SOURCE_STEREO: 1,
  MANIPULATION_CAMERA_SOURCE_HAND: 2
};

/**
 * @enum {number}
 */
proto.bosdyn.api.WalkGazeMode = {
  PICK_WALK_GAZE_UNKNOWN: 0,
  PICK_AUTO_WALK_AND_GAZE: 1,
  PICK_AUTO_GAZE: 2,
  PICK_NO_AUTO_WALK_OR_GAZE: 3,
  PICK_PLAN_ONLY: 4
};

goog.object.extend(exports, proto.bosdyn.api);
