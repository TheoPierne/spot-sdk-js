// source: bosdyn/api/synchronized_command.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var bosdyn_api_arm_command_pb = require('../../bosdyn/api/arm_command_pb.js');
goog.object.extend(proto, bosdyn_api_arm_command_pb);
var bosdyn_api_gripper_command_pb = require('../../bosdyn/api/gripper_command_pb.js');
goog.object.extend(proto, bosdyn_api_gripper_command_pb);
var bosdyn_api_mobility_command_pb = require('../../bosdyn/api/mobility_command_pb.js');
goog.object.extend(proto, bosdyn_api_mobility_command_pb);
goog.exportSymbol('proto.bosdyn.api.SynchronizedCommand', null, global);
goog.exportSymbol('proto.bosdyn.api.SynchronizedCommand.Feedback', null, global);
goog.exportSymbol('proto.bosdyn.api.SynchronizedCommand.Request', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.SynchronizedCommand = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.SynchronizedCommand, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.SynchronizedCommand.displayName = 'proto.bosdyn.api.SynchronizedCommand';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.SynchronizedCommand.Request = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.SynchronizedCommand.Request, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.SynchronizedCommand.Request.displayName = 'proto.bosdyn.api.SynchronizedCommand.Request';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.SynchronizedCommand.Feedback = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.SynchronizedCommand.Feedback, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.SynchronizedCommand.Feedback.displayName = 'proto.bosdyn.api.SynchronizedCommand.Feedback';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.SynchronizedCommand.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.SynchronizedCommand.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.SynchronizedCommand} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.SynchronizedCommand.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.SynchronizedCommand}
 */
proto.bosdyn.api.SynchronizedCommand.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.SynchronizedCommand;
  return proto.bosdyn.api.SynchronizedCommand.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.SynchronizedCommand} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.SynchronizedCommand}
 */
proto.bosdyn.api.SynchronizedCommand.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.SynchronizedCommand.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.SynchronizedCommand.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.SynchronizedCommand} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.SynchronizedCommand.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.SynchronizedCommand.Request.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.SynchronizedCommand.Request.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.SynchronizedCommand.Request} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.SynchronizedCommand.Request.toObject = function(includeInstance, msg) {
  var f, obj = {
    armCommand: (f = msg.getArmCommand()) && bosdyn_api_arm_command_pb.ArmCommand.Request.toObject(includeInstance, f),
    mobilityCommand: (f = msg.getMobilityCommand()) && bosdyn_api_mobility_command_pb.MobilityCommand.Request.toObject(includeInstance, f),
    gripperCommand: (f = msg.getGripperCommand()) && bosdyn_api_gripper_command_pb.GripperCommand.Request.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.SynchronizedCommand.Request}
 */
proto.bosdyn.api.SynchronizedCommand.Request.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.SynchronizedCommand.Request;
  return proto.bosdyn.api.SynchronizedCommand.Request.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.SynchronizedCommand.Request} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.SynchronizedCommand.Request}
 */
proto.bosdyn.api.SynchronizedCommand.Request.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new bosdyn_api_arm_command_pb.ArmCommand.Request;
      reader.readMessage(value,bosdyn_api_arm_command_pb.ArmCommand.Request.deserializeBinaryFromReader);
      msg.setArmCommand(value);
      break;
    case 2:
      var value = new bosdyn_api_mobility_command_pb.MobilityCommand.Request;
      reader.readMessage(value,bosdyn_api_mobility_command_pb.MobilityCommand.Request.deserializeBinaryFromReader);
      msg.setMobilityCommand(value);
      break;
    case 3:
      var value = new bosdyn_api_gripper_command_pb.GripperCommand.Request;
      reader.readMessage(value,bosdyn_api_gripper_command_pb.GripperCommand.Request.deserializeBinaryFromReader);
      msg.setGripperCommand(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.SynchronizedCommand.Request.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.SynchronizedCommand.Request.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.SynchronizedCommand.Request} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.SynchronizedCommand.Request.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getArmCommand();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      bosdyn_api_arm_command_pb.ArmCommand.Request.serializeBinaryToWriter
    );
  }
  f = message.getMobilityCommand();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      bosdyn_api_mobility_command_pb.MobilityCommand.Request.serializeBinaryToWriter
    );
  }
  f = message.getGripperCommand();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      bosdyn_api_gripper_command_pb.GripperCommand.Request.serializeBinaryToWriter
    );
  }
};


/**
 * optional ArmCommand.Request arm_command = 1;
 * @return {?proto.bosdyn.api.ArmCommand.Request}
 */
proto.bosdyn.api.SynchronizedCommand.Request.prototype.getArmCommand = function() {
  return /** @type{?proto.bosdyn.api.ArmCommand.Request} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_arm_command_pb.ArmCommand.Request, 1));
};


/**
 * @param {?proto.bosdyn.api.ArmCommand.Request|undefined} value
 * @return {!proto.bosdyn.api.SynchronizedCommand.Request} returns this
*/
proto.bosdyn.api.SynchronizedCommand.Request.prototype.setArmCommand = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.SynchronizedCommand.Request} returns this
 */
proto.bosdyn.api.SynchronizedCommand.Request.prototype.clearArmCommand = function() {
  return this.setArmCommand(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.SynchronizedCommand.Request.prototype.hasArmCommand = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional MobilityCommand.Request mobility_command = 2;
 * @return {?proto.bosdyn.api.MobilityCommand.Request}
 */
proto.bosdyn.api.SynchronizedCommand.Request.prototype.getMobilityCommand = function() {
  return /** @type{?proto.bosdyn.api.MobilityCommand.Request} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_mobility_command_pb.MobilityCommand.Request, 2));
};


/**
 * @param {?proto.bosdyn.api.MobilityCommand.Request|undefined} value
 * @return {!proto.bosdyn.api.SynchronizedCommand.Request} returns this
*/
proto.bosdyn.api.SynchronizedCommand.Request.prototype.setMobilityCommand = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.SynchronizedCommand.Request} returns this
 */
proto.bosdyn.api.SynchronizedCommand.Request.prototype.clearMobilityCommand = function() {
  return this.setMobilityCommand(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.SynchronizedCommand.Request.prototype.hasMobilityCommand = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional GripperCommand.Request gripper_command = 3;
 * @return {?proto.bosdyn.api.GripperCommand.Request}
 */
proto.bosdyn.api.SynchronizedCommand.Request.prototype.getGripperCommand = function() {
  return /** @type{?proto.bosdyn.api.GripperCommand.Request} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_gripper_command_pb.GripperCommand.Request, 3));
};


/**
 * @param {?proto.bosdyn.api.GripperCommand.Request|undefined} value
 * @return {!proto.bosdyn.api.SynchronizedCommand.Request} returns this
*/
proto.bosdyn.api.SynchronizedCommand.Request.prototype.setGripperCommand = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.SynchronizedCommand.Request} returns this
 */
proto.bosdyn.api.SynchronizedCommand.Request.prototype.clearGripperCommand = function() {
  return this.setGripperCommand(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.SynchronizedCommand.Request.prototype.hasGripperCommand = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.SynchronizedCommand.Feedback.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.SynchronizedCommand.Feedback.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.SynchronizedCommand.Feedback} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.SynchronizedCommand.Feedback.toObject = function(includeInstance, msg) {
  var f, obj = {
    armCommandFeedback: (f = msg.getArmCommandFeedback()) && bosdyn_api_arm_command_pb.ArmCommand.Feedback.toObject(includeInstance, f),
    mobilityCommandFeedback: (f = msg.getMobilityCommandFeedback()) && bosdyn_api_mobility_command_pb.MobilityCommand.Feedback.toObject(includeInstance, f),
    gripperCommandFeedback: (f = msg.getGripperCommandFeedback()) && bosdyn_api_gripper_command_pb.GripperCommand.Feedback.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.SynchronizedCommand.Feedback}
 */
proto.bosdyn.api.SynchronizedCommand.Feedback.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.SynchronizedCommand.Feedback;
  return proto.bosdyn.api.SynchronizedCommand.Feedback.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.SynchronizedCommand.Feedback} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.SynchronizedCommand.Feedback}
 */
proto.bosdyn.api.SynchronizedCommand.Feedback.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new bosdyn_api_arm_command_pb.ArmCommand.Feedback;
      reader.readMessage(value,bosdyn_api_arm_command_pb.ArmCommand.Feedback.deserializeBinaryFromReader);
      msg.setArmCommandFeedback(value);
      break;
    case 2:
      var value = new bosdyn_api_mobility_command_pb.MobilityCommand.Feedback;
      reader.readMessage(value,bosdyn_api_mobility_command_pb.MobilityCommand.Feedback.deserializeBinaryFromReader);
      msg.setMobilityCommandFeedback(value);
      break;
    case 3:
      var value = new bosdyn_api_gripper_command_pb.GripperCommand.Feedback;
      reader.readMessage(value,bosdyn_api_gripper_command_pb.GripperCommand.Feedback.deserializeBinaryFromReader);
      msg.setGripperCommandFeedback(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.SynchronizedCommand.Feedback.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.SynchronizedCommand.Feedback.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.SynchronizedCommand.Feedback} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.SynchronizedCommand.Feedback.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getArmCommandFeedback();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      bosdyn_api_arm_command_pb.ArmCommand.Feedback.serializeBinaryToWriter
    );
  }
  f = message.getMobilityCommandFeedback();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      bosdyn_api_mobility_command_pb.MobilityCommand.Feedback.serializeBinaryToWriter
    );
  }
  f = message.getGripperCommandFeedback();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      bosdyn_api_gripper_command_pb.GripperCommand.Feedback.serializeBinaryToWriter
    );
  }
};


/**
 * optional ArmCommand.Feedback arm_command_feedback = 1;
 * @return {?proto.bosdyn.api.ArmCommand.Feedback}
 */
proto.bosdyn.api.SynchronizedCommand.Feedback.prototype.getArmCommandFeedback = function() {
  return /** @type{?proto.bosdyn.api.ArmCommand.Feedback} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_arm_command_pb.ArmCommand.Feedback, 1));
};


/**
 * @param {?proto.bosdyn.api.ArmCommand.Feedback|undefined} value
 * @return {!proto.bosdyn.api.SynchronizedCommand.Feedback} returns this
*/
proto.bosdyn.api.SynchronizedCommand.Feedback.prototype.setArmCommandFeedback = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.SynchronizedCommand.Feedback} returns this
 */
proto.bosdyn.api.SynchronizedCommand.Feedback.prototype.clearArmCommandFeedback = function() {
  return this.setArmCommandFeedback(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.SynchronizedCommand.Feedback.prototype.hasArmCommandFeedback = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional MobilityCommand.Feedback mobility_command_feedback = 2;
 * @return {?proto.bosdyn.api.MobilityCommand.Feedback}
 */
proto.bosdyn.api.SynchronizedCommand.Feedback.prototype.getMobilityCommandFeedback = function() {
  return /** @type{?proto.bosdyn.api.MobilityCommand.Feedback} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_mobility_command_pb.MobilityCommand.Feedback, 2));
};


/**
 * @param {?proto.bosdyn.api.MobilityCommand.Feedback|undefined} value
 * @return {!proto.bosdyn.api.SynchronizedCommand.Feedback} returns this
*/
proto.bosdyn.api.SynchronizedCommand.Feedback.prototype.setMobilityCommandFeedback = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.SynchronizedCommand.Feedback} returns this
 */
proto.bosdyn.api.SynchronizedCommand.Feedback.prototype.clearMobilityCommandFeedback = function() {
  return this.setMobilityCommandFeedback(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.SynchronizedCommand.Feedback.prototype.hasMobilityCommandFeedback = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional GripperCommand.Feedback gripper_command_feedback = 3;
 * @return {?proto.bosdyn.api.GripperCommand.Feedback}
 */
proto.bosdyn.api.SynchronizedCommand.Feedback.prototype.getGripperCommandFeedback = function() {
  return /** @type{?proto.bosdyn.api.GripperCommand.Feedback} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_gripper_command_pb.GripperCommand.Feedback, 3));
};


/**
 * @param {?proto.bosdyn.api.GripperCommand.Feedback|undefined} value
 * @return {!proto.bosdyn.api.SynchronizedCommand.Feedback} returns this
*/
proto.bosdyn.api.SynchronizedCommand.Feedback.prototype.setGripperCommandFeedback = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.SynchronizedCommand.Feedback} returns this
 */
proto.bosdyn.api.SynchronizedCommand.Feedback.prototype.clearGripperCommandFeedback = function() {
  return this.setGripperCommandFeedback(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.SynchronizedCommand.Feedback.prototype.hasGripperCommandFeedback = function() {
  return jspb.Message.getField(this, 3) != null;
};


goog.object.extend(exports, proto.bosdyn.api);
