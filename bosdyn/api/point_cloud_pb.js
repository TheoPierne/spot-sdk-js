// source: bosdyn/api/point_cloud.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var bosdyn_api_header_pb = require('../../bosdyn/api/header_pb.js');
goog.object.extend(proto, bosdyn_api_header_pb);
var bosdyn_api_geometry_pb = require('../../bosdyn/api/geometry_pb.js');
goog.object.extend(proto, bosdyn_api_geometry_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.bosdyn.api.GetPointCloudRequest', null, global);
goog.exportSymbol('proto.bosdyn.api.GetPointCloudResponse', null, global);
goog.exportSymbol('proto.bosdyn.api.ListPointCloudSourcesRequest', null, global);
goog.exportSymbol('proto.bosdyn.api.ListPointCloudSourcesResponse', null, global);
goog.exportSymbol('proto.bosdyn.api.PointCloud', null, global);
goog.exportSymbol('proto.bosdyn.api.PointCloud.Encoding', null, global);
goog.exportSymbol('proto.bosdyn.api.PointCloud.EncodingParameters', null, global);
goog.exportSymbol('proto.bosdyn.api.PointCloudRequest', null, global);
goog.exportSymbol('proto.bosdyn.api.PointCloudResponse', null, global);
goog.exportSymbol('proto.bosdyn.api.PointCloudResponse.Status', null, global);
goog.exportSymbol('proto.bosdyn.api.PointCloudSource', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.PointCloudSource = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.PointCloudSource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.PointCloudSource.displayName = 'proto.bosdyn.api.PointCloudSource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.PointCloud = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.PointCloud, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.PointCloud.displayName = 'proto.bosdyn.api.PointCloud';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.PointCloud.EncodingParameters = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.PointCloud.EncodingParameters, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.PointCloud.EncodingParameters.displayName = 'proto.bosdyn.api.PointCloud.EncodingParameters';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.ListPointCloudSourcesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.ListPointCloudSourcesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.ListPointCloudSourcesRequest.displayName = 'proto.bosdyn.api.ListPointCloudSourcesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.ListPointCloudSourcesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bosdyn.api.ListPointCloudSourcesResponse.repeatedFields_, null);
};
goog.inherits(proto.bosdyn.api.ListPointCloudSourcesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.ListPointCloudSourcesResponse.displayName = 'proto.bosdyn.api.ListPointCloudSourcesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.PointCloudRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.PointCloudRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.PointCloudRequest.displayName = 'proto.bosdyn.api.PointCloudRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.GetPointCloudRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bosdyn.api.GetPointCloudRequest.repeatedFields_, null);
};
goog.inherits(proto.bosdyn.api.GetPointCloudRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.GetPointCloudRequest.displayName = 'proto.bosdyn.api.GetPointCloudRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.PointCloudResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.PointCloudResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.PointCloudResponse.displayName = 'proto.bosdyn.api.PointCloudResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.GetPointCloudResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bosdyn.api.GetPointCloudResponse.repeatedFields_, null);
};
goog.inherits(proto.bosdyn.api.GetPointCloudResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.GetPointCloudResponse.displayName = 'proto.bosdyn.api.GetPointCloudResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.PointCloudSource.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.PointCloudSource.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.PointCloudSource} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.PointCloudSource.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    frameNameSensor: jspb.Message.getFieldWithDefault(msg, 3, ""),
    acquisitionTime: (f = msg.getAcquisitionTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    transformsSnapshot: (f = msg.getTransformsSnapshot()) && bosdyn_api_geometry_pb.FrameTreeSnapshot.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.PointCloudSource}
 */
proto.bosdyn.api.PointCloudSource.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.PointCloudSource;
  return proto.bosdyn.api.PointCloudSource.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.PointCloudSource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.PointCloudSource}
 */
proto.bosdyn.api.PointCloudSource.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFrameNameSensor(value);
      break;
    case 30:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setAcquisitionTime(value);
      break;
    case 31:
      var value = new bosdyn_api_geometry_pb.FrameTreeSnapshot;
      reader.readMessage(value,bosdyn_api_geometry_pb.FrameTreeSnapshot.deserializeBinaryFromReader);
      msg.setTransformsSnapshot(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.PointCloudSource.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.PointCloudSource.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.PointCloudSource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.PointCloudSource.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFrameNameSensor();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAcquisitionTime();
  if (f != null) {
    writer.writeMessage(
      30,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getTransformsSnapshot();
  if (f != null) {
    writer.writeMessage(
      31,
      f,
      bosdyn_api_geometry_pb.FrameTreeSnapshot.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.bosdyn.api.PointCloudSource.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bosdyn.api.PointCloudSource} returns this
 */
proto.bosdyn.api.PointCloudSource.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string frame_name_sensor = 3;
 * @return {string}
 */
proto.bosdyn.api.PointCloudSource.prototype.getFrameNameSensor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.bosdyn.api.PointCloudSource} returns this
 */
proto.bosdyn.api.PointCloudSource.prototype.setFrameNameSensor = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional google.protobuf.Timestamp acquisition_time = 30;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.bosdyn.api.PointCloudSource.prototype.getAcquisitionTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 30));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.bosdyn.api.PointCloudSource} returns this
*/
proto.bosdyn.api.PointCloudSource.prototype.setAcquisitionTime = function(value) {
  return jspb.Message.setWrapperField(this, 30, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.PointCloudSource} returns this
 */
proto.bosdyn.api.PointCloudSource.prototype.clearAcquisitionTime = function() {
  return this.setAcquisitionTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.PointCloudSource.prototype.hasAcquisitionTime = function() {
  return jspb.Message.getField(this, 30) != null;
};


/**
 * optional FrameTreeSnapshot transforms_snapshot = 31;
 * @return {?proto.bosdyn.api.FrameTreeSnapshot}
 */
proto.bosdyn.api.PointCloudSource.prototype.getTransformsSnapshot = function() {
  return /** @type{?proto.bosdyn.api.FrameTreeSnapshot} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_geometry_pb.FrameTreeSnapshot, 31));
};


/**
 * @param {?proto.bosdyn.api.FrameTreeSnapshot|undefined} value
 * @return {!proto.bosdyn.api.PointCloudSource} returns this
*/
proto.bosdyn.api.PointCloudSource.prototype.setTransformsSnapshot = function(value) {
  return jspb.Message.setWrapperField(this, 31, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.PointCloudSource} returns this
 */
proto.bosdyn.api.PointCloudSource.prototype.clearTransformsSnapshot = function() {
  return this.setTransformsSnapshot(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.PointCloudSource.prototype.hasTransformsSnapshot = function() {
  return jspb.Message.getField(this, 31) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.PointCloud.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.PointCloud.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.PointCloud} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.PointCloud.toObject = function(includeInstance, msg) {
  var f, obj = {
    source: (f = msg.getSource()) && proto.bosdyn.api.PointCloudSource.toObject(includeInstance, f),
    numPoints: jspb.Message.getFieldWithDefault(msg, 2, 0),
    encoding: jspb.Message.getFieldWithDefault(msg, 3, 0),
    encodingParameters: (f = msg.getEncodingParameters()) && proto.bosdyn.api.PointCloud.EncodingParameters.toObject(includeInstance, f),
    data: msg.getData_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.PointCloud}
 */
proto.bosdyn.api.PointCloud.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.PointCloud;
  return proto.bosdyn.api.PointCloud.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.PointCloud} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.PointCloud}
 */
proto.bosdyn.api.PointCloud.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.bosdyn.api.PointCloudSource;
      reader.readMessage(value,proto.bosdyn.api.PointCloudSource.deserializeBinaryFromReader);
      msg.setSource(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumPoints(value);
      break;
    case 3:
      var value = /** @type {!proto.bosdyn.api.PointCloud.Encoding} */ (reader.readEnum());
      msg.setEncoding(value);
      break;
    case 4:
      var value = new proto.bosdyn.api.PointCloud.EncodingParameters;
      reader.readMessage(value,proto.bosdyn.api.PointCloud.EncodingParameters.deserializeBinaryFromReader);
      msg.setEncodingParameters(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.PointCloud.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.PointCloud.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.PointCloud} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.PointCloud.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSource();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.bosdyn.api.PointCloudSource.serializeBinaryToWriter
    );
  }
  f = message.getNumPoints();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getEncoding();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getEncodingParameters();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.bosdyn.api.PointCloud.EncodingParameters.serializeBinaryToWriter
    );
  }
  f = message.getData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      5,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.bosdyn.api.PointCloud.Encoding = {
  ENCODING_UNKNOWN: 0,
  ENCODING_XYZ_32F: 1,
  ENCODING_XYZ_4SC: 2,
  ENCODING_XYZ_5SC: 3
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.PointCloud.EncodingParameters.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.PointCloud.EncodingParameters.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.PointCloud.EncodingParameters} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.PointCloud.EncodingParameters.toObject = function(includeInstance, msg) {
  var f, obj = {
    scaleFactor: jspb.Message.getFieldWithDefault(msg, 1, 0),
    maxX: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    maxY: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    maxZ: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    remappingConstant: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    bytesPerPoint: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.PointCloud.EncodingParameters}
 */
proto.bosdyn.api.PointCloud.EncodingParameters.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.PointCloud.EncodingParameters;
  return proto.bosdyn.api.PointCloud.EncodingParameters.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.PointCloud.EncodingParameters} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.PointCloud.EncodingParameters}
 */
proto.bosdyn.api.PointCloud.EncodingParameters.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setScaleFactor(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMaxX(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMaxY(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMaxZ(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRemappingConstant(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBytesPerPoint(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.PointCloud.EncodingParameters.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.PointCloud.EncodingParameters.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.PointCloud.EncodingParameters} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.PointCloud.EncodingParameters.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getScaleFactor();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getMaxX();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getMaxY();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getMaxZ();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getRemappingConstant();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getBytesPerPoint();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
};


/**
 * optional int32 scale_factor = 1;
 * @return {number}
 */
proto.bosdyn.api.PointCloud.EncodingParameters.prototype.getScaleFactor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.bosdyn.api.PointCloud.EncodingParameters} returns this
 */
proto.bosdyn.api.PointCloud.EncodingParameters.prototype.setScaleFactor = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional double max_x = 2;
 * @return {number}
 */
proto.bosdyn.api.PointCloud.EncodingParameters.prototype.getMaxX = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.bosdyn.api.PointCloud.EncodingParameters} returns this
 */
proto.bosdyn.api.PointCloud.EncodingParameters.prototype.setMaxX = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double max_y = 3;
 * @return {number}
 */
proto.bosdyn.api.PointCloud.EncodingParameters.prototype.getMaxY = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.bosdyn.api.PointCloud.EncodingParameters} returns this
 */
proto.bosdyn.api.PointCloud.EncodingParameters.prototype.setMaxY = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional double max_z = 4;
 * @return {number}
 */
proto.bosdyn.api.PointCloud.EncodingParameters.prototype.getMaxZ = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.bosdyn.api.PointCloud.EncodingParameters} returns this
 */
proto.bosdyn.api.PointCloud.EncodingParameters.prototype.setMaxZ = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional double remapping_constant = 5;
 * @return {number}
 */
proto.bosdyn.api.PointCloud.EncodingParameters.prototype.getRemappingConstant = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.bosdyn.api.PointCloud.EncodingParameters} returns this
 */
proto.bosdyn.api.PointCloud.EncodingParameters.prototype.setRemappingConstant = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional int32 bytes_per_point = 6;
 * @return {number}
 */
proto.bosdyn.api.PointCloud.EncodingParameters.prototype.getBytesPerPoint = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.bosdyn.api.PointCloud.EncodingParameters} returns this
 */
proto.bosdyn.api.PointCloud.EncodingParameters.prototype.setBytesPerPoint = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional PointCloudSource source = 1;
 * @return {?proto.bosdyn.api.PointCloudSource}
 */
proto.bosdyn.api.PointCloud.prototype.getSource = function() {
  return /** @type{?proto.bosdyn.api.PointCloudSource} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.PointCloudSource, 1));
};


/**
 * @param {?proto.bosdyn.api.PointCloudSource|undefined} value
 * @return {!proto.bosdyn.api.PointCloud} returns this
*/
proto.bosdyn.api.PointCloud.prototype.setSource = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.PointCloud} returns this
 */
proto.bosdyn.api.PointCloud.prototype.clearSource = function() {
  return this.setSource(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.PointCloud.prototype.hasSource = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 num_points = 2;
 * @return {number}
 */
proto.bosdyn.api.PointCloud.prototype.getNumPoints = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.bosdyn.api.PointCloud} returns this
 */
proto.bosdyn.api.PointCloud.prototype.setNumPoints = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional Encoding encoding = 3;
 * @return {!proto.bosdyn.api.PointCloud.Encoding}
 */
proto.bosdyn.api.PointCloud.prototype.getEncoding = function() {
  return /** @type {!proto.bosdyn.api.PointCloud.Encoding} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.bosdyn.api.PointCloud.Encoding} value
 * @return {!proto.bosdyn.api.PointCloud} returns this
 */
proto.bosdyn.api.PointCloud.prototype.setEncoding = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional EncodingParameters encoding_parameters = 4;
 * @return {?proto.bosdyn.api.PointCloud.EncodingParameters}
 */
proto.bosdyn.api.PointCloud.prototype.getEncodingParameters = function() {
  return /** @type{?proto.bosdyn.api.PointCloud.EncodingParameters} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.PointCloud.EncodingParameters, 4));
};


/**
 * @param {?proto.bosdyn.api.PointCloud.EncodingParameters|undefined} value
 * @return {!proto.bosdyn.api.PointCloud} returns this
*/
proto.bosdyn.api.PointCloud.prototype.setEncodingParameters = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.PointCloud} returns this
 */
proto.bosdyn.api.PointCloud.prototype.clearEncodingParameters = function() {
  return this.setEncodingParameters(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.PointCloud.prototype.hasEncodingParameters = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bytes data = 5;
 * @return {!(string|Uint8Array)}
 */
proto.bosdyn.api.PointCloud.prototype.getData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * optional bytes data = 5;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.bosdyn.api.PointCloud.prototype.getData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getData()));
};


/**
 * optional bytes data = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.bosdyn.api.PointCloud.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.bosdyn.api.PointCloud} returns this
 */
proto.bosdyn.api.PointCloud.prototype.setData = function(value) {
  return jspb.Message.setProto3BytesField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.ListPointCloudSourcesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.ListPointCloudSourcesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.ListPointCloudSourcesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.ListPointCloudSourcesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && bosdyn_api_header_pb.RequestHeader.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.ListPointCloudSourcesRequest}
 */
proto.bosdyn.api.ListPointCloudSourcesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.ListPointCloudSourcesRequest;
  return proto.bosdyn.api.ListPointCloudSourcesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.ListPointCloudSourcesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.ListPointCloudSourcesRequest}
 */
proto.bosdyn.api.ListPointCloudSourcesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new bosdyn_api_header_pb.RequestHeader;
      reader.readMessage(value,bosdyn_api_header_pb.RequestHeader.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.ListPointCloudSourcesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.ListPointCloudSourcesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.ListPointCloudSourcesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.ListPointCloudSourcesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      bosdyn_api_header_pb.RequestHeader.serializeBinaryToWriter
    );
  }
};


/**
 * optional RequestHeader header = 1;
 * @return {?proto.bosdyn.api.RequestHeader}
 */
proto.bosdyn.api.ListPointCloudSourcesRequest.prototype.getHeader = function() {
  return /** @type{?proto.bosdyn.api.RequestHeader} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_header_pb.RequestHeader, 1));
};


/**
 * @param {?proto.bosdyn.api.RequestHeader|undefined} value
 * @return {!proto.bosdyn.api.ListPointCloudSourcesRequest} returns this
*/
proto.bosdyn.api.ListPointCloudSourcesRequest.prototype.setHeader = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.ListPointCloudSourcesRequest} returns this
 */
proto.bosdyn.api.ListPointCloudSourcesRequest.prototype.clearHeader = function() {
  return this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.ListPointCloudSourcesRequest.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bosdyn.api.ListPointCloudSourcesResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.ListPointCloudSourcesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.ListPointCloudSourcesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.ListPointCloudSourcesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.ListPointCloudSourcesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && bosdyn_api_header_pb.ResponseHeader.toObject(includeInstance, f),
    pointCloudSourcesList: jspb.Message.toObjectList(msg.getPointCloudSourcesList(),
    proto.bosdyn.api.PointCloudSource.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.ListPointCloudSourcesResponse}
 */
proto.bosdyn.api.ListPointCloudSourcesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.ListPointCloudSourcesResponse;
  return proto.bosdyn.api.ListPointCloudSourcesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.ListPointCloudSourcesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.ListPointCloudSourcesResponse}
 */
proto.bosdyn.api.ListPointCloudSourcesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new bosdyn_api_header_pb.ResponseHeader;
      reader.readMessage(value,bosdyn_api_header_pb.ResponseHeader.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 2:
      var value = new proto.bosdyn.api.PointCloudSource;
      reader.readMessage(value,proto.bosdyn.api.PointCloudSource.deserializeBinaryFromReader);
      msg.addPointCloudSources(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.ListPointCloudSourcesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.ListPointCloudSourcesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.ListPointCloudSourcesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.ListPointCloudSourcesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      bosdyn_api_header_pb.ResponseHeader.serializeBinaryToWriter
    );
  }
  f = message.getPointCloudSourcesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.bosdyn.api.PointCloudSource.serializeBinaryToWriter
    );
  }
};


/**
 * optional ResponseHeader header = 1;
 * @return {?proto.bosdyn.api.ResponseHeader}
 */
proto.bosdyn.api.ListPointCloudSourcesResponse.prototype.getHeader = function() {
  return /** @type{?proto.bosdyn.api.ResponseHeader} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_header_pb.ResponseHeader, 1));
};


/**
 * @param {?proto.bosdyn.api.ResponseHeader|undefined} value
 * @return {!proto.bosdyn.api.ListPointCloudSourcesResponse} returns this
*/
proto.bosdyn.api.ListPointCloudSourcesResponse.prototype.setHeader = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.ListPointCloudSourcesResponse} returns this
 */
proto.bosdyn.api.ListPointCloudSourcesResponse.prototype.clearHeader = function() {
  return this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.ListPointCloudSourcesResponse.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated PointCloudSource point_cloud_sources = 2;
 * @return {!Array<!proto.bosdyn.api.PointCloudSource>}
 */
proto.bosdyn.api.ListPointCloudSourcesResponse.prototype.getPointCloudSourcesList = function() {
  return /** @type{!Array<!proto.bosdyn.api.PointCloudSource>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.bosdyn.api.PointCloudSource, 2));
};


/**
 * @param {!Array<!proto.bosdyn.api.PointCloudSource>} value
 * @return {!proto.bosdyn.api.ListPointCloudSourcesResponse} returns this
*/
proto.bosdyn.api.ListPointCloudSourcesResponse.prototype.setPointCloudSourcesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.bosdyn.api.PointCloudSource=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bosdyn.api.PointCloudSource}
 */
proto.bosdyn.api.ListPointCloudSourcesResponse.prototype.addPointCloudSources = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.bosdyn.api.PointCloudSource, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bosdyn.api.ListPointCloudSourcesResponse} returns this
 */
proto.bosdyn.api.ListPointCloudSourcesResponse.prototype.clearPointCloudSourcesList = function() {
  return this.setPointCloudSourcesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.PointCloudRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.PointCloudRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.PointCloudRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.PointCloudRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    pointCloudSourceName: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.PointCloudRequest}
 */
proto.bosdyn.api.PointCloudRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.PointCloudRequest;
  return proto.bosdyn.api.PointCloudRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.PointCloudRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.PointCloudRequest}
 */
proto.bosdyn.api.PointCloudRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPointCloudSourceName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.PointCloudRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.PointCloudRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.PointCloudRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.PointCloudRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPointCloudSourceName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string point_cloud_source_name = 1;
 * @return {string}
 */
proto.bosdyn.api.PointCloudRequest.prototype.getPointCloudSourceName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bosdyn.api.PointCloudRequest} returns this
 */
proto.bosdyn.api.PointCloudRequest.prototype.setPointCloudSourceName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bosdyn.api.GetPointCloudRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.GetPointCloudRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.GetPointCloudRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.GetPointCloudRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.GetPointCloudRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && bosdyn_api_header_pb.RequestHeader.toObject(includeInstance, f),
    pointCloudRequestsList: jspb.Message.toObjectList(msg.getPointCloudRequestsList(),
    proto.bosdyn.api.PointCloudRequest.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.GetPointCloudRequest}
 */
proto.bosdyn.api.GetPointCloudRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.GetPointCloudRequest;
  return proto.bosdyn.api.GetPointCloudRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.GetPointCloudRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.GetPointCloudRequest}
 */
proto.bosdyn.api.GetPointCloudRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new bosdyn_api_header_pb.RequestHeader;
      reader.readMessage(value,bosdyn_api_header_pb.RequestHeader.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 2:
      var value = new proto.bosdyn.api.PointCloudRequest;
      reader.readMessage(value,proto.bosdyn.api.PointCloudRequest.deserializeBinaryFromReader);
      msg.addPointCloudRequests(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.GetPointCloudRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.GetPointCloudRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.GetPointCloudRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.GetPointCloudRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      bosdyn_api_header_pb.RequestHeader.serializeBinaryToWriter
    );
  }
  f = message.getPointCloudRequestsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.bosdyn.api.PointCloudRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional RequestHeader header = 1;
 * @return {?proto.bosdyn.api.RequestHeader}
 */
proto.bosdyn.api.GetPointCloudRequest.prototype.getHeader = function() {
  return /** @type{?proto.bosdyn.api.RequestHeader} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_header_pb.RequestHeader, 1));
};


/**
 * @param {?proto.bosdyn.api.RequestHeader|undefined} value
 * @return {!proto.bosdyn.api.GetPointCloudRequest} returns this
*/
proto.bosdyn.api.GetPointCloudRequest.prototype.setHeader = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.GetPointCloudRequest} returns this
 */
proto.bosdyn.api.GetPointCloudRequest.prototype.clearHeader = function() {
  return this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.GetPointCloudRequest.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated PointCloudRequest point_cloud_requests = 2;
 * @return {!Array<!proto.bosdyn.api.PointCloudRequest>}
 */
proto.bosdyn.api.GetPointCloudRequest.prototype.getPointCloudRequestsList = function() {
  return /** @type{!Array<!proto.bosdyn.api.PointCloudRequest>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.bosdyn.api.PointCloudRequest, 2));
};


/**
 * @param {!Array<!proto.bosdyn.api.PointCloudRequest>} value
 * @return {!proto.bosdyn.api.GetPointCloudRequest} returns this
*/
proto.bosdyn.api.GetPointCloudRequest.prototype.setPointCloudRequestsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.bosdyn.api.PointCloudRequest=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bosdyn.api.PointCloudRequest}
 */
proto.bosdyn.api.GetPointCloudRequest.prototype.addPointCloudRequests = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.bosdyn.api.PointCloudRequest, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bosdyn.api.GetPointCloudRequest} returns this
 */
proto.bosdyn.api.GetPointCloudRequest.prototype.clearPointCloudRequestsList = function() {
  return this.setPointCloudRequestsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.PointCloudResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.PointCloudResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.PointCloudResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.PointCloudResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0),
    pointCloud: (f = msg.getPointCloud()) && proto.bosdyn.api.PointCloud.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.PointCloudResponse}
 */
proto.bosdyn.api.PointCloudResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.PointCloudResponse;
  return proto.bosdyn.api.PointCloudResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.PointCloudResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.PointCloudResponse}
 */
proto.bosdyn.api.PointCloudResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.bosdyn.api.PointCloudResponse.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 2:
      var value = new proto.bosdyn.api.PointCloud;
      reader.readMessage(value,proto.bosdyn.api.PointCloud.deserializeBinaryFromReader);
      msg.setPointCloud(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.PointCloudResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.PointCloudResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.PointCloudResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.PointCloudResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getPointCloud();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.bosdyn.api.PointCloud.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.bosdyn.api.PointCloudResponse.Status = {
  STATUS_UNKNOWN: 0,
  STATUS_OK: 1,
  STATUS_SOURCE_DATA_ERROR: 2,
  STATUS_POINT_CLOUD_DATA_ERROR: 3,
  STATUS_UNKNOWN_SOURCE: 4
};

/**
 * optional Status status = 1;
 * @return {!proto.bosdyn.api.PointCloudResponse.Status}
 */
proto.bosdyn.api.PointCloudResponse.prototype.getStatus = function() {
  return /** @type {!proto.bosdyn.api.PointCloudResponse.Status} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.bosdyn.api.PointCloudResponse.Status} value
 * @return {!proto.bosdyn.api.PointCloudResponse} returns this
 */
proto.bosdyn.api.PointCloudResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional PointCloud point_cloud = 2;
 * @return {?proto.bosdyn.api.PointCloud}
 */
proto.bosdyn.api.PointCloudResponse.prototype.getPointCloud = function() {
  return /** @type{?proto.bosdyn.api.PointCloud} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.PointCloud, 2));
};


/**
 * @param {?proto.bosdyn.api.PointCloud|undefined} value
 * @return {!proto.bosdyn.api.PointCloudResponse} returns this
*/
proto.bosdyn.api.PointCloudResponse.prototype.setPointCloud = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.PointCloudResponse} returns this
 */
proto.bosdyn.api.PointCloudResponse.prototype.clearPointCloud = function() {
  return this.setPointCloud(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.PointCloudResponse.prototype.hasPointCloud = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bosdyn.api.GetPointCloudResponse.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.GetPointCloudResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.GetPointCloudResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.GetPointCloudResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.GetPointCloudResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && bosdyn_api_header_pb.ResponseHeader.toObject(includeInstance, f),
    pointCloudResponsesList: jspb.Message.toObjectList(msg.getPointCloudResponsesList(),
    proto.bosdyn.api.PointCloudResponse.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.GetPointCloudResponse}
 */
proto.bosdyn.api.GetPointCloudResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.GetPointCloudResponse;
  return proto.bosdyn.api.GetPointCloudResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.GetPointCloudResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.GetPointCloudResponse}
 */
proto.bosdyn.api.GetPointCloudResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new bosdyn_api_header_pb.ResponseHeader;
      reader.readMessage(value,bosdyn_api_header_pb.ResponseHeader.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 4:
      var value = new proto.bosdyn.api.PointCloudResponse;
      reader.readMessage(value,proto.bosdyn.api.PointCloudResponse.deserializeBinaryFromReader);
      msg.addPointCloudResponses(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.GetPointCloudResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.GetPointCloudResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.GetPointCloudResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.GetPointCloudResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      bosdyn_api_header_pb.ResponseHeader.serializeBinaryToWriter
    );
  }
  f = message.getPointCloudResponsesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.bosdyn.api.PointCloudResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional ResponseHeader header = 1;
 * @return {?proto.bosdyn.api.ResponseHeader}
 */
proto.bosdyn.api.GetPointCloudResponse.prototype.getHeader = function() {
  return /** @type{?proto.bosdyn.api.ResponseHeader} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_header_pb.ResponseHeader, 1));
};


/**
 * @param {?proto.bosdyn.api.ResponseHeader|undefined} value
 * @return {!proto.bosdyn.api.GetPointCloudResponse} returns this
*/
proto.bosdyn.api.GetPointCloudResponse.prototype.setHeader = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.GetPointCloudResponse} returns this
 */
proto.bosdyn.api.GetPointCloudResponse.prototype.clearHeader = function() {
  return this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.GetPointCloudResponse.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated PointCloudResponse point_cloud_responses = 4;
 * @return {!Array<!proto.bosdyn.api.PointCloudResponse>}
 */
proto.bosdyn.api.GetPointCloudResponse.prototype.getPointCloudResponsesList = function() {
  return /** @type{!Array<!proto.bosdyn.api.PointCloudResponse>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.bosdyn.api.PointCloudResponse, 4));
};


/**
 * @param {!Array<!proto.bosdyn.api.PointCloudResponse>} value
 * @return {!proto.bosdyn.api.GetPointCloudResponse} returns this
*/
proto.bosdyn.api.GetPointCloudResponse.prototype.setPointCloudResponsesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.bosdyn.api.PointCloudResponse=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bosdyn.api.PointCloudResponse}
 */
proto.bosdyn.api.GetPointCloudResponse.prototype.addPointCloudResponses = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.bosdyn.api.PointCloudResponse, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bosdyn.api.GetPointCloudResponse} returns this
 */
proto.bosdyn.api.GetPointCloudResponse.prototype.clearPointCloudResponsesList = function() {
  return this.setPointCloudResponsesList([]);
};


goog.object.extend(exports, proto.bosdyn.api);
