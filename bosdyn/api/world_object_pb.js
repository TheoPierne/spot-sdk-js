// source: bosdyn/api/world_object.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var bosdyn_api_docking_docking_pb = require('../../bosdyn/api/docking/docking_pb.js');
goog.object.extend(proto, bosdyn_api_docking_docking_pb);
var bosdyn_api_geometry_pb = require('../../bosdyn/api/geometry_pb.js');
goog.object.extend(proto, bosdyn_api_geometry_pb);
var bosdyn_api_header_pb = require('../../bosdyn/api/header_pb.js');
goog.object.extend(proto, bosdyn_api_header_pb);
var bosdyn_api_image_pb = require('../../bosdyn/api/image_pb.js');
goog.object.extend(proto, bosdyn_api_image_pb);
var bosdyn_api_sparse_features_pb = require('../../bosdyn/api/sparse_features_pb.js');
goog.object.extend(proto, bosdyn_api_sparse_features_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js');
goog.object.extend(proto, google_protobuf_any_pb);
goog.exportSymbol('proto.bosdyn.api.AprilTagProperties', null, global);
goog.exportSymbol('proto.bosdyn.api.AprilTagProperties.AprilTagPoseStatus', null, global);
goog.exportSymbol('proto.bosdyn.api.BoundingBoxProperties', null, global);
goog.exportSymbol('proto.bosdyn.api.DockProperties', null, global);
goog.exportSymbol('proto.bosdyn.api.DrawableArrow', null, global);
goog.exportSymbol('proto.bosdyn.api.DrawableBox', null, global);
goog.exportSymbol('proto.bosdyn.api.DrawableCapsule', null, global);
goog.exportSymbol('proto.bosdyn.api.DrawableCylinder', null, global);
goog.exportSymbol('proto.bosdyn.api.DrawableFrame', null, global);
goog.exportSymbol('proto.bosdyn.api.DrawableLineStrip', null, global);
goog.exportSymbol('proto.bosdyn.api.DrawablePoints', null, global);
goog.exportSymbol('proto.bosdyn.api.DrawableProperties', null, global);
goog.exportSymbol('proto.bosdyn.api.DrawableProperties.Color', null, global);
goog.exportSymbol('proto.bosdyn.api.DrawableProperties.DrawableCase', null, global);
goog.exportSymbol('proto.bosdyn.api.DrawableSphere', null, global);
goog.exportSymbol('proto.bosdyn.api.ImageProperties', null, global);
goog.exportSymbol('proto.bosdyn.api.ImageProperties.ImageDataCase', null, global);
goog.exportSymbol('proto.bosdyn.api.ListWorldObjectRequest', null, global);
goog.exportSymbol('proto.bosdyn.api.ListWorldObjectResponse', null, global);
goog.exportSymbol('proto.bosdyn.api.MutateWorldObjectRequest', null, global);
goog.exportSymbol('proto.bosdyn.api.MutateWorldObjectRequest.Action', null, global);
goog.exportSymbol('proto.bosdyn.api.MutateWorldObjectRequest.Mutation', null, global);
goog.exportSymbol('proto.bosdyn.api.MutateWorldObjectResponse', null, global);
goog.exportSymbol('proto.bosdyn.api.MutateWorldObjectResponse.Status', null, global);
goog.exportSymbol('proto.bosdyn.api.RayProperties', null, global);
goog.exportSymbol('proto.bosdyn.api.WorldObject', null, global);
goog.exportSymbol('proto.bosdyn.api.WorldObjectType', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.WorldObject = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bosdyn.api.WorldObject.repeatedFields_, null);
};
goog.inherits(proto.bosdyn.api.WorldObject, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.WorldObject.displayName = 'proto.bosdyn.api.WorldObject';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.ListWorldObjectRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bosdyn.api.ListWorldObjectRequest.repeatedFields_, null);
};
goog.inherits(proto.bosdyn.api.ListWorldObjectRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.ListWorldObjectRequest.displayName = 'proto.bosdyn.api.ListWorldObjectRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.ListWorldObjectResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bosdyn.api.ListWorldObjectResponse.repeatedFields_, null);
};
goog.inherits(proto.bosdyn.api.ListWorldObjectResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.ListWorldObjectResponse.displayName = 'proto.bosdyn.api.ListWorldObjectResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.MutateWorldObjectRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.MutateWorldObjectRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.MutateWorldObjectRequest.displayName = 'proto.bosdyn.api.MutateWorldObjectRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.MutateWorldObjectRequest.Mutation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.MutateWorldObjectRequest.Mutation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.MutateWorldObjectRequest.Mutation.displayName = 'proto.bosdyn.api.MutateWorldObjectRequest.Mutation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.MutateWorldObjectResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.MutateWorldObjectResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.MutateWorldObjectResponse.displayName = 'proto.bosdyn.api.MutateWorldObjectResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.ImageProperties = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.bosdyn.api.ImageProperties.oneofGroups_);
};
goog.inherits(proto.bosdyn.api.ImageProperties, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.ImageProperties.displayName = 'proto.bosdyn.api.ImageProperties';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.DockProperties = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.DockProperties, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.DockProperties.displayName = 'proto.bosdyn.api.DockProperties';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.AprilTagProperties = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.AprilTagProperties, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.AprilTagProperties.displayName = 'proto.bosdyn.api.AprilTagProperties';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.RayProperties = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.RayProperties, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.RayProperties.displayName = 'proto.bosdyn.api.RayProperties';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.BoundingBoxProperties = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.BoundingBoxProperties, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.BoundingBoxProperties.displayName = 'proto.bosdyn.api.BoundingBoxProperties';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.DrawableProperties = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.bosdyn.api.DrawableProperties.oneofGroups_);
};
goog.inherits(proto.bosdyn.api.DrawableProperties, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.DrawableProperties.displayName = 'proto.bosdyn.api.DrawableProperties';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.DrawableProperties.Color = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.DrawableProperties.Color, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.DrawableProperties.Color.displayName = 'proto.bosdyn.api.DrawableProperties.Color';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.DrawableFrame = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.DrawableFrame, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.DrawableFrame.displayName = 'proto.bosdyn.api.DrawableFrame';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.DrawableSphere = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.DrawableSphere, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.DrawableSphere.displayName = 'proto.bosdyn.api.DrawableSphere';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.DrawableBox = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.DrawableBox, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.DrawableBox.displayName = 'proto.bosdyn.api.DrawableBox';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.DrawableArrow = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.DrawableArrow, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.DrawableArrow.displayName = 'proto.bosdyn.api.DrawableArrow';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.DrawableCapsule = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.DrawableCapsule, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.DrawableCapsule.displayName = 'proto.bosdyn.api.DrawableCapsule';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.DrawableCylinder = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.DrawableCylinder, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.DrawableCylinder.displayName = 'proto.bosdyn.api.DrawableCylinder';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.DrawableLineStrip = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bosdyn.api.DrawableLineStrip, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.DrawableLineStrip.displayName = 'proto.bosdyn.api.DrawableLineStrip';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bosdyn.api.DrawablePoints = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bosdyn.api.DrawablePoints.repeatedFields_, null);
};
goog.inherits(proto.bosdyn.api.DrawablePoints, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bosdyn.api.DrawablePoints.displayName = 'proto.bosdyn.api.DrawablePoints';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bosdyn.api.WorldObject.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.WorldObject.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.WorldObject.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.WorldObject} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.WorldObject.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    acquisitionTime: (f = msg.getAcquisitionTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    transformsSnapshot: (f = msg.getTransformsSnapshot()) && bosdyn_api_geometry_pb.FrameTreeSnapshot.toObject(includeInstance, f),
    drawablePropertiesList: jspb.Message.toObjectList(msg.getDrawablePropertiesList(),
    proto.bosdyn.api.DrawableProperties.toObject, includeInstance),
    apriltagProperties: (f = msg.getApriltagProperties()) && proto.bosdyn.api.AprilTagProperties.toObject(includeInstance, f),
    imageProperties: (f = msg.getImageProperties()) && proto.bosdyn.api.ImageProperties.toObject(includeInstance, f),
    dockProperties: (f = msg.getDockProperties()) && proto.bosdyn.api.DockProperties.toObject(includeInstance, f),
    rayProperties: (f = msg.getRayProperties()) && proto.bosdyn.api.RayProperties.toObject(includeInstance, f),
    boundingBoxProperties: (f = msg.getBoundingBoxProperties()) && proto.bosdyn.api.BoundingBoxProperties.toObject(includeInstance, f),
    additionalProperties: (f = msg.getAdditionalProperties()) && google_protobuf_any_pb.Any.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.WorldObject}
 */
proto.bosdyn.api.WorldObject.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.WorldObject;
  return proto.bosdyn.api.WorldObject.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.WorldObject} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.WorldObject}
 */
proto.bosdyn.api.WorldObject.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 30:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setAcquisitionTime(value);
      break;
    case 31:
      var value = new bosdyn_api_geometry_pb.FrameTreeSnapshot;
      reader.readMessage(value,bosdyn_api_geometry_pb.FrameTreeSnapshot.deserializeBinaryFromReader);
      msg.setTransformsSnapshot(value);
      break;
    case 5:
      var value = new proto.bosdyn.api.DrawableProperties;
      reader.readMessage(value,proto.bosdyn.api.DrawableProperties.deserializeBinaryFromReader);
      msg.addDrawableProperties(value);
      break;
    case 6:
      var value = new proto.bosdyn.api.AprilTagProperties;
      reader.readMessage(value,proto.bosdyn.api.AprilTagProperties.deserializeBinaryFromReader);
      msg.setApriltagProperties(value);
      break;
    case 9:
      var value = new proto.bosdyn.api.ImageProperties;
      reader.readMessage(value,proto.bosdyn.api.ImageProperties.deserializeBinaryFromReader);
      msg.setImageProperties(value);
      break;
    case 10:
      var value = new proto.bosdyn.api.DockProperties;
      reader.readMessage(value,proto.bosdyn.api.DockProperties.deserializeBinaryFromReader);
      msg.setDockProperties(value);
      break;
    case 11:
      var value = new proto.bosdyn.api.RayProperties;
      reader.readMessage(value,proto.bosdyn.api.RayProperties.deserializeBinaryFromReader);
      msg.setRayProperties(value);
      break;
    case 12:
      var value = new proto.bosdyn.api.BoundingBoxProperties;
      reader.readMessage(value,proto.bosdyn.api.BoundingBoxProperties.deserializeBinaryFromReader);
      msg.setBoundingBoxProperties(value);
      break;
    case 100:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setAdditionalProperties(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.WorldObject.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.WorldObject.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.WorldObject} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.WorldObject.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAcquisitionTime();
  if (f != null) {
    writer.writeMessage(
      30,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getTransformsSnapshot();
  if (f != null) {
    writer.writeMessage(
      31,
      f,
      bosdyn_api_geometry_pb.FrameTreeSnapshot.serializeBinaryToWriter
    );
  }
  f = message.getDrawablePropertiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.bosdyn.api.DrawableProperties.serializeBinaryToWriter
    );
  }
  f = message.getApriltagProperties();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.bosdyn.api.AprilTagProperties.serializeBinaryToWriter
    );
  }
  f = message.getImageProperties();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.bosdyn.api.ImageProperties.serializeBinaryToWriter
    );
  }
  f = message.getDockProperties();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.bosdyn.api.DockProperties.serializeBinaryToWriter
    );
  }
  f = message.getRayProperties();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.bosdyn.api.RayProperties.serializeBinaryToWriter
    );
  }
  f = message.getBoundingBoxProperties();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.bosdyn.api.BoundingBoxProperties.serializeBinaryToWriter
    );
  }
  f = message.getAdditionalProperties();
  if (f != null) {
    writer.writeMessage(
      100,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.bosdyn.api.WorldObject.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.bosdyn.api.WorldObject} returns this
 */
proto.bosdyn.api.WorldObject.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.bosdyn.api.WorldObject.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.bosdyn.api.WorldObject} returns this
 */
proto.bosdyn.api.WorldObject.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional google.protobuf.Timestamp acquisition_time = 30;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.bosdyn.api.WorldObject.prototype.getAcquisitionTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 30));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.bosdyn.api.WorldObject} returns this
*/
proto.bosdyn.api.WorldObject.prototype.setAcquisitionTime = function(value) {
  return jspb.Message.setWrapperField(this, 30, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.WorldObject} returns this
 */
proto.bosdyn.api.WorldObject.prototype.clearAcquisitionTime = function() {
  return this.setAcquisitionTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.WorldObject.prototype.hasAcquisitionTime = function() {
  return jspb.Message.getField(this, 30) != null;
};


/**
 * optional FrameTreeSnapshot transforms_snapshot = 31;
 * @return {?proto.bosdyn.api.FrameTreeSnapshot}
 */
proto.bosdyn.api.WorldObject.prototype.getTransformsSnapshot = function() {
  return /** @type{?proto.bosdyn.api.FrameTreeSnapshot} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_geometry_pb.FrameTreeSnapshot, 31));
};


/**
 * @param {?proto.bosdyn.api.FrameTreeSnapshot|undefined} value
 * @return {!proto.bosdyn.api.WorldObject} returns this
*/
proto.bosdyn.api.WorldObject.prototype.setTransformsSnapshot = function(value) {
  return jspb.Message.setWrapperField(this, 31, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.WorldObject} returns this
 */
proto.bosdyn.api.WorldObject.prototype.clearTransformsSnapshot = function() {
  return this.setTransformsSnapshot(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.WorldObject.prototype.hasTransformsSnapshot = function() {
  return jspb.Message.getField(this, 31) != null;
};


/**
 * repeated DrawableProperties drawable_properties = 5;
 * @return {!Array<!proto.bosdyn.api.DrawableProperties>}
 */
proto.bosdyn.api.WorldObject.prototype.getDrawablePropertiesList = function() {
  return /** @type{!Array<!proto.bosdyn.api.DrawableProperties>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.bosdyn.api.DrawableProperties, 5));
};


/**
 * @param {!Array<!proto.bosdyn.api.DrawableProperties>} value
 * @return {!proto.bosdyn.api.WorldObject} returns this
*/
proto.bosdyn.api.WorldObject.prototype.setDrawablePropertiesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.bosdyn.api.DrawableProperties=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bosdyn.api.DrawableProperties}
 */
proto.bosdyn.api.WorldObject.prototype.addDrawableProperties = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.bosdyn.api.DrawableProperties, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bosdyn.api.WorldObject} returns this
 */
proto.bosdyn.api.WorldObject.prototype.clearDrawablePropertiesList = function() {
  return this.setDrawablePropertiesList([]);
};


/**
 * optional AprilTagProperties apriltag_properties = 6;
 * @return {?proto.bosdyn.api.AprilTagProperties}
 */
proto.bosdyn.api.WorldObject.prototype.getApriltagProperties = function() {
  return /** @type{?proto.bosdyn.api.AprilTagProperties} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.AprilTagProperties, 6));
};


/**
 * @param {?proto.bosdyn.api.AprilTagProperties|undefined} value
 * @return {!proto.bosdyn.api.WorldObject} returns this
*/
proto.bosdyn.api.WorldObject.prototype.setApriltagProperties = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.WorldObject} returns this
 */
proto.bosdyn.api.WorldObject.prototype.clearApriltagProperties = function() {
  return this.setApriltagProperties(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.WorldObject.prototype.hasApriltagProperties = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional ImageProperties image_properties = 9;
 * @return {?proto.bosdyn.api.ImageProperties}
 */
proto.bosdyn.api.WorldObject.prototype.getImageProperties = function() {
  return /** @type{?proto.bosdyn.api.ImageProperties} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.ImageProperties, 9));
};


/**
 * @param {?proto.bosdyn.api.ImageProperties|undefined} value
 * @return {!proto.bosdyn.api.WorldObject} returns this
*/
proto.bosdyn.api.WorldObject.prototype.setImageProperties = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.WorldObject} returns this
 */
proto.bosdyn.api.WorldObject.prototype.clearImageProperties = function() {
  return this.setImageProperties(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.WorldObject.prototype.hasImageProperties = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional DockProperties dock_properties = 10;
 * @return {?proto.bosdyn.api.DockProperties}
 */
proto.bosdyn.api.WorldObject.prototype.getDockProperties = function() {
  return /** @type{?proto.bosdyn.api.DockProperties} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.DockProperties, 10));
};


/**
 * @param {?proto.bosdyn.api.DockProperties|undefined} value
 * @return {!proto.bosdyn.api.WorldObject} returns this
*/
proto.bosdyn.api.WorldObject.prototype.setDockProperties = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.WorldObject} returns this
 */
proto.bosdyn.api.WorldObject.prototype.clearDockProperties = function() {
  return this.setDockProperties(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.WorldObject.prototype.hasDockProperties = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional RayProperties ray_properties = 11;
 * @return {?proto.bosdyn.api.RayProperties}
 */
proto.bosdyn.api.WorldObject.prototype.getRayProperties = function() {
  return /** @type{?proto.bosdyn.api.RayProperties} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.RayProperties, 11));
};


/**
 * @param {?proto.bosdyn.api.RayProperties|undefined} value
 * @return {!proto.bosdyn.api.WorldObject} returns this
*/
proto.bosdyn.api.WorldObject.prototype.setRayProperties = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.WorldObject} returns this
 */
proto.bosdyn.api.WorldObject.prototype.clearRayProperties = function() {
  return this.setRayProperties(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.WorldObject.prototype.hasRayProperties = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional BoundingBoxProperties bounding_box_properties = 12;
 * @return {?proto.bosdyn.api.BoundingBoxProperties}
 */
proto.bosdyn.api.WorldObject.prototype.getBoundingBoxProperties = function() {
  return /** @type{?proto.bosdyn.api.BoundingBoxProperties} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.BoundingBoxProperties, 12));
};


/**
 * @param {?proto.bosdyn.api.BoundingBoxProperties|undefined} value
 * @return {!proto.bosdyn.api.WorldObject} returns this
*/
proto.bosdyn.api.WorldObject.prototype.setBoundingBoxProperties = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.WorldObject} returns this
 */
proto.bosdyn.api.WorldObject.prototype.clearBoundingBoxProperties = function() {
  return this.setBoundingBoxProperties(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.WorldObject.prototype.hasBoundingBoxProperties = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional google.protobuf.Any additional_properties = 100;
 * @return {?proto.google.protobuf.Any}
 */
proto.bosdyn.api.WorldObject.prototype.getAdditionalProperties = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 100));
};


/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.bosdyn.api.WorldObject} returns this
*/
proto.bosdyn.api.WorldObject.prototype.setAdditionalProperties = function(value) {
  return jspb.Message.setWrapperField(this, 100, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.WorldObject} returns this
 */
proto.bosdyn.api.WorldObject.prototype.clearAdditionalProperties = function() {
  return this.setAdditionalProperties(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.WorldObject.prototype.hasAdditionalProperties = function() {
  return jspb.Message.getField(this, 100) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bosdyn.api.ListWorldObjectRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.ListWorldObjectRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.ListWorldObjectRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.ListWorldObjectRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.ListWorldObjectRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && bosdyn_api_header_pb.RequestHeader.toObject(includeInstance, f),
    objectTypeList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    timestampFilter: (f = msg.getTimestampFilter()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.ListWorldObjectRequest}
 */
proto.bosdyn.api.ListWorldObjectRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.ListWorldObjectRequest;
  return proto.bosdyn.api.ListWorldObjectRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.ListWorldObjectRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.ListWorldObjectRequest}
 */
proto.bosdyn.api.ListWorldObjectRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new bosdyn_api_header_pb.RequestHeader;
      reader.readMessage(value,bosdyn_api_header_pb.RequestHeader.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 2:
      var values = /** @type {!Array<!proto.bosdyn.api.WorldObjectType>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addObjectType(values[i]);
      }
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimestampFilter(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.ListWorldObjectRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.ListWorldObjectRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.ListWorldObjectRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.ListWorldObjectRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      bosdyn_api_header_pb.RequestHeader.serializeBinaryToWriter
    );
  }
  f = message.getObjectTypeList();
  if (f.length > 0) {
    writer.writePackedEnum(
      2,
      f
    );
  }
  f = message.getTimestampFilter();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional RequestHeader header = 1;
 * @return {?proto.bosdyn.api.RequestHeader}
 */
proto.bosdyn.api.ListWorldObjectRequest.prototype.getHeader = function() {
  return /** @type{?proto.bosdyn.api.RequestHeader} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_header_pb.RequestHeader, 1));
};


/**
 * @param {?proto.bosdyn.api.RequestHeader|undefined} value
 * @return {!proto.bosdyn.api.ListWorldObjectRequest} returns this
*/
proto.bosdyn.api.ListWorldObjectRequest.prototype.setHeader = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.ListWorldObjectRequest} returns this
 */
proto.bosdyn.api.ListWorldObjectRequest.prototype.clearHeader = function() {
  return this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.ListWorldObjectRequest.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated WorldObjectType object_type = 2;
 * @return {!Array<!proto.bosdyn.api.WorldObjectType>}
 */
proto.bosdyn.api.ListWorldObjectRequest.prototype.getObjectTypeList = function() {
  return /** @type {!Array<!proto.bosdyn.api.WorldObjectType>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<!proto.bosdyn.api.WorldObjectType>} value
 * @return {!proto.bosdyn.api.ListWorldObjectRequest} returns this
 */
proto.bosdyn.api.ListWorldObjectRequest.prototype.setObjectTypeList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!proto.bosdyn.api.WorldObjectType} value
 * @param {number=} opt_index
 * @return {!proto.bosdyn.api.ListWorldObjectRequest} returns this
 */
proto.bosdyn.api.ListWorldObjectRequest.prototype.addObjectType = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bosdyn.api.ListWorldObjectRequest} returns this
 */
proto.bosdyn.api.ListWorldObjectRequest.prototype.clearObjectTypeList = function() {
  return this.setObjectTypeList([]);
};


/**
 * optional google.protobuf.Timestamp timestamp_filter = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.bosdyn.api.ListWorldObjectRequest.prototype.getTimestampFilter = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.bosdyn.api.ListWorldObjectRequest} returns this
*/
proto.bosdyn.api.ListWorldObjectRequest.prototype.setTimestampFilter = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.ListWorldObjectRequest} returns this
 */
proto.bosdyn.api.ListWorldObjectRequest.prototype.clearTimestampFilter = function() {
  return this.setTimestampFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.ListWorldObjectRequest.prototype.hasTimestampFilter = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bosdyn.api.ListWorldObjectResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.ListWorldObjectResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.ListWorldObjectResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.ListWorldObjectResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.ListWorldObjectResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && bosdyn_api_header_pb.ResponseHeader.toObject(includeInstance, f),
    worldObjectsList: jspb.Message.toObjectList(msg.getWorldObjectsList(),
    proto.bosdyn.api.WorldObject.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.ListWorldObjectResponse}
 */
proto.bosdyn.api.ListWorldObjectResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.ListWorldObjectResponse;
  return proto.bosdyn.api.ListWorldObjectResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.ListWorldObjectResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.ListWorldObjectResponse}
 */
proto.bosdyn.api.ListWorldObjectResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new bosdyn_api_header_pb.ResponseHeader;
      reader.readMessage(value,bosdyn_api_header_pb.ResponseHeader.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 2:
      var value = new proto.bosdyn.api.WorldObject;
      reader.readMessage(value,proto.bosdyn.api.WorldObject.deserializeBinaryFromReader);
      msg.addWorldObjects(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.ListWorldObjectResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.ListWorldObjectResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.ListWorldObjectResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.ListWorldObjectResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      bosdyn_api_header_pb.ResponseHeader.serializeBinaryToWriter
    );
  }
  f = message.getWorldObjectsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.bosdyn.api.WorldObject.serializeBinaryToWriter
    );
  }
};


/**
 * optional ResponseHeader header = 1;
 * @return {?proto.bosdyn.api.ResponseHeader}
 */
proto.bosdyn.api.ListWorldObjectResponse.prototype.getHeader = function() {
  return /** @type{?proto.bosdyn.api.ResponseHeader} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_header_pb.ResponseHeader, 1));
};


/**
 * @param {?proto.bosdyn.api.ResponseHeader|undefined} value
 * @return {!proto.bosdyn.api.ListWorldObjectResponse} returns this
*/
proto.bosdyn.api.ListWorldObjectResponse.prototype.setHeader = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.ListWorldObjectResponse} returns this
 */
proto.bosdyn.api.ListWorldObjectResponse.prototype.clearHeader = function() {
  return this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.ListWorldObjectResponse.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated WorldObject world_objects = 2;
 * @return {!Array<!proto.bosdyn.api.WorldObject>}
 */
proto.bosdyn.api.ListWorldObjectResponse.prototype.getWorldObjectsList = function() {
  return /** @type{!Array<!proto.bosdyn.api.WorldObject>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.bosdyn.api.WorldObject, 2));
};


/**
 * @param {!Array<!proto.bosdyn.api.WorldObject>} value
 * @return {!proto.bosdyn.api.ListWorldObjectResponse} returns this
*/
proto.bosdyn.api.ListWorldObjectResponse.prototype.setWorldObjectsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.bosdyn.api.WorldObject=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bosdyn.api.WorldObject}
 */
proto.bosdyn.api.ListWorldObjectResponse.prototype.addWorldObjects = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.bosdyn.api.WorldObject, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bosdyn.api.ListWorldObjectResponse} returns this
 */
proto.bosdyn.api.ListWorldObjectResponse.prototype.clearWorldObjectsList = function() {
  return this.setWorldObjectsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.MutateWorldObjectRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.MutateWorldObjectRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.MutateWorldObjectRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.MutateWorldObjectRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && bosdyn_api_header_pb.RequestHeader.toObject(includeInstance, f),
    mutation: (f = msg.getMutation()) && proto.bosdyn.api.MutateWorldObjectRequest.Mutation.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.MutateWorldObjectRequest}
 */
proto.bosdyn.api.MutateWorldObjectRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.MutateWorldObjectRequest;
  return proto.bosdyn.api.MutateWorldObjectRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.MutateWorldObjectRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.MutateWorldObjectRequest}
 */
proto.bosdyn.api.MutateWorldObjectRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new bosdyn_api_header_pb.RequestHeader;
      reader.readMessage(value,bosdyn_api_header_pb.RequestHeader.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 2:
      var value = new proto.bosdyn.api.MutateWorldObjectRequest.Mutation;
      reader.readMessage(value,proto.bosdyn.api.MutateWorldObjectRequest.Mutation.deserializeBinaryFromReader);
      msg.setMutation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.MutateWorldObjectRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.MutateWorldObjectRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.MutateWorldObjectRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.MutateWorldObjectRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      bosdyn_api_header_pb.RequestHeader.serializeBinaryToWriter
    );
  }
  f = message.getMutation();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.bosdyn.api.MutateWorldObjectRequest.Mutation.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.bosdyn.api.MutateWorldObjectRequest.Action = {
  ACTION_UNKNOWN: 0,
  ACTION_ADD: 1,
  ACTION_CHANGE: 2,
  ACTION_DELETE: 3
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.MutateWorldObjectRequest.Mutation.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.MutateWorldObjectRequest.Mutation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.MutateWorldObjectRequest.Mutation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.MutateWorldObjectRequest.Mutation.toObject = function(includeInstance, msg) {
  var f, obj = {
    action: jspb.Message.getFieldWithDefault(msg, 1, 0),
    object: (f = msg.getObject()) && proto.bosdyn.api.WorldObject.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.MutateWorldObjectRequest.Mutation}
 */
proto.bosdyn.api.MutateWorldObjectRequest.Mutation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.MutateWorldObjectRequest.Mutation;
  return proto.bosdyn.api.MutateWorldObjectRequest.Mutation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.MutateWorldObjectRequest.Mutation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.MutateWorldObjectRequest.Mutation}
 */
proto.bosdyn.api.MutateWorldObjectRequest.Mutation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.bosdyn.api.MutateWorldObjectRequest.Action} */ (reader.readEnum());
      msg.setAction(value);
      break;
    case 2:
      var value = new proto.bosdyn.api.WorldObject;
      reader.readMessage(value,proto.bosdyn.api.WorldObject.deserializeBinaryFromReader);
      msg.setObject(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.MutateWorldObjectRequest.Mutation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.MutateWorldObjectRequest.Mutation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.MutateWorldObjectRequest.Mutation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.MutateWorldObjectRequest.Mutation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAction();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getObject();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.bosdyn.api.WorldObject.serializeBinaryToWriter
    );
  }
};


/**
 * optional Action action = 1;
 * @return {!proto.bosdyn.api.MutateWorldObjectRequest.Action}
 */
proto.bosdyn.api.MutateWorldObjectRequest.Mutation.prototype.getAction = function() {
  return /** @type {!proto.bosdyn.api.MutateWorldObjectRequest.Action} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.bosdyn.api.MutateWorldObjectRequest.Action} value
 * @return {!proto.bosdyn.api.MutateWorldObjectRequest.Mutation} returns this
 */
proto.bosdyn.api.MutateWorldObjectRequest.Mutation.prototype.setAction = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional WorldObject object = 2;
 * @return {?proto.bosdyn.api.WorldObject}
 */
proto.bosdyn.api.MutateWorldObjectRequest.Mutation.prototype.getObject = function() {
  return /** @type{?proto.bosdyn.api.WorldObject} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.WorldObject, 2));
};


/**
 * @param {?proto.bosdyn.api.WorldObject|undefined} value
 * @return {!proto.bosdyn.api.MutateWorldObjectRequest.Mutation} returns this
*/
proto.bosdyn.api.MutateWorldObjectRequest.Mutation.prototype.setObject = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.MutateWorldObjectRequest.Mutation} returns this
 */
proto.bosdyn.api.MutateWorldObjectRequest.Mutation.prototype.clearObject = function() {
  return this.setObject(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.MutateWorldObjectRequest.Mutation.prototype.hasObject = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional RequestHeader header = 1;
 * @return {?proto.bosdyn.api.RequestHeader}
 */
proto.bosdyn.api.MutateWorldObjectRequest.prototype.getHeader = function() {
  return /** @type{?proto.bosdyn.api.RequestHeader} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_header_pb.RequestHeader, 1));
};


/**
 * @param {?proto.bosdyn.api.RequestHeader|undefined} value
 * @return {!proto.bosdyn.api.MutateWorldObjectRequest} returns this
*/
proto.bosdyn.api.MutateWorldObjectRequest.prototype.setHeader = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.MutateWorldObjectRequest} returns this
 */
proto.bosdyn.api.MutateWorldObjectRequest.prototype.clearHeader = function() {
  return this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.MutateWorldObjectRequest.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Mutation mutation = 2;
 * @return {?proto.bosdyn.api.MutateWorldObjectRequest.Mutation}
 */
proto.bosdyn.api.MutateWorldObjectRequest.prototype.getMutation = function() {
  return /** @type{?proto.bosdyn.api.MutateWorldObjectRequest.Mutation} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.MutateWorldObjectRequest.Mutation, 2));
};


/**
 * @param {?proto.bosdyn.api.MutateWorldObjectRequest.Mutation|undefined} value
 * @return {!proto.bosdyn.api.MutateWorldObjectRequest} returns this
*/
proto.bosdyn.api.MutateWorldObjectRequest.prototype.setMutation = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.MutateWorldObjectRequest} returns this
 */
proto.bosdyn.api.MutateWorldObjectRequest.prototype.clearMutation = function() {
  return this.setMutation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.MutateWorldObjectRequest.prototype.hasMutation = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.MutateWorldObjectResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.MutateWorldObjectResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.MutateWorldObjectResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.MutateWorldObjectResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && bosdyn_api_header_pb.ResponseHeader.toObject(includeInstance, f),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0),
    mutatedObjectId: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.MutateWorldObjectResponse}
 */
proto.bosdyn.api.MutateWorldObjectResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.MutateWorldObjectResponse;
  return proto.bosdyn.api.MutateWorldObjectResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.MutateWorldObjectResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.MutateWorldObjectResponse}
 */
proto.bosdyn.api.MutateWorldObjectResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new bosdyn_api_header_pb.ResponseHeader;
      reader.readMessage(value,bosdyn_api_header_pb.ResponseHeader.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 2:
      var value = /** @type {!proto.bosdyn.api.MutateWorldObjectResponse.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMutatedObjectId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.MutateWorldObjectResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.MutateWorldObjectResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.MutateWorldObjectResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.MutateWorldObjectResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      bosdyn_api_header_pb.ResponseHeader.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getMutatedObjectId();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.bosdyn.api.MutateWorldObjectResponse.Status = {
  STATUS_UNKNOWN: 0,
  STATUS_OK: 1,
  STATUS_INVALID_MUTATION_ID: 2,
  STATUS_NO_PERMISSION: 3
};

/**
 * optional ResponseHeader header = 1;
 * @return {?proto.bosdyn.api.ResponseHeader}
 */
proto.bosdyn.api.MutateWorldObjectResponse.prototype.getHeader = function() {
  return /** @type{?proto.bosdyn.api.ResponseHeader} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_header_pb.ResponseHeader, 1));
};


/**
 * @param {?proto.bosdyn.api.ResponseHeader|undefined} value
 * @return {!proto.bosdyn.api.MutateWorldObjectResponse} returns this
*/
proto.bosdyn.api.MutateWorldObjectResponse.prototype.setHeader = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.MutateWorldObjectResponse} returns this
 */
proto.bosdyn.api.MutateWorldObjectResponse.prototype.clearHeader = function() {
  return this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.MutateWorldObjectResponse.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Status status = 2;
 * @return {!proto.bosdyn.api.MutateWorldObjectResponse.Status}
 */
proto.bosdyn.api.MutateWorldObjectResponse.prototype.getStatus = function() {
  return /** @type {!proto.bosdyn.api.MutateWorldObjectResponse.Status} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.bosdyn.api.MutateWorldObjectResponse.Status} value
 * @return {!proto.bosdyn.api.MutateWorldObjectResponse} returns this
 */
proto.bosdyn.api.MutateWorldObjectResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional int32 mutated_object_id = 4;
 * @return {number}
 */
proto.bosdyn.api.MutateWorldObjectResponse.prototype.getMutatedObjectId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.bosdyn.api.MutateWorldObjectResponse} returns this
 */
proto.bosdyn.api.MutateWorldObjectResponse.prototype.setMutatedObjectId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.bosdyn.api.ImageProperties.oneofGroups_ = [[2,4]];

/**
 * @enum {number}
 */
proto.bosdyn.api.ImageProperties.ImageDataCase = {
  IMAGE_DATA_NOT_SET: 0,
  COORDINATES: 2,
  KEYPOINTS: 4
};

/**
 * @return {proto.bosdyn.api.ImageProperties.ImageDataCase}
 */
proto.bosdyn.api.ImageProperties.prototype.getImageDataCase = function() {
  return /** @type {proto.bosdyn.api.ImageProperties.ImageDataCase} */(jspb.Message.computeOneofCase(this, proto.bosdyn.api.ImageProperties.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.ImageProperties.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.ImageProperties.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.ImageProperties} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.ImageProperties.toObject = function(includeInstance, msg) {
  var f, obj = {
    cameraSource: jspb.Message.getFieldWithDefault(msg, 1, ""),
    coordinates: (f = msg.getCoordinates()) && bosdyn_api_geometry_pb.Polygon.toObject(includeInstance, f),
    keypoints: (f = msg.getKeypoints()) && bosdyn_api_sparse_features_pb.KeypointSet.toObject(includeInstance, f),
    imageSource: (f = msg.getImageSource()) && bosdyn_api_image_pb.ImageSource.toObject(includeInstance, f),
    imageCapture: (f = msg.getImageCapture()) && bosdyn_api_image_pb.ImageCapture.toObject(includeInstance, f),
    frameNameImageCoordinates: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.ImageProperties}
 */
proto.bosdyn.api.ImageProperties.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.ImageProperties;
  return proto.bosdyn.api.ImageProperties.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.ImageProperties} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.ImageProperties}
 */
proto.bosdyn.api.ImageProperties.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCameraSource(value);
      break;
    case 2:
      var value = new bosdyn_api_geometry_pb.Polygon;
      reader.readMessage(value,bosdyn_api_geometry_pb.Polygon.deserializeBinaryFromReader);
      msg.setCoordinates(value);
      break;
    case 4:
      var value = new bosdyn_api_sparse_features_pb.KeypointSet;
      reader.readMessage(value,bosdyn_api_sparse_features_pb.KeypointSet.deserializeBinaryFromReader);
      msg.setKeypoints(value);
      break;
    case 5:
      var value = new bosdyn_api_image_pb.ImageSource;
      reader.readMessage(value,bosdyn_api_image_pb.ImageSource.deserializeBinaryFromReader);
      msg.setImageSource(value);
      break;
    case 6:
      var value = new bosdyn_api_image_pb.ImageCapture;
      reader.readMessage(value,bosdyn_api_image_pb.ImageCapture.deserializeBinaryFromReader);
      msg.setImageCapture(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFrameNameImageCoordinates(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.ImageProperties.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.ImageProperties.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.ImageProperties} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.ImageProperties.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCameraSource();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCoordinates();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      bosdyn_api_geometry_pb.Polygon.serializeBinaryToWriter
    );
  }
  f = message.getKeypoints();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      bosdyn_api_sparse_features_pb.KeypointSet.serializeBinaryToWriter
    );
  }
  f = message.getImageSource();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      bosdyn_api_image_pb.ImageSource.serializeBinaryToWriter
    );
  }
  f = message.getImageCapture();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      bosdyn_api_image_pb.ImageCapture.serializeBinaryToWriter
    );
  }
  f = message.getFrameNameImageCoordinates();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string camera_source = 1;
 * @return {string}
 */
proto.bosdyn.api.ImageProperties.prototype.getCameraSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bosdyn.api.ImageProperties} returns this
 */
proto.bosdyn.api.ImageProperties.prototype.setCameraSource = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Polygon coordinates = 2;
 * @return {?proto.bosdyn.api.Polygon}
 */
proto.bosdyn.api.ImageProperties.prototype.getCoordinates = function() {
  return /** @type{?proto.bosdyn.api.Polygon} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_geometry_pb.Polygon, 2));
};


/**
 * @param {?proto.bosdyn.api.Polygon|undefined} value
 * @return {!proto.bosdyn.api.ImageProperties} returns this
*/
proto.bosdyn.api.ImageProperties.prototype.setCoordinates = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.bosdyn.api.ImageProperties.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.ImageProperties} returns this
 */
proto.bosdyn.api.ImageProperties.prototype.clearCoordinates = function() {
  return this.setCoordinates(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.ImageProperties.prototype.hasCoordinates = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional KeypointSet keypoints = 4;
 * @return {?proto.bosdyn.api.KeypointSet}
 */
proto.bosdyn.api.ImageProperties.prototype.getKeypoints = function() {
  return /** @type{?proto.bosdyn.api.KeypointSet} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_sparse_features_pb.KeypointSet, 4));
};


/**
 * @param {?proto.bosdyn.api.KeypointSet|undefined} value
 * @return {!proto.bosdyn.api.ImageProperties} returns this
*/
proto.bosdyn.api.ImageProperties.prototype.setKeypoints = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.bosdyn.api.ImageProperties.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.ImageProperties} returns this
 */
proto.bosdyn.api.ImageProperties.prototype.clearKeypoints = function() {
  return this.setKeypoints(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.ImageProperties.prototype.hasKeypoints = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ImageSource image_source = 5;
 * @return {?proto.bosdyn.api.ImageSource}
 */
proto.bosdyn.api.ImageProperties.prototype.getImageSource = function() {
  return /** @type{?proto.bosdyn.api.ImageSource} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_image_pb.ImageSource, 5));
};


/**
 * @param {?proto.bosdyn.api.ImageSource|undefined} value
 * @return {!proto.bosdyn.api.ImageProperties} returns this
*/
proto.bosdyn.api.ImageProperties.prototype.setImageSource = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.ImageProperties} returns this
 */
proto.bosdyn.api.ImageProperties.prototype.clearImageSource = function() {
  return this.setImageSource(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.ImageProperties.prototype.hasImageSource = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional ImageCapture image_capture = 6;
 * @return {?proto.bosdyn.api.ImageCapture}
 */
proto.bosdyn.api.ImageProperties.prototype.getImageCapture = function() {
  return /** @type{?proto.bosdyn.api.ImageCapture} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_image_pb.ImageCapture, 6));
};


/**
 * @param {?proto.bosdyn.api.ImageCapture|undefined} value
 * @return {!proto.bosdyn.api.ImageProperties} returns this
*/
proto.bosdyn.api.ImageProperties.prototype.setImageCapture = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.ImageProperties} returns this
 */
proto.bosdyn.api.ImageProperties.prototype.clearImageCapture = function() {
  return this.setImageCapture(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.ImageProperties.prototype.hasImageCapture = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string frame_name_image_coordinates = 3;
 * @return {string}
 */
proto.bosdyn.api.ImageProperties.prototype.getFrameNameImageCoordinates = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.bosdyn.api.ImageProperties} returns this
 */
proto.bosdyn.api.ImageProperties.prototype.setFrameNameImageCoordinates = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.DockProperties.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.DockProperties.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.DockProperties} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.DockProperties.toObject = function(includeInstance, msg) {
  var f, obj = {
    dockId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    type: jspb.Message.getFieldWithDefault(msg, 2, 0),
    frameNameDock: jspb.Message.getFieldWithDefault(msg, 3, ""),
    unavailable: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    fromPrior: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.DockProperties}
 */
proto.bosdyn.api.DockProperties.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.DockProperties;
  return proto.bosdyn.api.DockProperties.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.DockProperties} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.DockProperties}
 */
proto.bosdyn.api.DockProperties.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDockId(value);
      break;
    case 2:
      var value = /** @type {!proto.bosdyn.api.docking.DockType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFrameNameDock(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUnavailable(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFromPrior(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.DockProperties.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.DockProperties.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.DockProperties} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.DockProperties.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDockId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getFrameNameDock();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getUnavailable();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getFromPrior();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * optional uint32 dock_id = 1;
 * @return {number}
 */
proto.bosdyn.api.DockProperties.prototype.getDockId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.bosdyn.api.DockProperties} returns this
 */
proto.bosdyn.api.DockProperties.prototype.setDockId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional docking.DockType type = 2;
 * @return {!proto.bosdyn.api.docking.DockType}
 */
proto.bosdyn.api.DockProperties.prototype.getType = function() {
  return /** @type {!proto.bosdyn.api.docking.DockType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.bosdyn.api.docking.DockType} value
 * @return {!proto.bosdyn.api.DockProperties} returns this
 */
proto.bosdyn.api.DockProperties.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string frame_name_dock = 3;
 * @return {string}
 */
proto.bosdyn.api.DockProperties.prototype.getFrameNameDock = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.bosdyn.api.DockProperties} returns this
 */
proto.bosdyn.api.DockProperties.prototype.setFrameNameDock = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool unavailable = 4;
 * @return {boolean}
 */
proto.bosdyn.api.DockProperties.prototype.getUnavailable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.bosdyn.api.DockProperties} returns this
 */
proto.bosdyn.api.DockProperties.prototype.setUnavailable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool from_prior = 5;
 * @return {boolean}
 */
proto.bosdyn.api.DockProperties.prototype.getFromPrior = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.bosdyn.api.DockProperties} returns this
 */
proto.bosdyn.api.DockProperties.prototype.setFromPrior = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.AprilTagProperties.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.AprilTagProperties.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.AprilTagProperties} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.AprilTagProperties.toObject = function(includeInstance, msg) {
  var f, obj = {
    tagId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    dimensions: (f = msg.getDimensions()) && bosdyn_api_geometry_pb.Vec2.toObject(includeInstance, f),
    frameNameFiducial: jspb.Message.getFieldWithDefault(msg, 3, ""),
    fiducialPoseStatus: jspb.Message.getFieldWithDefault(msg, 8, 0),
    frameNameFiducialFiltered: jspb.Message.getFieldWithDefault(msg, 4, ""),
    fiducialFilteredPoseStatus: jspb.Message.getFieldWithDefault(msg, 9, 0),
    frameNameCamera: jspb.Message.getFieldWithDefault(msg, 7, ""),
    detectionCovariance: (f = msg.getDetectionCovariance()) && bosdyn_api_geometry_pb.SE3Covariance.toObject(includeInstance, f),
    detectionCovarianceReferenceFrame: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.AprilTagProperties}
 */
proto.bosdyn.api.AprilTagProperties.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.AprilTagProperties;
  return proto.bosdyn.api.AprilTagProperties.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.AprilTagProperties} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.AprilTagProperties}
 */
proto.bosdyn.api.AprilTagProperties.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTagId(value);
      break;
    case 2:
      var value = new bosdyn_api_geometry_pb.Vec2;
      reader.readMessage(value,bosdyn_api_geometry_pb.Vec2.deserializeBinaryFromReader);
      msg.setDimensions(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFrameNameFiducial(value);
      break;
    case 8:
      var value = /** @type {!proto.bosdyn.api.AprilTagProperties.AprilTagPoseStatus} */ (reader.readEnum());
      msg.setFiducialPoseStatus(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFrameNameFiducialFiltered(value);
      break;
    case 9:
      var value = /** @type {!proto.bosdyn.api.AprilTagProperties.AprilTagPoseStatus} */ (reader.readEnum());
      msg.setFiducialFilteredPoseStatus(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setFrameNameCamera(value);
      break;
    case 5:
      var value = new bosdyn_api_geometry_pb.SE3Covariance;
      reader.readMessage(value,bosdyn_api_geometry_pb.SE3Covariance.deserializeBinaryFromReader);
      msg.setDetectionCovariance(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDetectionCovarianceReferenceFrame(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.AprilTagProperties.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.AprilTagProperties.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.AprilTagProperties} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.AprilTagProperties.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTagId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getDimensions();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      bosdyn_api_geometry_pb.Vec2.serializeBinaryToWriter
    );
  }
  f = message.getFrameNameFiducial();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getFiducialPoseStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
  f = message.getFrameNameFiducialFiltered();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getFiducialFilteredPoseStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      9,
      f
    );
  }
  f = message.getFrameNameCamera();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getDetectionCovariance();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      bosdyn_api_geometry_pb.SE3Covariance.serializeBinaryToWriter
    );
  }
  f = message.getDetectionCovarianceReferenceFrame();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.bosdyn.api.AprilTagProperties.AprilTagPoseStatus = {
  STATUS_UNKNOWN: 0,
  STATUS_OK: 1,
  STATUS_AMBIGUOUS: 2,
  STATUS_HIGH_ERROR: 3
};

/**
 * optional int32 tag_id = 1;
 * @return {number}
 */
proto.bosdyn.api.AprilTagProperties.prototype.getTagId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.bosdyn.api.AprilTagProperties} returns this
 */
proto.bosdyn.api.AprilTagProperties.prototype.setTagId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional Vec2 dimensions = 2;
 * @return {?proto.bosdyn.api.Vec2}
 */
proto.bosdyn.api.AprilTagProperties.prototype.getDimensions = function() {
  return /** @type{?proto.bosdyn.api.Vec2} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_geometry_pb.Vec2, 2));
};


/**
 * @param {?proto.bosdyn.api.Vec2|undefined} value
 * @return {!proto.bosdyn.api.AprilTagProperties} returns this
*/
proto.bosdyn.api.AprilTagProperties.prototype.setDimensions = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.AprilTagProperties} returns this
 */
proto.bosdyn.api.AprilTagProperties.prototype.clearDimensions = function() {
  return this.setDimensions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.AprilTagProperties.prototype.hasDimensions = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string frame_name_fiducial = 3;
 * @return {string}
 */
proto.bosdyn.api.AprilTagProperties.prototype.getFrameNameFiducial = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.bosdyn.api.AprilTagProperties} returns this
 */
proto.bosdyn.api.AprilTagProperties.prototype.setFrameNameFiducial = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional AprilTagPoseStatus fiducial_pose_status = 8;
 * @return {!proto.bosdyn.api.AprilTagProperties.AprilTagPoseStatus}
 */
proto.bosdyn.api.AprilTagProperties.prototype.getFiducialPoseStatus = function() {
  return /** @type {!proto.bosdyn.api.AprilTagProperties.AprilTagPoseStatus} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {!proto.bosdyn.api.AprilTagProperties.AprilTagPoseStatus} value
 * @return {!proto.bosdyn.api.AprilTagProperties} returns this
 */
proto.bosdyn.api.AprilTagProperties.prototype.setFiducialPoseStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 8, value);
};


/**
 * optional string frame_name_fiducial_filtered = 4;
 * @return {string}
 */
proto.bosdyn.api.AprilTagProperties.prototype.getFrameNameFiducialFiltered = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.bosdyn.api.AprilTagProperties} returns this
 */
proto.bosdyn.api.AprilTagProperties.prototype.setFrameNameFiducialFiltered = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional AprilTagPoseStatus fiducial_filtered_pose_status = 9;
 * @return {!proto.bosdyn.api.AprilTagProperties.AprilTagPoseStatus}
 */
proto.bosdyn.api.AprilTagProperties.prototype.getFiducialFilteredPoseStatus = function() {
  return /** @type {!proto.bosdyn.api.AprilTagProperties.AprilTagPoseStatus} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {!proto.bosdyn.api.AprilTagProperties.AprilTagPoseStatus} value
 * @return {!proto.bosdyn.api.AprilTagProperties} returns this
 */
proto.bosdyn.api.AprilTagProperties.prototype.setFiducialFilteredPoseStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 9, value);
};


/**
 * optional string frame_name_camera = 7;
 * @return {string}
 */
proto.bosdyn.api.AprilTagProperties.prototype.getFrameNameCamera = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.bosdyn.api.AprilTagProperties} returns this
 */
proto.bosdyn.api.AprilTagProperties.prototype.setFrameNameCamera = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional SE3Covariance detection_covariance = 5;
 * @return {?proto.bosdyn.api.SE3Covariance}
 */
proto.bosdyn.api.AprilTagProperties.prototype.getDetectionCovariance = function() {
  return /** @type{?proto.bosdyn.api.SE3Covariance} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_geometry_pb.SE3Covariance, 5));
};


/**
 * @param {?proto.bosdyn.api.SE3Covariance|undefined} value
 * @return {!proto.bosdyn.api.AprilTagProperties} returns this
*/
proto.bosdyn.api.AprilTagProperties.prototype.setDetectionCovariance = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.AprilTagProperties} returns this
 */
proto.bosdyn.api.AprilTagProperties.prototype.clearDetectionCovariance = function() {
  return this.setDetectionCovariance(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.AprilTagProperties.prototype.hasDetectionCovariance = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string detection_covariance_reference_frame = 6;
 * @return {string}
 */
proto.bosdyn.api.AprilTagProperties.prototype.getDetectionCovarianceReferenceFrame = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.bosdyn.api.AprilTagProperties} returns this
 */
proto.bosdyn.api.AprilTagProperties.prototype.setDetectionCovarianceReferenceFrame = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.RayProperties.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.RayProperties.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.RayProperties} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.RayProperties.toObject = function(includeInstance, msg) {
  var f, obj = {
    ray: (f = msg.getRay()) && bosdyn_api_geometry_pb.Ray.toObject(includeInstance, f),
    frame: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.RayProperties}
 */
proto.bosdyn.api.RayProperties.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.RayProperties;
  return proto.bosdyn.api.RayProperties.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.RayProperties} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.RayProperties}
 */
proto.bosdyn.api.RayProperties.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new bosdyn_api_geometry_pb.Ray;
      reader.readMessage(value,bosdyn_api_geometry_pb.Ray.deserializeBinaryFromReader);
      msg.setRay(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFrame(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.RayProperties.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.RayProperties.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.RayProperties} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.RayProperties.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRay();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      bosdyn_api_geometry_pb.Ray.serializeBinaryToWriter
    );
  }
  f = message.getFrame();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional Ray ray = 1;
 * @return {?proto.bosdyn.api.Ray}
 */
proto.bosdyn.api.RayProperties.prototype.getRay = function() {
  return /** @type{?proto.bosdyn.api.Ray} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_geometry_pb.Ray, 1));
};


/**
 * @param {?proto.bosdyn.api.Ray|undefined} value
 * @return {!proto.bosdyn.api.RayProperties} returns this
*/
proto.bosdyn.api.RayProperties.prototype.setRay = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.RayProperties} returns this
 */
proto.bosdyn.api.RayProperties.prototype.clearRay = function() {
  return this.setRay(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.RayProperties.prototype.hasRay = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string frame = 2;
 * @return {string}
 */
proto.bosdyn.api.RayProperties.prototype.getFrame = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.bosdyn.api.RayProperties} returns this
 */
proto.bosdyn.api.RayProperties.prototype.setFrame = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.BoundingBoxProperties.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.BoundingBoxProperties.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.BoundingBoxProperties} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.BoundingBoxProperties.toObject = function(includeInstance, msg) {
  var f, obj = {
    sizeEwrtFrame: (f = msg.getSizeEwrtFrame()) && bosdyn_api_geometry_pb.Vec3.toObject(includeInstance, f),
    frame: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.BoundingBoxProperties}
 */
proto.bosdyn.api.BoundingBoxProperties.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.BoundingBoxProperties;
  return proto.bosdyn.api.BoundingBoxProperties.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.BoundingBoxProperties} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.BoundingBoxProperties}
 */
proto.bosdyn.api.BoundingBoxProperties.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new bosdyn_api_geometry_pb.Vec3;
      reader.readMessage(value,bosdyn_api_geometry_pb.Vec3.deserializeBinaryFromReader);
      msg.setSizeEwrtFrame(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFrame(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.BoundingBoxProperties.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.BoundingBoxProperties.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.BoundingBoxProperties} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.BoundingBoxProperties.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSizeEwrtFrame();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      bosdyn_api_geometry_pb.Vec3.serializeBinaryToWriter
    );
  }
  f = message.getFrame();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional Vec3 size_ewrt_frame = 1;
 * @return {?proto.bosdyn.api.Vec3}
 */
proto.bosdyn.api.BoundingBoxProperties.prototype.getSizeEwrtFrame = function() {
  return /** @type{?proto.bosdyn.api.Vec3} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_geometry_pb.Vec3, 1));
};


/**
 * @param {?proto.bosdyn.api.Vec3|undefined} value
 * @return {!proto.bosdyn.api.BoundingBoxProperties} returns this
*/
proto.bosdyn.api.BoundingBoxProperties.prototype.setSizeEwrtFrame = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.BoundingBoxProperties} returns this
 */
proto.bosdyn.api.BoundingBoxProperties.prototype.clearSizeEwrtFrame = function() {
  return this.setSizeEwrtFrame(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.BoundingBoxProperties.prototype.hasSizeEwrtFrame = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string frame = 2;
 * @return {string}
 */
proto.bosdyn.api.BoundingBoxProperties.prototype.getFrame = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.bosdyn.api.BoundingBoxProperties} returns this
 */
proto.bosdyn.api.BoundingBoxProperties.prototype.setFrame = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.bosdyn.api.DrawableProperties.oneofGroups_ = [[4,5,6,7,8,9,10,11]];

/**
 * @enum {number}
 */
proto.bosdyn.api.DrawableProperties.DrawableCase = {
  DRAWABLE_NOT_SET: 0,
  FRAME: 4,
  SPHERE: 5,
  BOX: 6,
  ARROW: 7,
  CAPSULE: 8,
  CYLINDER: 9,
  LINESTRIP: 10,
  POINTS: 11
};

/**
 * @return {proto.bosdyn.api.DrawableProperties.DrawableCase}
 */
proto.bosdyn.api.DrawableProperties.prototype.getDrawableCase = function() {
  return /** @type {proto.bosdyn.api.DrawableProperties.DrawableCase} */(jspb.Message.computeOneofCase(this, proto.bosdyn.api.DrawableProperties.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.DrawableProperties.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.DrawableProperties.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.DrawableProperties} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.DrawableProperties.toObject = function(includeInstance, msg) {
  var f, obj = {
    color: (f = msg.getColor()) && proto.bosdyn.api.DrawableProperties.Color.toObject(includeInstance, f),
    label: jspb.Message.getFieldWithDefault(msg, 2, ""),
    wireframe: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    frame: (f = msg.getFrame()) && proto.bosdyn.api.DrawableFrame.toObject(includeInstance, f),
    sphere: (f = msg.getSphere()) && proto.bosdyn.api.DrawableSphere.toObject(includeInstance, f),
    box: (f = msg.getBox()) && proto.bosdyn.api.DrawableBox.toObject(includeInstance, f),
    arrow: (f = msg.getArrow()) && proto.bosdyn.api.DrawableArrow.toObject(includeInstance, f),
    capsule: (f = msg.getCapsule()) && proto.bosdyn.api.DrawableCapsule.toObject(includeInstance, f),
    cylinder: (f = msg.getCylinder()) && proto.bosdyn.api.DrawableCylinder.toObject(includeInstance, f),
    linestrip: (f = msg.getLinestrip()) && proto.bosdyn.api.DrawableLineStrip.toObject(includeInstance, f),
    points: (f = msg.getPoints()) && proto.bosdyn.api.DrawablePoints.toObject(includeInstance, f),
    frameNameDrawable: jspb.Message.getFieldWithDefault(msg, 12, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.DrawableProperties}
 */
proto.bosdyn.api.DrawableProperties.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.DrawableProperties;
  return proto.bosdyn.api.DrawableProperties.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.DrawableProperties} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.DrawableProperties}
 */
proto.bosdyn.api.DrawableProperties.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.bosdyn.api.DrawableProperties.Color;
      reader.readMessage(value,proto.bosdyn.api.DrawableProperties.Color.deserializeBinaryFromReader);
      msg.setColor(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWireframe(value);
      break;
    case 4:
      var value = new proto.bosdyn.api.DrawableFrame;
      reader.readMessage(value,proto.bosdyn.api.DrawableFrame.deserializeBinaryFromReader);
      msg.setFrame(value);
      break;
    case 5:
      var value = new proto.bosdyn.api.DrawableSphere;
      reader.readMessage(value,proto.bosdyn.api.DrawableSphere.deserializeBinaryFromReader);
      msg.setSphere(value);
      break;
    case 6:
      var value = new proto.bosdyn.api.DrawableBox;
      reader.readMessage(value,proto.bosdyn.api.DrawableBox.deserializeBinaryFromReader);
      msg.setBox(value);
      break;
    case 7:
      var value = new proto.bosdyn.api.DrawableArrow;
      reader.readMessage(value,proto.bosdyn.api.DrawableArrow.deserializeBinaryFromReader);
      msg.setArrow(value);
      break;
    case 8:
      var value = new proto.bosdyn.api.DrawableCapsule;
      reader.readMessage(value,proto.bosdyn.api.DrawableCapsule.deserializeBinaryFromReader);
      msg.setCapsule(value);
      break;
    case 9:
      var value = new proto.bosdyn.api.DrawableCylinder;
      reader.readMessage(value,proto.bosdyn.api.DrawableCylinder.deserializeBinaryFromReader);
      msg.setCylinder(value);
      break;
    case 10:
      var value = new proto.bosdyn.api.DrawableLineStrip;
      reader.readMessage(value,proto.bosdyn.api.DrawableLineStrip.deserializeBinaryFromReader);
      msg.setLinestrip(value);
      break;
    case 11:
      var value = new proto.bosdyn.api.DrawablePoints;
      reader.readMessage(value,proto.bosdyn.api.DrawablePoints.deserializeBinaryFromReader);
      msg.setPoints(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setFrameNameDrawable(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.DrawableProperties.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.DrawableProperties.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.DrawableProperties} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.DrawableProperties.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getColor();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.bosdyn.api.DrawableProperties.Color.serializeBinaryToWriter
    );
  }
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getWireframe();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getFrame();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.bosdyn.api.DrawableFrame.serializeBinaryToWriter
    );
  }
  f = message.getSphere();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.bosdyn.api.DrawableSphere.serializeBinaryToWriter
    );
  }
  f = message.getBox();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.bosdyn.api.DrawableBox.serializeBinaryToWriter
    );
  }
  f = message.getArrow();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.bosdyn.api.DrawableArrow.serializeBinaryToWriter
    );
  }
  f = message.getCapsule();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.bosdyn.api.DrawableCapsule.serializeBinaryToWriter
    );
  }
  f = message.getCylinder();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.bosdyn.api.DrawableCylinder.serializeBinaryToWriter
    );
  }
  f = message.getLinestrip();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.bosdyn.api.DrawableLineStrip.serializeBinaryToWriter
    );
  }
  f = message.getPoints();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.bosdyn.api.DrawablePoints.serializeBinaryToWriter
    );
  }
  f = message.getFrameNameDrawable();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.DrawableProperties.Color.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.DrawableProperties.Color.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.DrawableProperties.Color} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.DrawableProperties.Color.toObject = function(includeInstance, msg) {
  var f, obj = {
    r: jspb.Message.getFieldWithDefault(msg, 1, 0),
    g: jspb.Message.getFieldWithDefault(msg, 2, 0),
    b: jspb.Message.getFieldWithDefault(msg, 3, 0),
    a: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.DrawableProperties.Color}
 */
proto.bosdyn.api.DrawableProperties.Color.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.DrawableProperties.Color;
  return proto.bosdyn.api.DrawableProperties.Color.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.DrawableProperties.Color} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.DrawableProperties.Color}
 */
proto.bosdyn.api.DrawableProperties.Color.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setR(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setG(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setB(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setA(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.DrawableProperties.Color.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.DrawableProperties.Color.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.DrawableProperties.Color} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.DrawableProperties.Color.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getR();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getG();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getB();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getA();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
};


/**
 * optional int32 r = 1;
 * @return {number}
 */
proto.bosdyn.api.DrawableProperties.Color.prototype.getR = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.bosdyn.api.DrawableProperties.Color} returns this
 */
proto.bosdyn.api.DrawableProperties.Color.prototype.setR = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 g = 2;
 * @return {number}
 */
proto.bosdyn.api.DrawableProperties.Color.prototype.getG = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.bosdyn.api.DrawableProperties.Color} returns this
 */
proto.bosdyn.api.DrawableProperties.Color.prototype.setG = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 b = 3;
 * @return {number}
 */
proto.bosdyn.api.DrawableProperties.Color.prototype.getB = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.bosdyn.api.DrawableProperties.Color} returns this
 */
proto.bosdyn.api.DrawableProperties.Color.prototype.setB = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional double a = 4;
 * @return {number}
 */
proto.bosdyn.api.DrawableProperties.Color.prototype.getA = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.bosdyn.api.DrawableProperties.Color} returns this
 */
proto.bosdyn.api.DrawableProperties.Color.prototype.setA = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional Color color = 1;
 * @return {?proto.bosdyn.api.DrawableProperties.Color}
 */
proto.bosdyn.api.DrawableProperties.prototype.getColor = function() {
  return /** @type{?proto.bosdyn.api.DrawableProperties.Color} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.DrawableProperties.Color, 1));
};


/**
 * @param {?proto.bosdyn.api.DrawableProperties.Color|undefined} value
 * @return {!proto.bosdyn.api.DrawableProperties} returns this
*/
proto.bosdyn.api.DrawableProperties.prototype.setColor = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.DrawableProperties} returns this
 */
proto.bosdyn.api.DrawableProperties.prototype.clearColor = function() {
  return this.setColor(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.DrawableProperties.prototype.hasColor = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string label = 2;
 * @return {string}
 */
proto.bosdyn.api.DrawableProperties.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.bosdyn.api.DrawableProperties} returns this
 */
proto.bosdyn.api.DrawableProperties.prototype.setLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool wireframe = 3;
 * @return {boolean}
 */
proto.bosdyn.api.DrawableProperties.prototype.getWireframe = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.bosdyn.api.DrawableProperties} returns this
 */
proto.bosdyn.api.DrawableProperties.prototype.setWireframe = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional DrawableFrame frame = 4;
 * @return {?proto.bosdyn.api.DrawableFrame}
 */
proto.bosdyn.api.DrawableProperties.prototype.getFrame = function() {
  return /** @type{?proto.bosdyn.api.DrawableFrame} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.DrawableFrame, 4));
};


/**
 * @param {?proto.bosdyn.api.DrawableFrame|undefined} value
 * @return {!proto.bosdyn.api.DrawableProperties} returns this
*/
proto.bosdyn.api.DrawableProperties.prototype.setFrame = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.bosdyn.api.DrawableProperties.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.DrawableProperties} returns this
 */
proto.bosdyn.api.DrawableProperties.prototype.clearFrame = function() {
  return this.setFrame(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.DrawableProperties.prototype.hasFrame = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional DrawableSphere sphere = 5;
 * @return {?proto.bosdyn.api.DrawableSphere}
 */
proto.bosdyn.api.DrawableProperties.prototype.getSphere = function() {
  return /** @type{?proto.bosdyn.api.DrawableSphere} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.DrawableSphere, 5));
};


/**
 * @param {?proto.bosdyn.api.DrawableSphere|undefined} value
 * @return {!proto.bosdyn.api.DrawableProperties} returns this
*/
proto.bosdyn.api.DrawableProperties.prototype.setSphere = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.bosdyn.api.DrawableProperties.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.DrawableProperties} returns this
 */
proto.bosdyn.api.DrawableProperties.prototype.clearSphere = function() {
  return this.setSphere(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.DrawableProperties.prototype.hasSphere = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional DrawableBox box = 6;
 * @return {?proto.bosdyn.api.DrawableBox}
 */
proto.bosdyn.api.DrawableProperties.prototype.getBox = function() {
  return /** @type{?proto.bosdyn.api.DrawableBox} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.DrawableBox, 6));
};


/**
 * @param {?proto.bosdyn.api.DrawableBox|undefined} value
 * @return {!proto.bosdyn.api.DrawableProperties} returns this
*/
proto.bosdyn.api.DrawableProperties.prototype.setBox = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.bosdyn.api.DrawableProperties.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.DrawableProperties} returns this
 */
proto.bosdyn.api.DrawableProperties.prototype.clearBox = function() {
  return this.setBox(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.DrawableProperties.prototype.hasBox = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional DrawableArrow arrow = 7;
 * @return {?proto.bosdyn.api.DrawableArrow}
 */
proto.bosdyn.api.DrawableProperties.prototype.getArrow = function() {
  return /** @type{?proto.bosdyn.api.DrawableArrow} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.DrawableArrow, 7));
};


/**
 * @param {?proto.bosdyn.api.DrawableArrow|undefined} value
 * @return {!proto.bosdyn.api.DrawableProperties} returns this
*/
proto.bosdyn.api.DrawableProperties.prototype.setArrow = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.bosdyn.api.DrawableProperties.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.DrawableProperties} returns this
 */
proto.bosdyn.api.DrawableProperties.prototype.clearArrow = function() {
  return this.setArrow(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.DrawableProperties.prototype.hasArrow = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional DrawableCapsule capsule = 8;
 * @return {?proto.bosdyn.api.DrawableCapsule}
 */
proto.bosdyn.api.DrawableProperties.prototype.getCapsule = function() {
  return /** @type{?proto.bosdyn.api.DrawableCapsule} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.DrawableCapsule, 8));
};


/**
 * @param {?proto.bosdyn.api.DrawableCapsule|undefined} value
 * @return {!proto.bosdyn.api.DrawableProperties} returns this
*/
proto.bosdyn.api.DrawableProperties.prototype.setCapsule = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.bosdyn.api.DrawableProperties.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.DrawableProperties} returns this
 */
proto.bosdyn.api.DrawableProperties.prototype.clearCapsule = function() {
  return this.setCapsule(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.DrawableProperties.prototype.hasCapsule = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional DrawableCylinder cylinder = 9;
 * @return {?proto.bosdyn.api.DrawableCylinder}
 */
proto.bosdyn.api.DrawableProperties.prototype.getCylinder = function() {
  return /** @type{?proto.bosdyn.api.DrawableCylinder} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.DrawableCylinder, 9));
};


/**
 * @param {?proto.bosdyn.api.DrawableCylinder|undefined} value
 * @return {!proto.bosdyn.api.DrawableProperties} returns this
*/
proto.bosdyn.api.DrawableProperties.prototype.setCylinder = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.bosdyn.api.DrawableProperties.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.DrawableProperties} returns this
 */
proto.bosdyn.api.DrawableProperties.prototype.clearCylinder = function() {
  return this.setCylinder(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.DrawableProperties.prototype.hasCylinder = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional DrawableLineStrip linestrip = 10;
 * @return {?proto.bosdyn.api.DrawableLineStrip}
 */
proto.bosdyn.api.DrawableProperties.prototype.getLinestrip = function() {
  return /** @type{?proto.bosdyn.api.DrawableLineStrip} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.DrawableLineStrip, 10));
};


/**
 * @param {?proto.bosdyn.api.DrawableLineStrip|undefined} value
 * @return {!proto.bosdyn.api.DrawableProperties} returns this
*/
proto.bosdyn.api.DrawableProperties.prototype.setLinestrip = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.bosdyn.api.DrawableProperties.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.DrawableProperties} returns this
 */
proto.bosdyn.api.DrawableProperties.prototype.clearLinestrip = function() {
  return this.setLinestrip(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.DrawableProperties.prototype.hasLinestrip = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional DrawablePoints points = 11;
 * @return {?proto.bosdyn.api.DrawablePoints}
 */
proto.bosdyn.api.DrawableProperties.prototype.getPoints = function() {
  return /** @type{?proto.bosdyn.api.DrawablePoints} */ (
    jspb.Message.getWrapperField(this, proto.bosdyn.api.DrawablePoints, 11));
};


/**
 * @param {?proto.bosdyn.api.DrawablePoints|undefined} value
 * @return {!proto.bosdyn.api.DrawableProperties} returns this
*/
proto.bosdyn.api.DrawableProperties.prototype.setPoints = function(value) {
  return jspb.Message.setOneofWrapperField(this, 11, proto.bosdyn.api.DrawableProperties.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.DrawableProperties} returns this
 */
proto.bosdyn.api.DrawableProperties.prototype.clearPoints = function() {
  return this.setPoints(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.DrawableProperties.prototype.hasPoints = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string frame_name_drawable = 12;
 * @return {string}
 */
proto.bosdyn.api.DrawableProperties.prototype.getFrameNameDrawable = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.bosdyn.api.DrawableProperties} returns this
 */
proto.bosdyn.api.DrawableProperties.prototype.setFrameNameDrawable = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.DrawableFrame.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.DrawableFrame.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.DrawableFrame} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.DrawableFrame.toObject = function(includeInstance, msg) {
  var f, obj = {
    arrowLength: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    arrowRadius: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.DrawableFrame}
 */
proto.bosdyn.api.DrawableFrame.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.DrawableFrame;
  return proto.bosdyn.api.DrawableFrame.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.DrawableFrame} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.DrawableFrame}
 */
proto.bosdyn.api.DrawableFrame.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setArrowLength(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setArrowRadius(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.DrawableFrame.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.DrawableFrame.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.DrawableFrame} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.DrawableFrame.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getArrowLength();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getArrowRadius();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
};


/**
 * optional double arrow_length = 1;
 * @return {number}
 */
proto.bosdyn.api.DrawableFrame.prototype.getArrowLength = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.bosdyn.api.DrawableFrame} returns this
 */
proto.bosdyn.api.DrawableFrame.prototype.setArrowLength = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional double arrow_radius = 2;
 * @return {number}
 */
proto.bosdyn.api.DrawableFrame.prototype.getArrowRadius = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.bosdyn.api.DrawableFrame} returns this
 */
proto.bosdyn.api.DrawableFrame.prototype.setArrowRadius = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.DrawableSphere.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.DrawableSphere.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.DrawableSphere} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.DrawableSphere.toObject = function(includeInstance, msg) {
  var f, obj = {
    radius: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.DrawableSphere}
 */
proto.bosdyn.api.DrawableSphere.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.DrawableSphere;
  return proto.bosdyn.api.DrawableSphere.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.DrawableSphere} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.DrawableSphere}
 */
proto.bosdyn.api.DrawableSphere.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRadius(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.DrawableSphere.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.DrawableSphere.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.DrawableSphere} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.DrawableSphere.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRadius();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
};


/**
 * optional double radius = 1;
 * @return {number}
 */
proto.bosdyn.api.DrawableSphere.prototype.getRadius = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.bosdyn.api.DrawableSphere} returns this
 */
proto.bosdyn.api.DrawableSphere.prototype.setRadius = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.DrawableBox.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.DrawableBox.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.DrawableBox} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.DrawableBox.toObject = function(includeInstance, msg) {
  var f, obj = {
    size: (f = msg.getSize()) && bosdyn_api_geometry_pb.Vec3.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.DrawableBox}
 */
proto.bosdyn.api.DrawableBox.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.DrawableBox;
  return proto.bosdyn.api.DrawableBox.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.DrawableBox} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.DrawableBox}
 */
proto.bosdyn.api.DrawableBox.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new bosdyn_api_geometry_pb.Vec3;
      reader.readMessage(value,bosdyn_api_geometry_pb.Vec3.deserializeBinaryFromReader);
      msg.setSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.DrawableBox.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.DrawableBox.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.DrawableBox} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.DrawableBox.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSize();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      bosdyn_api_geometry_pb.Vec3.serializeBinaryToWriter
    );
  }
};


/**
 * optional Vec3 size = 1;
 * @return {?proto.bosdyn.api.Vec3}
 */
proto.bosdyn.api.DrawableBox.prototype.getSize = function() {
  return /** @type{?proto.bosdyn.api.Vec3} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_geometry_pb.Vec3, 1));
};


/**
 * @param {?proto.bosdyn.api.Vec3|undefined} value
 * @return {!proto.bosdyn.api.DrawableBox} returns this
*/
proto.bosdyn.api.DrawableBox.prototype.setSize = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.DrawableBox} returns this
 */
proto.bosdyn.api.DrawableBox.prototype.clearSize = function() {
  return this.setSize(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.DrawableBox.prototype.hasSize = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.DrawableArrow.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.DrawableArrow.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.DrawableArrow} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.DrawableArrow.toObject = function(includeInstance, msg) {
  var f, obj = {
    direction: (f = msg.getDirection()) && bosdyn_api_geometry_pb.Vec3.toObject(includeInstance, f),
    radius: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.DrawableArrow}
 */
proto.bosdyn.api.DrawableArrow.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.DrawableArrow;
  return proto.bosdyn.api.DrawableArrow.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.DrawableArrow} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.DrawableArrow}
 */
proto.bosdyn.api.DrawableArrow.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new bosdyn_api_geometry_pb.Vec3;
      reader.readMessage(value,bosdyn_api_geometry_pb.Vec3.deserializeBinaryFromReader);
      msg.setDirection(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRadius(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.DrawableArrow.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.DrawableArrow.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.DrawableArrow} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.DrawableArrow.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDirection();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      bosdyn_api_geometry_pb.Vec3.serializeBinaryToWriter
    );
  }
  f = message.getRadius();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
};


/**
 * optional Vec3 direction = 1;
 * @return {?proto.bosdyn.api.Vec3}
 */
proto.bosdyn.api.DrawableArrow.prototype.getDirection = function() {
  return /** @type{?proto.bosdyn.api.Vec3} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_geometry_pb.Vec3, 1));
};


/**
 * @param {?proto.bosdyn.api.Vec3|undefined} value
 * @return {!proto.bosdyn.api.DrawableArrow} returns this
*/
proto.bosdyn.api.DrawableArrow.prototype.setDirection = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.DrawableArrow} returns this
 */
proto.bosdyn.api.DrawableArrow.prototype.clearDirection = function() {
  return this.setDirection(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.DrawableArrow.prototype.hasDirection = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double radius = 2;
 * @return {number}
 */
proto.bosdyn.api.DrawableArrow.prototype.getRadius = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.bosdyn.api.DrawableArrow} returns this
 */
proto.bosdyn.api.DrawableArrow.prototype.setRadius = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.DrawableCapsule.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.DrawableCapsule.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.DrawableCapsule} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.DrawableCapsule.toObject = function(includeInstance, msg) {
  var f, obj = {
    direction: (f = msg.getDirection()) && bosdyn_api_geometry_pb.Vec3.toObject(includeInstance, f),
    radius: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.DrawableCapsule}
 */
proto.bosdyn.api.DrawableCapsule.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.DrawableCapsule;
  return proto.bosdyn.api.DrawableCapsule.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.DrawableCapsule} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.DrawableCapsule}
 */
proto.bosdyn.api.DrawableCapsule.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new bosdyn_api_geometry_pb.Vec3;
      reader.readMessage(value,bosdyn_api_geometry_pb.Vec3.deserializeBinaryFromReader);
      msg.setDirection(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRadius(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.DrawableCapsule.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.DrawableCapsule.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.DrawableCapsule} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.DrawableCapsule.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDirection();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      bosdyn_api_geometry_pb.Vec3.serializeBinaryToWriter
    );
  }
  f = message.getRadius();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
};


/**
 * optional Vec3 direction = 1;
 * @return {?proto.bosdyn.api.Vec3}
 */
proto.bosdyn.api.DrawableCapsule.prototype.getDirection = function() {
  return /** @type{?proto.bosdyn.api.Vec3} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_geometry_pb.Vec3, 1));
};


/**
 * @param {?proto.bosdyn.api.Vec3|undefined} value
 * @return {!proto.bosdyn.api.DrawableCapsule} returns this
*/
proto.bosdyn.api.DrawableCapsule.prototype.setDirection = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.DrawableCapsule} returns this
 */
proto.bosdyn.api.DrawableCapsule.prototype.clearDirection = function() {
  return this.setDirection(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.DrawableCapsule.prototype.hasDirection = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double radius = 2;
 * @return {number}
 */
proto.bosdyn.api.DrawableCapsule.prototype.getRadius = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.bosdyn.api.DrawableCapsule} returns this
 */
proto.bosdyn.api.DrawableCapsule.prototype.setRadius = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.DrawableCylinder.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.DrawableCylinder.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.DrawableCylinder} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.DrawableCylinder.toObject = function(includeInstance, msg) {
  var f, obj = {
    direction: (f = msg.getDirection()) && bosdyn_api_geometry_pb.Vec3.toObject(includeInstance, f),
    radius: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.DrawableCylinder}
 */
proto.bosdyn.api.DrawableCylinder.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.DrawableCylinder;
  return proto.bosdyn.api.DrawableCylinder.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.DrawableCylinder} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.DrawableCylinder}
 */
proto.bosdyn.api.DrawableCylinder.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new bosdyn_api_geometry_pb.Vec3;
      reader.readMessage(value,bosdyn_api_geometry_pb.Vec3.deserializeBinaryFromReader);
      msg.setDirection(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRadius(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.DrawableCylinder.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.DrawableCylinder.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.DrawableCylinder} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.DrawableCylinder.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDirection();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      bosdyn_api_geometry_pb.Vec3.serializeBinaryToWriter
    );
  }
  f = message.getRadius();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
};


/**
 * optional Vec3 direction = 1;
 * @return {?proto.bosdyn.api.Vec3}
 */
proto.bosdyn.api.DrawableCylinder.prototype.getDirection = function() {
  return /** @type{?proto.bosdyn.api.Vec3} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_geometry_pb.Vec3, 1));
};


/**
 * @param {?proto.bosdyn.api.Vec3|undefined} value
 * @return {!proto.bosdyn.api.DrawableCylinder} returns this
*/
proto.bosdyn.api.DrawableCylinder.prototype.setDirection = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.DrawableCylinder} returns this
 */
proto.bosdyn.api.DrawableCylinder.prototype.clearDirection = function() {
  return this.setDirection(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.DrawableCylinder.prototype.hasDirection = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double radius = 2;
 * @return {number}
 */
proto.bosdyn.api.DrawableCylinder.prototype.getRadius = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.bosdyn.api.DrawableCylinder} returns this
 */
proto.bosdyn.api.DrawableCylinder.prototype.setRadius = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.DrawableLineStrip.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.DrawableLineStrip.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.DrawableLineStrip} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.DrawableLineStrip.toObject = function(includeInstance, msg) {
  var f, obj = {
    points: (f = msg.getPoints()) && bosdyn_api_geometry_pb.Vec3.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.DrawableLineStrip}
 */
proto.bosdyn.api.DrawableLineStrip.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.DrawableLineStrip;
  return proto.bosdyn.api.DrawableLineStrip.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.DrawableLineStrip} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.DrawableLineStrip}
 */
proto.bosdyn.api.DrawableLineStrip.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new bosdyn_api_geometry_pb.Vec3;
      reader.readMessage(value,bosdyn_api_geometry_pb.Vec3.deserializeBinaryFromReader);
      msg.setPoints(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.DrawableLineStrip.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.DrawableLineStrip.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.DrawableLineStrip} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.DrawableLineStrip.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPoints();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      bosdyn_api_geometry_pb.Vec3.serializeBinaryToWriter
    );
  }
};


/**
 * optional Vec3 points = 1;
 * @return {?proto.bosdyn.api.Vec3}
 */
proto.bosdyn.api.DrawableLineStrip.prototype.getPoints = function() {
  return /** @type{?proto.bosdyn.api.Vec3} */ (
    jspb.Message.getWrapperField(this, bosdyn_api_geometry_pb.Vec3, 1));
};


/**
 * @param {?proto.bosdyn.api.Vec3|undefined} value
 * @return {!proto.bosdyn.api.DrawableLineStrip} returns this
*/
proto.bosdyn.api.DrawableLineStrip.prototype.setPoints = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bosdyn.api.DrawableLineStrip} returns this
 */
proto.bosdyn.api.DrawableLineStrip.prototype.clearPoints = function() {
  return this.setPoints(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bosdyn.api.DrawableLineStrip.prototype.hasPoints = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bosdyn.api.DrawablePoints.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bosdyn.api.DrawablePoints.prototype.toObject = function(opt_includeInstance) {
  return proto.bosdyn.api.DrawablePoints.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bosdyn.api.DrawablePoints} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.DrawablePoints.toObject = function(includeInstance, msg) {
  var f, obj = {
    pointsList: jspb.Message.toObjectList(msg.getPointsList(),
    bosdyn_api_geometry_pb.Vec3.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bosdyn.api.DrawablePoints}
 */
proto.bosdyn.api.DrawablePoints.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bosdyn.api.DrawablePoints;
  return proto.bosdyn.api.DrawablePoints.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bosdyn.api.DrawablePoints} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bosdyn.api.DrawablePoints}
 */
proto.bosdyn.api.DrawablePoints.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new bosdyn_api_geometry_pb.Vec3;
      reader.readMessage(value,bosdyn_api_geometry_pb.Vec3.deserializeBinaryFromReader);
      msg.addPoints(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bosdyn.api.DrawablePoints.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bosdyn.api.DrawablePoints.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bosdyn.api.DrawablePoints} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bosdyn.api.DrawablePoints.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPointsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      bosdyn_api_geometry_pb.Vec3.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Vec3 points = 1;
 * @return {!Array<!proto.bosdyn.api.Vec3>}
 */
proto.bosdyn.api.DrawablePoints.prototype.getPointsList = function() {
  return /** @type{!Array<!proto.bosdyn.api.Vec3>} */ (
    jspb.Message.getRepeatedWrapperField(this, bosdyn_api_geometry_pb.Vec3, 1));
};


/**
 * @param {!Array<!proto.bosdyn.api.Vec3>} value
 * @return {!proto.bosdyn.api.DrawablePoints} returns this
*/
proto.bosdyn.api.DrawablePoints.prototype.setPointsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.bosdyn.api.Vec3=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bosdyn.api.Vec3}
 */
proto.bosdyn.api.DrawablePoints.prototype.addPoints = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.bosdyn.api.Vec3, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bosdyn.api.DrawablePoints} returns this
 */
proto.bosdyn.api.DrawablePoints.prototype.clearPointsList = function() {
  return this.setPointsList([]);
};


/**
 * @enum {number}
 */
proto.bosdyn.api.WorldObjectType = {
  WORLD_OBJECT_UNKNOWN: 0,
  WORLD_OBJECT_DRAWABLE: 1,
  WORLD_OBJECT_APRILTAG: 2,
  WORLD_OBJECT_IMAGE_COORDINATES: 5,
  WORLD_OBJECT_DOCK: 6
};

goog.object.extend(exports, proto.bosdyn.api);
